{
"questions":[
    {
"suggestions": [], "answer": "bibliography", "question": " This lists documents that were referred to during the preparation of the standard.", "category": "INTRODUCTION. INTRODUCTION", "alternativeSpellings": [], "id":"1"}
    ,
    {
"category": "TERMS, DEFINITIONS, AND SYMBOLS", "question": " An example of this behavior is the propagation of the high-order bit when a signed integer is shifted right.", "suggestions": [], "answer": "implementation-defined", "id": "2", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "3", "question": " An example of this behavior is whether the islower function returns true for characters other than the 26 lowercase Latin letters.", "category": "TERMS, DEFINITIONS, AND SYMBOLS", "suggestions": [], "answer":"locale-specific"}
    ,
    {
"alternativeSpellings": [], "id": "4", "answer": "undefined", "suggestions": [], "question": " An example of this behavior is the behavior on integer overflow.", "category":"TERMS, DEFINITIONS, AND SYMBOLS"}
    ,
    {
"suggestions": [], "answer": "unspecified", "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question": " This behavior is the behavior where the standard provides two or more possibilities and imposes no further requirements on which is chosen in any instance.", "id": "5", "alternativeSpellings":[]}
    ,
    {
"answer": "unspecified", "suggestions": [], "question": " An example of this behavior is the order in which the arguments to a function are evaluated.", "category": "TERMS, DEFINITIONS, AND SYMBOLS", "alternativeSpellings": [], "id":"6"}
    ,
    {
"question": " A byte is composed of a contiguous sequence of these.", "category": "TERMS, DEFINITIONS, AND SYMBOLS", "suggestions": [], "answer": "bits", "alternativeSpellings": [], "id":"7"}
    ,
    {
"id": "8", "alternativeSpellings": [], "answer": "implementation-defined", "suggestions": [], "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question":" A byte is composed of a contiguous sequence of bits, the number of which is this."}
    ,
    {
"id": "9", "alternativeSpellings": [], "answer": "low-order bit", "suggestions": [], "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question":" The least significant bit is called this."}
    ,
    {
"suggestions": [], "answer": "high-order bit", "question": " The most significant bit is called this.", "category": "TERMS, DEFINITIONS, AND SYMBOLS", "alternativeSpellings": [], "id":"10"}
    ,
    {
"answer": "lsb", "suggestions": [], "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question": " The low-order bit is also known as this.", "id": "11", "alternativeSpellings":[]}
    ,
    {
"answer": "msb", "suggestions": [], "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question": " The high-order bit is also known as this.", "id": "12", "alternativeSpellings":[]}
    ,
    {
"id": "13", "alternativeSpellings": [], "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question": " This is a region of data storage in the execution environment, the contents of which can represent values.", "suggestions": [], "answer":"object"}
    ,
    {
"id": "14", "alternativeSpellings": [], "category": "TERMS, DEFINITIONS, AND SYMBOLS", "question": " An object is a region of data storage in the execution environment, the contents of which can represent these.", "suggestions": [], "answer":"values"}
    ,
    {
"suggestions": [], "answer": "requirement", "question": " In the standard, ``shall'' is to be interpreted as this on an implementation, or on a program.", "category": "CONFORMANCE", "alternativeSpellings": [], "id":"15"}
    ,
    {
"alternativeSpellings": [], "id": "16", "question": " In the standard, ``shall not'' is to be interpreted as this on an implementation, or on a program.", "category": "CONFORMANCE", "answer": "prohibition", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "shall", "question": " In the standard, this phrase is to be interpreted as a requirement on an implementation, or on a program.", "category": "CONFORMANCE", "alternativeSpellings": [], "id":"17"}
    ,
    {
"answer": "shall not", "suggestions": [], "category": "CONFORMANCE", "question": " In the standard, this phrase is to be interpreted as a prohibition on an implementation, or on a program.", "id": "18", "alternativeSpellings":[]}
    ,
    {
"category": "CONFORMANCE", "question": " If a ``shall'' or ``shall not'' requirement that appears outside of a constraint or runtime-constraint is violated, the behavior is this.", "suggestions": [], "answer": "undefined", "id": "19", "alternativeSpellings":[]}
    ,
    {
"id": "20", "alternativeSpellings": [], "category": "CONFORMANCE", "question": " A program that is correct, operates on correct data, and possibly containing unspecified behavior, shall be this kind of program.", "suggestions": [], "answer":"portable"}
    ,
    {
"id": "21", "alternativeSpellings": [], "category": "CONFORMANCE", "question": " The implementation shall not successfully translate a preprocessing translation unit containing this preprocessing directive unless it is part of a group skipped by conditional inclusion.", "answer": "#error", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "strictly conforming", "category": "CONFORMANCE", "question": " This kind of program shall use only those features of the language and library specified in this International Standard. It shall not produce output dependent on any unspecified, undefined, or implementation-defined behavior, and shall not exceed any minimum implementation limit.", "id": "22", "alternativeSpellings":[]}
    ,
    {
"id": "23", "alternativeSpellings": [], "category": "CONFORMANCE", "question": " The two forms of conforming implementation are these (name both, separated with \"and\").", "answer": "hosted and freestanding", "suggestions":[]}
    ,
    {
"category": "CONFORMANCE", "question": " A conforming hosted implementation shall accept any kind of this program.", "suggestions": ["COMPLIANT"], "answer": "STRICTLY CONFORMING", "id": "24", "alternativeSpellings":[]}
    ,
    {
"id": "25", "alternativeSpellings": [], "category": "CONFORMANCE", "question": " This kind of conforming implementation shall accept any strictly conforming program in which the use of the library features is confined to the contents of the standard headers <float.h>, <iso646.h>, <limits.h>, <stdalign.h>, <stdarg.h>, <stdbool.h>, <stddef.h>, <stdint.h>, and <stdnoreturn.h>.", "suggestions": [], "answer":"freestanding"}
    ,
    {
"question": " A conforming program is one that is acceptable to a conforming this.", "category": "CONFORMANCE", "suggestions": [], "answer": "compiler", "alternativeSpellings": [], "id":"26"}
    ,
    {
"suggestions": [], "answer": "extensions", "question": " A conforming implementation may have these (including additional library functions), provided they do not alter the behavior of any strictly conforming program.", "category": "CONFORMANCE", "alternativeSpellings": [], "id":"27"}
    ,
    {
"question": " An implementation shall be accompanied by this that defines all implementation-defined and locale-specific characteristics and all extensions.", "category": "CONFORMANCE", "answer": "documentation", "suggestions": [], "alternativeSpellings": [], "id":"28"}
    ,
    {
"id": "29", "alternativeSpellings": [], "suggestions": [], "answer": "translation and execution", "category": "ENVIRONMENT", "question":" An implementation translates C source files and executes C programs in two data-processing-system environments, which will be called these environments (name both, separated by \"and\")."}
    ,
    {
"id": "30", "alternativeSpellings": [], "suggestions": [], "answer": "#include", "category": "PROGRAM STRUCTURE", "question":" A source file together with all the headers and source files included via this preprocessing directive is known as a preprocessing translation unit."}
    ,
    {
"answer": "preprocessing translation unit", "suggestions": [], "category": "PROGRAM STRUCTURE", "question": " A source file together with all the headers and source files included via the preprocessing directive #include is known as this.", "id": "31", "alternativeSpellings":[]}
    ,
    {
"id": "32", "alternativeSpellings": [], "answer": "preprocessing", "suggestions": [], "category": "PROGRAM STRUCTURE", "question":" After this occurs, a preprocessing translation unit is called a translation unit."}
    ,
    {
"category": "PROGRAM STRUCTURE", "question": " After preprocessing, a preprocessing translation unit is called this.", "suggestions": [], "answer": "translation unit", "id": "33", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "new-line", "question": " A source file that is not empty shall end with this character.", "category": "TRANSLATION PHASES", "alternativeSpellings": [], "id":"34"}
    ,
    {
"id": "35", "alternativeSpellings": [], "category": "TRANSLATION PHASES", "question": " A source file shall not end in a partial this.", "answer": "preprocessing token", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "36", "question": " If a character sequence that matches the syntax of a universal character name is produced by token concatenation, the behavior is this.", "category": "TRANSLATION PHASES", "answer": "undefined", "suggestions":[]}
    ,
    {
"id": "37", "alternativeSpellings": [], "category": "TRANSLATION PHASES", "question": " Source files, translation units, and translated translation units need not necessarily be stored as this.", "answer": "files", "suggestions":[]}
    ,
    {
"id": "38", "alternativeSpellings": [], "category": "DIAGNOSTICS", "question": " A conforming implementation shall produce at least one of this (identified in an implementation-defined manner) if a preprocessing translation unit or translation unit contains a violation of any syntax rule or constraint, even if the behavior is also explicitly specified as undefined or implementation-defined.", "answer": "diagnostic message", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "39", "suggestions": [], "answer": "diagnostic message", "question": " An implementation shall issue this for the translation unit: char i; int i; because in those cases where wording in this International Standard describes the behavior for a construct as being both a constraint error and resulting in undefined behavior, the constraint error shall be diagnosed.", "category":"DIAGNOSTICS"}
    ,
    {
"question": " Two execution environments are defined: freestanding and hosted. In both cases, program startup occurs when this is called by the execution environment.", "category": "EXECUTION ENVIRONMENTS", "answer": "designated C function", "suggestions": [], "alternativeSpellings": [], "id":"40"}
    ,
    {
"answer": "initialized", "suggestions": [], "category": "EXECUTION ENVIRONMENTS", "question": " All objects with static storage duration shall be this before program startup.", "id": "41", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "static", "category": "EXECUTION ENVIRONMENTS", "question": " All objects with this storage duration shall be initialized (set to their initial values) before program startup.", "id": "42", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "43", "question": " In this execution environment, the function called at program startup is named main.", "category": "PROGRAM STARTUP", "suggestions": [], "answer":"hosted"}
    ,
    {
"id": "44", "alternativeSpellings": [], "answer": "main", "suggestions": [], "category": "PROGRAM STARTUP", "question":" In a hosted execution environment, the function called at program startup is named this."}
    ,
    {
"id": "45", "alternativeSpellings": [], "category": "PROGRAM STARTUP", "question": " The main function shall be defined with a return type of this.", "answer": "int", "suggestions":[]}
    ,
    {
"id": "46", "alternativeSpellings": [], "suggestions": [], "answer": "nonnegative", "category": "PROGRAM STARTUP", "question":" If they are declared, the parameters to the main function shall obey the following constraints: The value of argc shall be this; argv[argc] shall be a null pointer."}
    ,
    {
"category": "PROGRAM STARTUP", "question": " If they are declared, the parameters to the main function shall obey the following constraints: The value of argc shall be nonnegative; argv[argc] shall be this.", "suggestions": [], "answer": "null pointer", "id": "47", "alternativeSpellings":[]}
    ,
    {
"question": " If the value of argc is this, the array members argv[0] through argv[argc-1] inclusive shall contain pointers to strings, which are given implementation-defined values by the host environment prior to program startup.", "category": "PROGRAM STARTUP", "answer": "greater than zero", "suggestions": [], "alternativeSpellings": [], "id":"48"}
    ,
    {
"alternativeSpellings": [], "id": "49", "answer": "lowercase", "suggestions": [], "question": " If the host environment is not capable of supplying strings with letters in both uppercase and lowercase, the implementation shall ensure that the strings are received in this case.", "category":"PROGRAM STARTUP"}
    ,
    {
"question": " If the value of argc is this, the string pointed to by argv[0] represents the program name.", "category": "PROGRAM STARTUP", "answer": "greater than zero", "suggestions": [], "alternativeSpellings": [], "id":"50"}
    ,
    {
"id": "51", "alternativeSpellings": [], "answer": "program name", "suggestions": [], "category": "PROGRAM STARTUP", "question":" If the value of argc is greater than zero, the string pointed to by argv[0] represents this."}
    ,
    {
"alternativeSpellings": [], "id": "52", "answer": "NULL CHARACTER", "suggestions": ["NULL", "ZERO"], "question": " If the value of argc is greater than zero, the string pointed to by argv[0] represents the program name; argv[0][0] shall be this if the program name is not available from the host environment.", "category":"PROGRAM STARTUP"}
    ,
    {
"id": "53", "alternativeSpellings": [], "answer": "greater than one", "suggestions": [], "category": "PROGRAM STARTUP", "question":" If the value of argc is this, the strings pointed to by argv[1] through argv[argc-1] represent the program parameters."}
    ,
    {
"alternativeSpellings": [], "id": "54", "answer": "program parameters", "suggestions": [], "question": " If the value of argc is greater than one, the strings pointed to by argv[1] through argv[argc-1] represent this.", "category":"PROGRAM STARTUP"}
    ,
    {
"alternativeSpellings": [], "id": "55", "suggestions": [], "answer": "int", "question": " If the return type of the main function is a type compatible with this, a return from the initial call to the main function is equivalent to calling the exit function with the value returned by the main function as its argument.", "category":"PROGRAM TERMINATION"}
    ,
    {
"alternativeSpellings": [], "id": "56", "question": " If the return type of the main function is a type compatible with int, a return from the initial call to the main function is equivalent to calling this function with the value returned by the main function as its argument.", "category": "PROGRAM TERMINATION", "answer": "EXIT", "suggestions":[]}
    ,
    {
"answer": "zero", "suggestions": [], "question": " Reaching the } that terminates the main function returns this value.", "category": "PROGRAM TERMINATION", "alternativeSpellings": [], "id":"57"}
    ,
    {
"category": "PROGRAM TERMINATION", "question": " If the return type is not compatible with int, the termination status returned to the host environment is this.", "answer": "UNSPECIFIED", "suggestions": ["IMPLEMENTATION DEFINED"], "id": "58", "alternativeSpellings":[]}
    ,
    {
"category": "PROGRAM EXECUTION", "question": " The semantic descriptions in the standard describe the behavior of this in which issues of optimization are irrelevant.", "suggestions": [], "answer": "abstract machine", "id": "59", "alternativeSpellings":[]}
    ,
    {
"category": "PROGRAM EXECUTION", "question": " The semantic descriptions in the standard describe the behavior of an abstract machine in which issues of this are irrelevant.", "answer": "optimization", "suggestions": [], "id": "60", "alternativeSpellings":[]}
    ,
    {
"id": "61", "alternativeSpellings": [], "answer": "irrelevant", "suggestions": [], "category": "PROGRAM EXECUTION", "question":" The semantic descriptions in the standard describe the behavior of an abstract machine in which issues of optimization are this."}
    ,
    {
"suggestions": [], "answer": "sequenced", "category": "PROGRAM EXECUTION", "question": " Given any two evaluations A and B, if A is this before B, then the execution of A shall precede the execution of B.", "id": "62", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "63", "question": " Given any two evaluations A and B, if A is not sequenced before or after B, then A and B are this.", "category": "PROGRAM EXECUTION", "answer": "unsequenced", "suggestions":[]}
    ,
    {
"id": "64", "alternativeSpellings": [], "suggestions": [], "answer": "indeterminately sequenced", "category": "PROGRAM EXECUTION", "question":" Given any two evaluations A and B, A and B are this when A is sequenced either before or after B, but it is unspecified which."}
    ,
    {
"id": "65", "alternativeSpellings": [], "suggestions": [], "answer": "sequence point", "category": "PROGRAM EXECUTION", "question":" The presence of this between the evaluation of expressions A and B implies that every value computation and side effect associated with A is sequenced before every value computation and side effect associated with B."}
    ,
    {
"question": " An actual implementation need not evaluate part of an expression if it can deduce that its value is not used and that no needed these are produced.", "category": "PROGRAM EXECUTION", "suggestions": [], "answer": "side effects", "alternativeSpellings": [], "id":"66"}
    ,
    {
"alternativeSpellings": [], "id": "67", "question": " When the processing of the abstract machine is interrupted by receipt of this, the values of objects that are neither lock-free atomic objects nor of type volatile sig_atomic_t are unspecified, as is the state of the floating-point environment.", "category": "PROGRAM EXECUTION", "answer": "signal", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "68", "question": " When the processing of the abstract machine is interrupted by receipt of a signal, the values of objects that are neither lock-free atomic objects nor of type volatile sig_atomic_t are this, as is the state of the floating-point environment.", "category": "PROGRAM EXECUTION", "answer": "unspecified", "suggestions":[]}
    ,
    {
"answer": "identical", "suggestions": [], "question": " At program termination, all data written into files shall be this to the result that execution of the program according to the abstract semantics would have produced.", "category": "PROGRAM EXECUTION", "alternativeSpellings": [], "id":"69"}
    ,
    {
"category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "question": " A synchronization operation on one or more memory locations is either an acquire operation, a release operation, both an acquire and release operation, or this operation.", "suggestions": [], "answer": "consume", "id": "70", "alternativeSpellings":[]}
    ,
    {
"id": "71", "alternativeSpellings": [], "category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "question": " This kind of operation on one or more memory locations is either an acquire operation, a release operation, both an acquire and release operation, or a consume operation.", "answer": "synchronization", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "72", "answer": "associated memory location", "suggestions": [], "question": " A synchronization operation without this is a fence and can be either an acquire fence, a release fence, or both an acquire and release fence.", "category":"MULTI-THREADED EXECUTIONS AND DATA RACES"}
    ,
    {
"alternativeSpellings": [], "id": "73", "question": " A synchronization operation without an associated memory location is this and can be either an acquire this, a release this, or both an acquire and release this.", "category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "suggestions": [], "answer":"fence"}
    ,
    {
"category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "question": " Performing this operation on a mutex forces prior side effects on other memory locations to become visible to other threads that later perform an acquire or consume operation on the mutex.", "answer": "release", "suggestions": [], "id": "74", "alternativeSpellings":[]}
    ,
    {
"id": "75", "alternativeSpellings": [], "answer": "mutex", "suggestions": [], "category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "question":" Performing a release operation on this forces prior side effects on other memory locations to become visible to other threads that later perform an acquire or consume operation on it."}
    ,
    {
"alternativeSpellings": [], "id": "76", "question": " A release sequence headed by a release operation A on an atomic object M is a maximal contiguous sub-sequence of side effects in the modification order of M, where the first operation is A and every subsequent operation either is performed by the same thread that performed the release or is this kind of atomic operation.", "category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "answer": "RMW", "suggestions":[]}
    ,
    {
"id": "77", "alternativeSpellings": [], "suggestions": [], "answer": "race condition", "category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "question":" If there is ambiguity about which side effect to a non-atomic object is visible, then this occurs and the behavior is undefined."}
    ,
    {
"suggestions": [], "answer": "race condition", "category": "MULTI-THREADED EXECUTIONS AND DATA RACES", "question": " The execution of a program contains this if it contains two conflicting actions in different threads, at least one of which is not atomic, and neither happens before the other.", "id": "78", "alternativeSpellings":[]}
    ,
    {
"category": "CHARACTER SETS", "question": " Two sets of characters and their associated collating sequences shall be defined: the set in which these are written, and the set interpreted in the execution environment.", "answer": "source files", "suggestions": [], "id": "79", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "80", "question": " Two sets of characters and their associated collating sequences shall be defined: the set in which source files are written, and the set interpreted in this environment.", "category": "CHARACTER SETS", "suggestions": [], "answer":"execution"}
    ,
    {
"alternativeSpellings": [], "id": "81", "question": " In a character constant or string literal, members of the execution character set shall be represented by corresponding members of the source character set or by escape sequences consisting of this character followed by one or more characters.", "category": "CHARACTER SETS", "suggestions": [], "answer":"backslash"}
    ,
    {
"id": "82", "alternativeSpellings": [], "answer": "zero", "suggestions": [], "category": "CHARACTER SETS", "question":" A byte with all bits set to this is called the null character; it shall exist in the basic execution character set."}
    ,
    {
"alternativeSpellings": [], "id": "83", "question": " A byte with all bits set to 0 is called this.", "category": "CHARACTER SETS", "answer": "null character", "suggestions":[]}
    ,
    {
"question": " A byte with all bits set to 0, called the null character, is used to terminate this.", "category": "CHARACTER SETS", "suggestions": [], "answer": "string", "alternativeSpellings": [], "id":"84"}
    ,
    {
"answer": "char", "suggestions": [], "category": "MISC", "question": " The representation of each member of the source and execution basic character sets shall fit in this.", "id": "85", "alternativeSpellings":[]}
    ,
    {
"question": " In both the source and execution basic character sets, the value of each character after this in the list of decimal digits shall be exactly one greater than the value of the previous.", "category": "CHARACTER SETS", "suggestions": [], "answer": "zero", "alternativeSpellings": [], "id":"86"}
    ,
    {
"question": " In both the source and execution basic character sets, the value of each character after 0 in the list of decimal digits shall be exactly this than the value of the previous.", "category": "CHARACTER SETS", "answer": "one greater", "suggestions": [], "alternativeSpellings": [], "id":"87"}
    ,
    {
"alternativeSpellings": [], "id": "88", "answer": "new-line", "suggestions": [], "question": " In source files, there shall be some way of indicating the end of each line of text; the standard treats such an end-of-line indicator as if it were a single one of this character.", "category":"CHARACTER SETS"}
    ,
    {
"id": "89", "alternativeSpellings": [], "answer": "control character", "suggestions": [], "category": "CHARACTER SETS", "question":" In the basic execution character set, there shall be characters representing alert, backspace, carriage return, and new line. These are called this kind of character."}
    ,
    {
"answer": "Latin alphabet", "suggestions": [], "question": " A letter is an uppercase letter or a lowercase letter as defined in this alphabet; in the standard, the term does not include other characters that are letters in other alphabets.", "category": "CHARACTER SETS", "alternativeSpellings": [], "id":"90"}
    ,
    {
"alternativeSpellings": [], "id": "91", "suggestions": [], "answer": "trigraph sequences", "question": " These sequences enable the input of characters that are not defined in the Invariant Code Set as described in ISO/IEC 646, which is a subset of the seven-bit US ASCII code set.", "category":"TRIGRAPH SEQUENCES"}
    ,
    {
"suggestions": [], "answer": "trigraph sequences", "question": " The following tokens, ??= ??) ??! ??( ??' ??> ??/ ??< and ??-, are known as these.", "category": "TRIGRAPH SEQUENCES", "alternativeSpellings": [], "id":"92"}
    ,
    {
"id": "93", "alternativeSpellings": [], "category": "MULTIBYTE CHARACTERS", "question": " The source character set and the execution character set may both contain multibyte characters. If so, this character set shall be present and each character shall be encoded as a single byte.", "suggestions": [], "answer":"basic character set"}
    ,
    {
"question": " This character shall not occur as part of any other multibyte character.", "category": "MULTIBYTE CHARACTERS", "answer": "null character", "suggestions": [], "alternativeSpellings": [], "id":"94"}
    ,
    {
"answer": "multibyte", "suggestions": [], "category": "MISC", "question": " An identifier, comment, string literal, character constant, or header name shall consist of a sequence of this kind of valid character.", "id": "95", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "active position", "category": "CHARACTER DISPLAY SEMANTICS", "question": " This position is the location on a display device where the next character output by the fputc function would appear.", "id": "96", "alternativeSpellings":[]}
    ,
    {
"id": "97", "alternativeSpellings": [], "category": "CHARACTER DISPLAY SEMANTICS", "question": " The active position is that location on a display device where the next character output by this function would appear.", "answer": "fputc", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "locale-specific", "question": " An example of this behavior is the direction of writing characters to the display.", "category": "CHARACTER DISPLAY SEMANTICS", "alternativeSpellings": [], "id":"98"}
    ,
    {
"answer": "unspecified", "suggestions": [], "question": " If the active position is at the final position of a line (if there is one), the behavior of the display device is this.", "category": "CHARACTER DISPLAY SEMANTICS", "alternativeSpellings": [], "id":"99"}
    ,
    {
"alternativeSpellings": [], "id": "100", "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence produces an audible or visible alert without changing the active position.", "category": "CHARACTER DISPLAY SEMANTICS", "answer": "alert", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "101", "answer": "backspace", "suggestions": [], "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence moves the active position to the previous position on the current line.", "category":"CHARACTER DISPLAY SEMANTICS"}
    ,
    {
"category": "CHARACTER DISPLAY SEMANTICS", "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence moves the active position to the initial position at the start of the next logical page.", "answer": "form-feed", "suggestions": [], "id": "102", "alternativeSpellings":[]}
    ,
    {
"id": "103", "alternativeSpellings": [], "category": "CHARACTER DISPLAY SEMANTICS", "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence moves the active position to the initial position of the next line.", "answer": "new-line", "suggestions":[]}
    ,
    {
"question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence moves the active position to the initial position of the current line.", "category": "CHARACTER DISPLAY SEMANTICS", "suggestions": [], "answer": "carriage-return", "alternativeSpellings": [], "id":"104"}
    ,
    {
"id": "105", "alternativeSpellings": [], "category": "CHARACTER DISPLAY SEMANTICS", "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence moves the active position to the next horizontal tabulation position on the current line.", "suggestions": [], "answer":"horizontal tab"}
    ,
    {
"alternativeSpellings": [], "id": "106", "suggestions": [], "answer": "vertical tab", "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. This escape sequence moves the active position to the initial position of the next vertical tabulation position.", "category":"CHARACTER DISPLAY SEMANTICS"}
    ,
    {
"alternativeSpellings": [], "id": "107", "answer": "char", "suggestions": [], "question": " Alphabetic escape sequences representing nongraphic characters in the execution character set are intended to produce actions on display devices. Each of these escape sequences shall produce a unique implementation-defined value which can be stored in a single this.", "category":"MISC"}
    ,
    {
"alternativeSpellings": [], "id": "108", "suggestions": [], "answer": "function image", "question": " The instructions that compose the executable representation of a function is called this.", "category":"SIGNALS AND INTERRUPTS"}
    ,
    {
"id": "109", "alternativeSpellings": [], "category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many nesting levels of blocks.", "answer": "127", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "63", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many nesting levels of conditional inclusion.", "category": "TRANSLATION LIMITS", "alternativeSpellings": [], "id":"110"}
    ,
    {
"suggestions": [], "answer": "12", "category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many pointer, array, and function declarators (in any combinations) modifying an arithmetic, structure, union, or void type in a declaration.", "id": "111", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "112", "answer": "63", "suggestions": [], "question": " The implementation shall be able to translate and execute at least one program that contains at least this many nesting levels of parenthesized declarators within a full declaration.", "category":"TRANSLATION LIMITS"}
    ,
    {
"question": " The implementation shall be able to translate and execute at least one program that contains at least this many nesting levels of parenthesized expressions within a full expression.", "category": "TRANSLATION LIMITS", "answer": "63", "suggestions": [], "alternativeSpellings": [], "id":"113"}
    ,
    {
"id": "114", "alternativeSpellings": [], "category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many significant initial characters in an internal identifier or a macro name (each universal character name or extended source character is considered a single character).", "suggestions": [], "answer":"63"}
    ,
    {
"alternativeSpellings": [], "id": "115", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many external identifiers in one translation unit.", "category": "TRANSLATION LIMITS", "suggestions": [], "answer":"4095"}
    ,
    {
"id": "116", "alternativeSpellings": [], "category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many identifiers with block scope declared in one block.", "suggestions": [], "answer":"511"}
    ,
    {
"id": "117", "alternativeSpellings": [], "suggestions": [], "answer": "4095", "category": "TRANSLATION LIMITS", "question":" The implementation shall be able to translate and execute at least one program that contains at least this many macro identifiers simultaneously defined in one preprocessing translation unit."}
    ,
    {
"alternativeSpellings": [], "id": "118", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many parameters in one function definition.", "category": "TRANSLATION LIMITS", "suggestions": [], "answer":"127"}
    ,
    {
"category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many arguments in one function call.", "suggestions": [], "answer": "127", "id": "119", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "127", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many parameters in one macro definition.", "category": "TRANSLATION LIMITS", "alternativeSpellings": [], "id":"120"}
    ,
    {
"answer": "127", "suggestions": [], "category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many arguments in one macro invocation.", "id": "121", "alternativeSpellings":[]}
    ,
    {
"question": " The implementation shall be able to translate and execute at least one program that contains at least this many characters in a logical source line.", "category": "TRANSLATION LIMITS", "answer": "4095", "suggestions": [], "alternativeSpellings": [], "id":"122"}
    ,
    {
"id": "123", "alternativeSpellings": [], "answer": "4095", "suggestions": [], "category": "TRANSLATION LIMITS", "question":" The implementation shall be able to translate and execute at least one program that contains at least this many characters in a string literal (after concatenation)."}
    ,
    {
"suggestions": [], "answer": "65535", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many bytes in an object (in a hosted environment only).", "category": "TRANSLATION LIMITS", "alternativeSpellings": [], "id":"124"}
    ,
    {
"answer": "15", "suggestions": [], "category": "TRANSLATION LIMITS", "question": " The implementation shall be able to translate and execute at least one program that contains at least this many nesting levels for #included files.", "id": "125", "alternativeSpellings":[]}
    ,
    {
"question": " The implementation shall be able to translate and execute at least one program that contains at least this many case labels for a switch statement (excluding those for any nested switch statements).", "category": "TRANSLATION LIMITS", "answer": "1023", "suggestions": [], "alternativeSpellings": [], "id":"126"}
    ,
    {
"question": " The implementation shall be able to translate and execute at least one program that contains at least this many members in a single structure or union.", "category": "TRANSLATION LIMITS", "answer": "1023", "suggestions": [], "alternativeSpellings": [], "id":"127"}
    ,
    {
"id": "128", "alternativeSpellings": [], "suggestions": [], "answer": "1023", "category": "TRANSLATION LIMITS", "question":" The implementation shall be able to translate and execute at least one program that contains at least this many enumeration constants in a single enumeration."}
    ,
    {
"alternativeSpellings": [], "id": "129", "answer": "63", "suggestions": [], "question": " The implementation shall be able to translate and execute at least one program that contains at least this many levels of nested structure or union definitions in a single struct-declaration-list.", "category":"TRANSLATION LIMITS"}
    ,
    {
"alternativeSpellings": [], "id": "130", "answer": "limits.h and float.h", "suggestions": [], "question": " An implementation is required to document all its numerical limits in these headers (name both, separated by \"and\").", "category":"NUMERICAL LIMITS"}
    ,
    {
"id": "131", "alternativeSpellings": [], "suggestions": [], "answer": "CHAR_BIT", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the number of bits for smallest object that is not a bit-field (byte)."}
    ,
    {
"alternativeSpellings": [], "id": "132", "answer": "SCHAR_MIN", "suggestions": [], "question": " This macro defines the minimum value for an object of type signed char.", "category":"SIZES OF INTEGER TYPES <LIMITS.H>"}
    ,
    {
"id": "133", "alternativeSpellings": [], "suggestions": [], "answer": "SCHAR_MAX", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the maximum value for an object of type signed char."}
    ,
    {
"question": " This macro defines the maximum value for an object of type unsigned char.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "answer": "UCHAR_MAX", "suggestions": [], "alternativeSpellings": [], "id":"134"}
    ,
    {
"id": "135", "alternativeSpellings": [], "answer": "CHAR_MIN", "suggestions": [], "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the minimum value for an object of type char."}
    ,
    {
"question": " This macro defines the maximum value for an object of type char.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "suggestions": [], "answer": "CHAR_MAX", "alternativeSpellings": [], "id":"136"}
    ,
    {
"id": "137", "alternativeSpellings": [], "answer": "MB_LEN_MAX", "suggestions": [], "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the maximum number of bytes in a multibyte character, for any supported locale."}
    ,
    {
"id": "138", "alternativeSpellings": [], "answer": "SHRT_MIN", "suggestions": [], "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the minimum value for an object of type short int."}
    ,
    {
"question": " This macro defines the maximum value for an object of type short int.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "answer": "SHRT_MAX", "suggestions": [], "alternativeSpellings": [], "id":"139"}
    ,
    {
"category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question": " This macro defines the maximum value for an object of type unsigned short int.", "suggestions": [], "answer": "USHRT_MAX", "id": "140", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "INT_MIN", "question": " This macro defines the minimum value for an object of type int.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "alternativeSpellings": [], "id":"141"}
    ,
    {
"question": " This macro defines the maximum value for an object of type int.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "suggestions": [], "answer": "INT_MAX", "alternativeSpellings": [], "id":"142"}
    ,
    {
"id": "143", "alternativeSpellings": [], "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question": " This macro defines the maximum value for an object of type unsigned int.", "suggestions": [], "answer":"UINT_MAX"}
    ,
    {
"id": "144", "alternativeSpellings": [], "answer": "LONG_MIN", "suggestions": [], "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the minimum value for an object of type long int."}
    ,
    {
"alternativeSpellings": [], "id": "145", "answer": "LONG_MAX", "suggestions": [], "question": " This macro defines the maximum value for an object of type long int.", "category":"SIZES OF INTEGER TYPES <LIMITS.H>"}
    ,
    {
"suggestions": [], "answer": "ULONG_MAX", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question": " This macro defines the maximum value for an object of type unsigned long int.", "id": "146", "alternativeSpellings":[]}
    ,
    {
"category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question": " This macro defines the minimum value for an object of type long long int.", "suggestions": [], "answer": "LLONG_MIN", "id": "147", "alternativeSpellings":[]}
    ,
    {
"id": "148", "alternativeSpellings": [], "answer": "LLONG_MAX", "suggestions": [], "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question":" This macro defines the maximum value for an object of type long long int."}
    ,
    {
"question": " This macro defines the maximum value for an object of type unsigned long long int.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "suggestions": [], "answer": "ULLONG_MAX", "alternativeSpellings": [], "id":"149"}
    ,
    {
"suggestions": [], "answer": "signed integer", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question": " If the value of an object of type char is treated as this when used in an expression, the value of CHAR_MIN shall be the same as that of SCHAR_MIN, and CHAR_MAX shall be the same as that of SCHAR_MAX.", "id": "150", "alternativeSpellings":[]}
    ,
    {
"answer": "unsigned integer", "suggestions": [], "question": " If the value of an object of type char is treated as this when used in an expression, the value of CHAR_MIN shall be 0, and CHAR_MAX shall be the same as that of UCHAR_MAX.", "category": "SIZES OF INTEGER TYPES <LIMITS.H>", "alternativeSpellings": [], "id":"151"}
    ,
    {
"alternativeSpellings": [], "id": "152", "suggestions": [], "answer": "zero", "question": " If the value of an object of type char is treated as an unsigned integer when used in an expression, the value of CHAR_MIN shall be this.", "category":"SIZES OF INTEGER TYPES <LIMITS.H>"}
    ,
    {
"category": "SIZES OF INTEGER TYPES <LIMITS.H>", "question": " If the value of an object of type char is treated as an unsigned integer when used in an expression, the value of CHAR_MAX shall be the same as that of this macro.", "answer": "UCHAR_MAX", "suggestions": [], "id": "153", "alternativeSpellings":[]}
    ,
    {
"question": " This is an encoding signifying Not-a-Number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "NaN", "alternativeSpellings": [], "id":"154"}
    ,
    {
"answer": "Not-a-Number", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " A NaN is an encoding signifying this.", "id": "155", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "156", "suggestions": [], "answer": "floating-point exception", "question": " A quiet NaN propagates through almost every arithmetic operation without raising this kind of exception.", "category":"CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>"}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " A signaling NaN generally raises this kind of exception when occurring as an arithmetic operand.", "suggestions": [], "answer": "floating-point exception", "id": "157", "alternativeSpellings":[]}
    ,
    {
"question": " This kind of NaN propagates through almost every arithmetic operation without raising a floating-point exception.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "quiet NaN", "alternativeSpellings": [], "id":"158"}
    ,
    {
"alternativeSpellings": [], "id": "159", "question": " This kind of NaN generally raises a floating-point exception when occurring as an arithmetic operand.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "signaling NaN", "suggestions":[]}
    ,
    {
"id": "160", "alternativeSpellings": [], "answer": "unspecified", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question":" Wherever floating-point values such as 0, infinity or NaN are unsigned, any requirement to retrieve the sign shall produce this sign."}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Wherever floating-point values such as 0, infinity or NaN are unsigned, any requirement to set the sign shall be this.", "suggestions": [], "answer": "ignored", "id": "161", "alternativeSpellings":[]}
    ,
    {
"question": " The rounding mode for floating-point addition is characterized by the implementation-defined value of this macro.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "FLT_ROUNDS", "alternativeSpellings": [], "id":"162"}
    ,
    {
"id": "163", "alternativeSpellings": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " The rounding mode for floating-point addition is characterized by the implementation-defined value of FLT_ROUNDS; when it is set to this value, it signifies indeterminable rounding.", "answer": "-1", "suggestions":[]}
    ,
    {
"id": "164", "alternativeSpellings": [], "suggestions": [], "answer": "0", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question":" The rounding mode for floating-point addition is characterized by the implementation-defined value of FLT_ROUNDS; when it is set to this value, it signifies rounding toward zero."}
    ,
    {
"alternativeSpellings": [], "id": "165", "question": " The rounding mode for floating-point addition is characterized by the implementation-defined value of FLT_ROUNDS; when it is set to this value, it signifies rounding to nearest.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "1", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "166", "question": " The rounding mode for floating-point addition is characterized by the implementation-defined value of FLT_ROUNDS; when it is set to this value, it signifies rounding toward positive infinity.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer":"2"}
    ,
    {
"suggestions": [], "answer": "3", "question": " The rounding mode for floating-point addition is characterized by the implementation-defined value of FLT_ROUNDS; when it is set to this value, it signifies rounding toward negative infinity.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"167"}
    ,
    {
"alternativeSpellings": [], "id": "168", "answer": "FLT_EVAL_METHOD", "suggestions": [], "question": " Except for assignment and cast, the values yielded by operators with floating operands are evaluated in a format characterized by the implementation-defined value of this macro.", "category":"CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>"}
    ,
    {
"alternativeSpellings": [], "id": "169", "question": " Except for assignment and cast, the values yielded by operators with floating operands are evaluated in a format characterized by the implementation-defined value of FLT_EVAL_METHOD; when it is set to this value, it signifies indeterminable evaluation format.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer":"-1"}
    ,
    {
"alternativeSpellings": [], "id": "170", "question": " Except for assignment and cast, the values yielded by operators with floating operands are evaluated in a format characterized by the implementation-defined value of FLT_EVAL_METHOD; when it is set to this value, it signifies all operations and constants are evaluated just to the range and precision of the type.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "0", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "171", "suggestions": [], "answer": "1", "question": " Except for assignment and cast, the values yielded by operators with floating operands are evaluated in a format characterized by the implementation-defined value of FLT_EVAL_METHOD; when it is set to this value, it signifies operations and constants of type float and double are evaluated to the range and precision of the double type.", "category":"CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>"}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Except for assignment and cast, the values yielded by operators with floating operands are evaluated in a format characterized by the implementation-defined value of FLT_EVAL_METHOD; when it is set to this value, it signifies all operations and constants are evaluated to the range and precision of the long double type.", "suggestions": [], "answer": "2", "id": "172", "alternativeSpellings":[]}
    ,
    {
"answer": "-1", "suggestions": [], "question": " The presence or absence of floating-point subnormal numbers is characterized by the implementation-defined values of FLT_HAS_SUBNORM, DBL_HAS_SUBNORM, and LDBL_HAS_SUBNORM; when it is set to this value, it signifies that it is indeterminable whether subnormal numbers are present.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"173"}
    ,
    {
"suggestions": [], "answer": "0", "question": " The presence or absence of floating-point subnormal numbers is characterized by the implementation-defined values of FLT_HAS_SUBNORM, DBL_HAS_SUBNORM, and LDBL_HAS_SUBNORM; when it is set to this value, it signifies that subnormal numbers are absent (type does not support subnormal numbers).", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"174"}
    ,
    {
"suggestions": [], "answer": "1", "question": " The presence or absence of floating-point subnormal numbers is characterized by the implementation-defined values of FLT_HAS_SUBNORM, DBL_HAS_SUBNORM, and LDBL_HAS_SUBNORM; when it is set to this value, it signifies that subnormal numbers are present (type does support subnormal numbers).", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"175"}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum value for the radix of exponent representation.", "answer": "FLT_RADIX", "suggestions": [], "id": "176", "alternativeSpellings":[]}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number of base-FLT_RADIX digits in the floating-point significand.", "answer": "FLT_MANT_DIG", "suggestions": [], "id": "177", "alternativeSpellings":[]}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number of base-FLT_RADIX digits in the double-precision floating-point significand.", "suggestions": [], "answer": "DBL_MANT_DIG", "id": "178", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "LDBL_MANT_DIG", "question": " Regarding floating types, this macro represents the number of base-FLT_RADIX digits in the long double-precision floating-point significand.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"179"}
    ,
    {
"id": "180", "alternativeSpellings": [], "answer": "FLT_DECIMAL_DIG", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question":" Regarding floating types, this macro represents the number of decimal digits, n, such that any floating-point number with p radix b digits can be rounded to a floating-point number with n decimal digits and back again without change to the value."}
    ,
    {
"question": " Regarding floating types, this macro represents the number of decimal digits, n, such that any double-precision floating-point number with p radix b digits can be rounded to a floating-point number with n decimal digits and back again without change to the value.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "DBL_DECIMAL_DIG", "alternativeSpellings": [], "id":"181"}
    ,
    {
"suggestions": [], "answer": "LDBL_DECIMAL_DIG", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number of decimal digits, n, such that any long double-precision floating-point number with p radix b digits can be rounded to a floating-point number with n decimal digits and back again without change to the value.", "id": "182", "alternativeSpellings":[]}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number of decimal digits, n, such that any floating-point number in the widest supported floating type with pmax radix b digits can be rounded to a floating-point number with n decimal digits and back again without change to the value.", "suggestions": [], "answer": "DECIMAL_DIG", "id": "183", "alternativeSpellings":[]}
    ,
    {
"id": "184", "alternativeSpellings": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number of decimal digits, q, such that any floating-point number with q decimal digits can be rounded into a floating-point number with p radix b digits and back again without change to the q decimal digits.", "suggestions": [], "answer":"FLT_DIG"}
    ,
    {
"suggestions": [], "answer": "DBL_DIG", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number of decimal digits, q, such that any double-precision floating-point number with q decimal digits can be rounded into a floating-point number with p radix b digits and back again without change to the q decimal digits.", "id": "185", "alternativeSpellings":[]}
    ,
    {
"id": "186", "alternativeSpellings": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the number number of decimal digits, q, such that any long double-precision floating-point number with q decimal digits can be rounded into a floating-point number with p radix b digits and back again without change to the q decimal digits.", "answer": "LDBL_DIG", "suggestions":[]}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum negative integer such that FLT_RADIX raised to one less than the power of that value is a normalized floating-point number.", "answer": "FLT_MIN_EXP", "suggestions": [], "id": "187", "alternativeSpellings":[]}
    ,
    {
"answer": "DBL_MIN_EXP", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum negative integer such that FLT_RADIX raised to one less than the power of that value is a normalized double-precision floating-point number.", "id": "188", "alternativeSpellings":[]}
    ,
    {
"question": " Regarding floating types, this macro represents the minimum negative integer such that FLT_RADIX raised to one less than the power of that value is a normalized long double-precision floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "LDBL_MIN_EXP", "alternativeSpellings": [], "id":"189"}
    ,
    {
"question": " Regarding floating types, this macro represents the minimum negative integer such that 10 raised to the power of that value is in the range of normalized floating-point numbers.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "FLT_MIN_10_EXP", "suggestions": [], "alternativeSpellings": [], "id":"190"}
    ,
    {
"suggestions": [], "answer": "DBL_MIN_10_EXP", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum negative integer such that 10 raised to the power of that value is in the range of normalized double-precision floating-point numbers.", "id": "191", "alternativeSpellings":[]}
    ,
    {
"question": " Regarding floating types, this macro represents the minimum negative integer such that 10 raised to the power of that value is in the range of normalized long double-precision floating-point numbers.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "LDBL_MIN_10_EXP", "suggestions": [], "alternativeSpellings": [], "id":"192"}
    ,
    {
"answer": "FLT_MAX_EXP", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the maximum integer such that FLT_RADIX raised to one less than the power of that value is a representable finite floating-point number.", "id": "193", "alternativeSpellings":[]}
    ,
    {
"id": "194", "alternativeSpellings": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the maximum integer such that FLT_RADIX raised to one less than the power of that value is a representable finite double-precision floating-point number.", "answer": "DBL_MAX_EXP", "suggestions":[]}
    ,
    {
"answer": "LDBL_MAX_EXP", "suggestions": [], "question": " Regarding floating types, this macro represents the maximum integer such that FLT_RADIX raised to one less than the power of that value is a representable finite long double-precision floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"195"}
    ,
    {
"answer": "FLT_MAX_10_EXP", "suggestions": [], "question": " Regarding floating types, this macro represents the maximum integer such that 10 raised to the power of that value is in the range of representable finite floating-point numbers.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"196"}
    ,
    {
"question": " Regarding floating types, this macro represents the maximum integer such that 10 raised to the power of that value is in the range of representable finite double-precision floating-point numbers.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "DBL_MAX_10_EXP", "alternativeSpellings": [], "id":"197"}
    ,
    {
"alternativeSpellings": [], "id": "198", "question": " Regarding floating types, this macro represents the maximum integer such that 10 raised to the power of that value is in the range of representable finite long double-precision floating-point numbers.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "LDBL_MAX_10_EXP", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "199", "question": " Regarding floating types, this macro represents the maximum representable finite floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "FLT_MAX", "suggestions":[]}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the maximum representable finite double-precision floating-point number.", "answer": "DBL_MAX", "suggestions": [], "id": "200", "alternativeSpellings":[]}
    ,
    {
"answer": "LDBL_MAX", "suggestions": [], "question": " Regarding floating types, this macro represents the maximum representable finite long double-precision floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"201"}
    ,
    {
"suggestions": [], "answer": "FLT_EPSILON", "question": " Regarding floating types, this macro represents the difference between 1 and the least value greater than 1 that is representable in the given floating point type.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "alternativeSpellings": [], "id":"202"}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the difference between 1 and the least value greater than 1 that is representable in the given double-precision floating point type.", "answer": "DBL_EPSILON", "suggestions": [], "id": "203", "alternativeSpellings":[]}
    ,
    {
"id": "204", "alternativeSpellings": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the difference between 1 and the least value greater than 1 that is representable in the given long double-precision floating point type.", "suggestions": [], "answer":"LDBL_EPSILON"}
    ,
    {
"question": " Regarding floating types, this macro represents the minimum normalized positive floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "answer": "FLT_MIN", "suggestions": [], "alternativeSpellings": [], "id":"205"}
    ,
    {
"id": "206", "alternativeSpellings": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum normalized positive double-precision floating-point number.", "answer": "DBL_MIN", "suggestions":[]}
    ,
    {
"answer": "LDBL_MIN", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum normalized positive long double-precision floating-point number.", "id": "207", "alternativeSpellings":[]}
    ,
    {
"question": " Regarding floating types, this macro represents the minimum positive floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer": "FLT_TRUE_MIN", "alternativeSpellings": [], "id":"208"}
    ,
    {
"suggestions": [], "answer": "DBL_TRUE_MIN", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " Regarding floating types, this macro represents the minimum positive double-precision floating-point number.", "id": "209", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "210", "question": " Regarding floating types, this macro represents the minimum positive long double-precision floating-point number.", "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "suggestions": [], "answer":"LDBL_TRUE_MIN"}
    ,
    {
"id": "211", "alternativeSpellings": [], "answer": "subnormal", "suggestions": [], "category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question":" If the presence or absence of these numbers is indeterminable, then the value of the minimum positive floating-point number is intended to be a positive number no greater than the minimum normalized positive number for the type."}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " If a type wider than double were supported, then DECIMAL_DIG would be greater than this value.", "answer": "17", "suggestions": [], "id": "212", "alternativeSpellings":[]}
    ,
    {
"category": "CHARACTERISTICS OF FLOATING TYPES <FLOAT.H>", "question": " If a type wider than double were supported, then this macro would be greater than 17.", "answer": "DECIMAL_DIG", "suggestions": [], "id": "213", "alternativeSpellings":[]}
    ,
    {
"question": " A member of this is called an enumeration constant.", "category": "SCOPES OF IDENTIFIERS", "answer": "ENUMERATION", "suggestions": [], "alternativeSpellings": [], "id":"214"}
    ,
    {
"suggestions": [], "answer": "ENUMERATION CONSTANT", "question": " A member of an enumeration is called this.", "category": "SCOPES OF IDENTIFIERS", "alternativeSpellings": [], "id":"215"}
    ,
    {
"id": "216", "alternativeSpellings": [], "suggestions": [], "answer": "label name", "category": "SCOPES OF IDENTIFIERS", "question":" This is the only kind of identifier that has function scope."}
    ,
    {
"category": "SCOPES OF IDENTIFIERS", "question": " A label name is the only kind of identifier that has this scope.", "suggestions": [], "answer": "function", "id": "217", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "file", "question": " If the declarator or type specifier that declares the identifier appears outside of any block or list of parameters, the identifier has this scope.", "category": "SCOPES OF IDENTIFIERS", "alternativeSpellings": [], "id":"218"}
    ,
    {
"answer": "translation unit", "suggestions": [], "category": "SCOPES OF IDENTIFIERS", "question": " If the declarator or type specifier that declares the identifier appears outside of any block or list of parameters, the identifier has file scope, which terminates at the end of this.", "id": "219", "alternativeSpellings":[]}
    ,
    {
"category": "SCOPES OF IDENTIFIERS", "question": " If the declarator or type specifier that declares the identifier appears inside a block or within the list of parameter declarations in a function definition, the identifier has this scope.", "answer": "block", "suggestions": [], "id": "220", "alternativeSpellings":[]}
    ,
    {
"id": "221", "alternativeSpellings": [], "category": "SCOPES OF IDENTIFIERS", "question": " If the declarator or type specifier that declares the identifier appears within the list of parameter declarations in a function prototype (not part of a function definition), the identifier has this scope.", "suggestions": [], "answer":"function prototype scope"}
    ,
    {
"answer": "overlap", "suggestions": [], "question": " If an identifier designates two different entities in the same name space, the scopes might do this.", "category": "SCOPES OF IDENTIFIERS", "alternativeSpellings": [], "id":"222"}
    ,
    {
"question": " If the declaration of a file scope identifier for an object or a function contains the storage-class specifier static, the identifier has this linkage.", "category": "LINKAGES OF IDENTIFIERS", "answer": "INTERNAL", "suggestions": ["EXTERN"], "alternativeSpellings": [], "id":"223"}
    ,
    {
"category": "LINKAGES OF IDENTIFIERS", "question": " If the declaration of a file scope identifier for an object or a function contains this storage-class specifier, the identifier has internal linkage.", "answer": "static", "suggestions": [], "id": "224", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "225", "suggestions": [], "answer": "static", "question": " A function declaration can contain this storage-class specifier only if it is at file scope.", "category":"LINKAGES OF IDENTIFIERS"}
    ,
    {
"alternativeSpellings": [], "id": "226", "answer": "file", "suggestions": [], "question": " A function declaration can contain the storage-class specifier static only if it is at this scope.", "category":"LINKAGES OF IDENTIFIERS"}
    ,
    {
"category": "LINKAGES OF IDENTIFIERS", "question": " If no prior declaration is visible, or if the prior declaration specifies no linkage, then the identifier has this linkage.", "suggestions": [], "answer": "external", "id": "227", "alternativeSpellings":[]}
    ,
    {
"question": " If the declaration of an identifier for a function has no storage-class specifier, its linkage is determined exactly as if it were declared with this storage-class specifier.", "category": "LINKAGES OF IDENTIFIERS", "answer": "extern", "suggestions": [], "alternativeSpellings": [], "id":"228"}
    ,
    {
"id": "229", "alternativeSpellings": [], "category": "LINKAGES OF IDENTIFIERS", "question": " If the declaration of an identifier for an object has file scope and no storage-class specifier, it has this linkage.", "answer": "external", "suggestions":[]}
    ,
    {
"question": " If the declaration of an identifier for an object has this scope and no storage-class specifier, its linkage is external.", "category": "LINKAGES OF IDENTIFIERS", "suggestions": [], "answer": "file", "alternativeSpellings": [], "id":"230"}
    ,
    {
"id": "231", "alternativeSpellings": [], "suggestions": [], "answer": "undefined", "category": "LINKAGES OF IDENTIFIERS", "question":" If, within a translation unit, the same identifier appears with both internal and external linkage, the behavior is this."}
    ,
    {
"category": "NAME SPACES OF IDENTIFIERS", "question": " If more than one declaration of a particular identifier is visible at any point in a translation unit, this context disambiguates uses that refer to different entities.", "suggestions": [], "answer": "syntactic context", "id": "232", "alternativeSpellings":[]}
    ,
    {
"id": "233", "alternativeSpellings": [], "category": "MISC", "question": " This exists, has a constant address, and retains its last-stored value throughout its lifetime.", "answer": "object", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "234", "question": " An object whose identifier is declared without the storage-class specifier _Thread_local, and either with external or internal linkage or with the storage-class specifier static, has this storage duration.", "category": "STORAGE DURATIONS OF OBJECTS", "answer": "static", "suggestions":[]}
    ,
    {
"id": "235", "alternativeSpellings": [], "answer": "_Thread_local", "suggestions": [], "category": "STORAGE DURATIONS OF OBJECTS", "question":" An object whose identifier is declared with this storage-class specifier has thread storage duration."}
    ,
    {
"id": "236", "alternativeSpellings": [], "answer": "thread", "suggestions": [], "category": "STORAGE DURATIONS OF OBJECTS", "question":" An object whose identifier is declared with the storage-class specifier _Thread_local has this storage duration."}
    ,
    {
"category": "STORAGE DURATIONS OF OBJECTS", "question": " An object whose identifier is declared with no linkage and without the storage-class specifier static has this storage duration.", "answer": "automatic", "suggestions": [], "id": "237", "alternativeSpellings":[]}
    ,
    {
"answer": "implementation-defined", "suggestions": [], "question": " The result of attempting to indirectly access an object with automatic storage duration from a thread other than the one with which the object is associated is this behavior.", "category": "STORAGE DURATIONS OF OBJECTS", "alternativeSpellings": [], "id":"238"}
    ,
    {
"alternativeSpellings": [], "id": "239", "question": " For an object with this storage duration, if a block is entered recursively, a new instance of the object is created each time.", "category": "STORAGE DURATIONS OF OBJECTS", "answer": "automatic", "suggestions":[]}
    ,
    {
"answer": "automatic", "suggestions": [], "question": " The initial value of an object with this storage duration is indeterminate.", "category": "STORAGE DURATIONS OF OBJECTS", "alternativeSpellings": [], "id":"240"}
    ,
    {
"alternativeSpellings": [], "id": "241", "question": " The initial value of an object with automatic storage duration is this.", "category": "STORAGE DURATIONS OF OBJECTS", "answer": "indeterminate", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "242", "question": " If an initialization is specified for an object with this storage duration, it is performed each time the declaration or compound literal is reached in the execution of a block; otherwise, the value becomes indeterminate each time the declaration is reached.", "category": "STORAGE DURATIONS OF OBJECTS", "suggestions": [], "answer":"automatic"}
    ,
    {
"category": "STORAGE DURATIONS OF OBJECTS", "question": " If an initialization is specified for an object with automatic storage duration, it is performed each time the declaration or compound literal is reached in the execution of a block; otherwise, the value becomes this each time the declaration is reached.", "answer": "indeterminate", "suggestions": [], "id": "243", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "244", "suggestions": [], "answer": "_Bool", "question": " An object declared as this type is just large enough to store the values 0 and 1.", "category":"TYPES"}
    ,
    {
"category": "TYPES", "question": " An object declared as this type is just large enough to store any member of the basic execution character set.", "suggestions": [], "answer": "char", "id": "245", "alternativeSpellings":[]}
    ,
    {
"id": "246", "alternativeSpellings": [], "category": "TYPES", "question": " If a member of the basic execution character set is stored in a char object, its value is guaranteed to be this.", "suggestions": [], "answer":"nonnegative"}
    ,
    {
"alternativeSpellings": [], "id": "247", "question": " There are these many standard signed integer types.", "category": "TYPES", "answer": "five", "suggestions":[]}
    ,
    {
"answer": "overflow", "suggestions": [], "category": "TYPES", "question": " A computation involving unsigned operands can never do this.", "id": "248", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "signed integer types", "category": "TYPES", "question": " The standard and extended signed integer types are collectively called this.", "id": "249", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "250", "question": " The standard and extended unsigned integer types are collectively called this.", "category": "TYPES", "suggestions": [], "answer":"unsigned integer types"}
    ,
    {
"category": "TYPES", "question": " The standard signed integer types and standard unsigned integer types are collectively called this.", "suggestions": [], "answer": "standard integer types", "id": "251", "alternativeSpellings":[]}
    ,
    {
"question": " The extended signed integer types and extended unsigned integer types are collectively called this.", "category": "TYPES", "answer": "extended integer types", "suggestions": [], "alternativeSpellings": [], "id":"252"}
    ,
    {
"alternativeSpellings": [], "id": "253", "question": " There are this many complex types.", "category": "TYPES", "answer": "three", "suggestions":[]}
    ,
    {
"answer": "floating types", "suggestions": [], "question": " The real floating and complex types are collectively called this.", "category": "TYPES", "alternativeSpellings": [], "id":"254"}
    ,
    {
"alternativeSpellings": [], "id": "255", "answer": "basic types", "suggestions": [], "question": " The type char, the signed and unsigned integer types, and the floating types are collectively called this.", "category":"TYPES"}
    ,
    {
"alternativeSpellings": [], "id": "256", "answer": "character types", "suggestions": [], "question": " The three types char, signed char, and unsigned char are collectively called this.", "category":"TYPES"}
    ,
    {
"suggestions": [], "answer": "char", "question": " The implementation shall define this to have the same range, representation, and behavior as either signed char or unsigned char.", "category": "TYPES", "alternativeSpellings": [], "id":"257"}
    ,
    {
"answer": "enumeration", "suggestions": [], "category": "TYPES", "question": " This comprises a set of named integer constant values.", "id": "258", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "259", "suggestions": [], "answer": "named integer constant values", "question": " An enumeration comprises a set of these.", "category":"TYPES"}
    ,
    {
"id": "260", "alternativeSpellings": [], "category": "TYPES", "question": " This type describes a contiguously allocated nonempty set of objects with a particular member object type, called the element type.", "suggestions": [], "answer":"array"}
    ,
    {
"alternativeSpellings": [], "id": "261", "question": " An array type describes a contiguously allocated nonempty set of objects with a particular member object type, called this type.", "category": "TYPES", "answer": "element", "suggestions":[]}
    ,
    {
"id": "262", "alternativeSpellings": [], "category": "TYPES", "question": " The element type shall be this whenever the array type is specified.", "answer": "complete", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "263", "question": " An array type is said to be derived from its element type, and if its element type is T, the array type is sometimes called this.", "category": "TYPES", "answer": "array of T", "suggestions":[]}
    ,
    {
"id": "264", "alternativeSpellings": [], "category": "TYPES", "question": " The construction of an array type from an element type is called this.", "suggestions": [], "answer":"array type derivation"}
    ,
    {
"id": "265", "alternativeSpellings": [], "answer": "structure", "suggestions": [], "category": "TYPES", "question":" This type describes a sequentially allocated nonempty set of member objects (and, in certain circumstances, an incomplete array), each of which has an optionally specified name and possibly distinct type."}
    ,
    {
"question": " This type describes an overlapping nonempty set of member objects, each of which has an optionally specified name and possibly distinct type.", "category": "TYPES", "answer": "union", "suggestions": [], "alternativeSpellings": [], "id":"266"}
    ,
    {
"answer": "function", "suggestions": [], "category": "TYPES", "question": " This type is characterized by its return type and the number and types of its parameters.", "id": "267", "alternativeSpellings":[]}
    ,
    {
"id": "268", "alternativeSpellings": [], "category": "TYPES", "question": " A function type is said to be derived from its return type, and if its return type is T, the function type is sometimes called this.", "answer": "function returning T", "suggestions":[]}
    ,
    {
"answer": "function type derivation", "suggestions": [], "category": "TYPES", "question": " The construction of a function type from a return type is called this.", "id": "269", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "pointer", "category": "TYPES", "question": " This type describes an object whose value provides a reference to an entity of the referenced type.", "id": "270", "alternativeSpellings":[]}
    ,
    {
"id": "271", "alternativeSpellings": [], "answer": "pointer to T", "suggestions": [], "category": "TYPES", "question":" A pointer type derived from the referenced type T is sometimes called this."}
    ,
    {
"id": "272", "alternativeSpellings": [], "answer": "pointer type derivation", "suggestions": [], "category": "TYPES", "question":" The construction of a pointer type from a referenced type is called this."}
    ,
    {
"category": "TYPES", "question": " This type describes the type designated by the construct _Atomic (type-name).", "suggestions": [], "answer": "atomic", "id": "273", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "274", "question": " An array type of unknown size is this kind of type.", "category": "TYPES", "suggestions": [], "answer":"incomplete"}
    ,
    {
"answer": "VLA", "suggestions": [], "category": "TYPES", "question": " A type has known constant size if the type is not incomplete and is not this type of array.", "id": "275", "alternativeSpellings":[]}
    ,
    {
"id": "276", "alternativeSpellings": [], "category": "TYPES", "question": " A pointer to void shall have the same representation and alignment requirements as a pointer to this type.", "suggestions": [], "answer":"character"}
    ,
    {
"id": "277", "alternativeSpellings": [], "answer": "pure binary notation", "suggestions": [], "category": "GENERAL", "question":" Values stored in unsigned bit-fields and objects of type unsigned char shall be represented using this notation."}
    ,
    {
"alternativeSpellings": [], "id": "278", "suggestions": [], "answer": "object representation", "question": " A value may be copied into an object of type unsigned char [n] (e.g., by memcpy); the resulting set of bytes is called this.", "category":"GENERAL"}
    ,
    {
"answer": "trap representation", "suggestions": [], "category": "GENERAL", "question": " Certain object representations need not represent a value of the object type. Such a representation is called this.", "id": "279", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "280", "answer": "union", "suggestions": [], "question": " When a value is stored in a member of an object of this type, the bytes of the object representation that do not correspond to that member but do correspond to other members take unspecified values.", "category":"GENERAL"}
    ,
    {
"alternativeSpellings": [], "id": "281", "question": " For unsigned integer types other than unsigned char, the bits of the object representation shall be divided into these two groups of bits (name both, separated by \"and\").", "category": "INTEGER TYPES", "answer": "value and padding", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "value representation", "category": "INTEGER TYPES", "question": " If there are N value bits in an integer type, each bit shall represent a different power of 2 between 1 and 2 to the power of N - 1, so that objects of that type shall be capable of representing values from 0 to 2 to the power of N - 1 using a pure binary representation; this shall be known as this.", "id": "282", "alternativeSpellings":[]}
    ,
    {
"answer": "signed char", "suggestions": [], "category": "INTEGER TYPES", "question": " For signed integer types, the bits of the object representation shall be divided into three groups: value bits, padding bits, and the sign bit. There need not be any padding bits, and this type shall not have any padding bits.", "id": "283", "alternativeSpellings":[]}
    ,
    {
"id": "284", "alternativeSpellings": [], "suggestions": [], "answer": "one", "category": "INTEGER TYPES", "question":" Signed integer types shall have exactly this many sign bits."}
    ,
    {
"id": "285", "alternativeSpellings": [], "category": "INTEGER TYPES", "question": " It is implementation-defined whether the value with sign bit 1 and all value bits zero (for the first two), or with sign bit and all value bits 1 (for ones' complement), is a trap representation or a normal value. In the case of sign and magnitude and ones' complement, if this representation is a normal value it is called this.", "answer": "negative zero", "suggestions":[]}
    ,
    {
"id": "286", "alternativeSpellings": [], "category": "INTEGER TYPES", "question": " For any integer type, the object representation where all of these are zero shall be a representation of the value zero in that type.", "answer": "bits", "suggestions":[]}
    ,
    {
"category": "INTEGER TYPES", "question": " Of an integer type, this is the number of bits it uses to represent values, excluding any sign and padding bits.", "suggestions": [], "answer": "precision", "id": "287", "alternativeSpellings":[]}
    ,
    {
"answer": "width", "suggestions": [], "question": " Of an integer type, this is the number of bits it uses to represent values, including any sign and padding bits.", "category": "INTEGER TYPES", "alternativeSpellings": [], "id":"288"}
    ,
    {
"alternativeSpellings": [], "id": "289", "question": " For two structures to be compatible, corresponding members shall be declared in this.", "category": "COMPATIBLE TYPE AND COMPOSITE TYPE", "answer": "same order", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "290", "question": " For two structures or unions to be compatible, corresponding bit-fields shall have the same this.", "category": "COMPATIBLE TYPE AND COMPOSITE TYPE", "answer": "widths", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "291", "suggestions": [], "answer": "values", "question": " For two enumerations to be compatible, corresponding members shall have the same this.", "category":"COMPATIBLE TYPE AND COMPOSITE TYPE"}
    ,
    {
"alternativeSpellings": [], "id": "292", "answer": "composite type", "suggestions": [], "question": " This kind of type can be constructed from two types that are compatible; it is a type that is compatible with both of the two types.", "category":"MISC"}
    ,
    {
"answer": "alignment", "suggestions": [], "question": " This is an implementation-defined integer value representing the number of bytes between successive addresses at which a given object can be allocated.", "category": "MISC", "alternativeSpellings": [], "id":"293"}
    ,
    {
"id": "294", "alternativeSpellings": [], "category": "ALIGNMENT OF OBJECTS", "question": " This kind of alignment is represented by an alignment less than or equal to the greatest alignment supported by the implementation in all contexts, which is equal to _Alignof (max_align_t).", "answer": "fundamental alignment", "suggestions":[]}
    ,
    {
"category": "ALIGNMENT OF OBJECTS", "question": " This kind of alignment is represented by an alignment greater than _Alignof (max_align_t).", "suggestions": [], "answer": "extended alignment", "id": "295", "alternativeSpellings":[]}
    ,
    {
"category": "ALIGNMENT OF OBJECTS", "question": " A type having an extended alignment requirement is called this.", "answer": "over-aligned type", "suggestions": [], "id": "296", "alternativeSpellings":[]}
    ,
    {
"id": "297", "alternativeSpellings": [], "suggestions": [], "answer": "nonnegative integral power of two", "category": "ALIGNMENT OF OBJECTS", "question":" Every valid alignment value shall be in this domain."}
    ,
    {
"category": "ALIGNMENT OF OBJECTS", "question": " This type shall have the weakest alignment requirement.", "suggestions": [], "answer": "char", "id": "298", "alternativeSpellings":[]}
    ,
    {
"answer": "greater", "suggestions": [], "question": " When an alignment is compared as this to another it represents a stricter alignment.", "category": "ALIGNMENT OF OBJECTS", "alternativeSpellings": [], "id":"299"}
    ,
    {
"category": "BOOLEAN, CHARACTERS, AND INTEGERS", "question": " The rank of a signed integer type shall compare as this to the rank of any signed integer type with less precision.", "answer": "greater", "suggestions": [], "id": "300", "alternativeSpellings":[]}
    ,
    {
"id": "301", "alternativeSpellings": [], "category": "BOOLEAN, CHARACTERS, AND INTEGERS", "question": " The rank of this type shall be less than the rank of all other standard integer types.", "answer": "_Bool", "suggestions":[]}
    ,
    {
"answer": "integer promotions", "suggestions": [], "question": " If an int can represent all values of the original integer type (as restricted by the width, for a bit-field), the value is converted to an int; otherwise, it is converted to an unsigned int. This conversion is called this.", "category": "BOOLEAN, CHARACTERS, AND INTEGERS", "alternativeSpellings": [], "id":"302"}
    ,
    {
"question": " When any scalar value is converted to _Bool, the result is 0 if the value compares equal to 0; otherwise, the result is this.", "category": "BOOLEAN TYPE", "answer": "one", "suggestions": [], "alternativeSpellings": [], "id":"303"}
    ,
    {
"id": "304", "alternativeSpellings": [], "answer": "unsigned", "suggestions": [], "category": "MISC", "question":" When a value with integer type is converted to another integer type other than _Bool, if the value can be represented by the new type, it is unchanged. Otherwise, if the new type is this, the value is converted by repeatedly adding or subtracting one more than the maximum value that can be represented in the new type until the value is in its range."}
    ,
    {
"alternativeSpellings": [], "id": "305", "suggestions": [], "answer": "fractional", "question": " When a finite value of real floating type is converted to an integer type other than _Bool, this part of the value is discarded.", "category":"REAL FLOATING AND INTEGER"}
    ,
    {
"suggestions": [], "answer": "implementation-defined", "question": " If the value of integer type being converted to a real floating type is in the range of values that can be represented but cannot be represented exactly, the result is either the nearest higher or nearest lower representable value, chosen in this manner.", "category": "REAL FLOATING AND INTEGER", "alternativeSpellings": [], "id":"306"}
    ,
    {
"question": " When a value of complex type is converted to a real type, this part of the complex value is discarded.", "category": "REAL AND COMPLEX", "suggestions": [], "answer": "imaginary", "alternativeSpellings": [], "id":"307"}
    ,
    {
"alternativeSpellings": [], "id": "308", "question": " This is an expression (with an object type other than void) that designates an object.", "category": "MISC", "suggestions": [], "answer":"lvalue"}
    ,
    {
"question": " This is an lvalue that does not have array type, does not have an incomplete type, does not have a const-qualified type, and if it is a structure or union, does not have any member (including, recursively, any member or element of all contained aggregates or unions) with a const-qualified type.", "category": "LVALUES, ARRAYS, AND FUNCTION DESIGNATORS", "answer": "MODIFIABLE LVALUE", "suggestions": [], "alternativeSpellings": [], "id":"309"}
    ,
    {
"alternativeSpellings": [], "id": "310", "question": " An obvious example of this is an identifier of an object.", "category": "MISC", "suggestions": [], "answer":"lvalue"}
    ,
    {
"category": "LVALUES, ARRAYS, AND FUNCTION DESIGNATORS", "question": " Except when it is the operand of the sizeof operator, the _Alignof operator, the unary & operator, the ++ operator, the -- operator, or the left operand of the . operator or an assignment operator, an lvalue that does not have array type is converted to the value stored in the designated object; this conversion is called this.", "answer": "lvalue conversion", "suggestions": [], "id": "311", "alternativeSpellings":[]}
    ,
    {
"answer": "pointer to type", "suggestions": [], "category": "LVALUES, ARRAYS, AND FUNCTION DESIGNATORS", "question": " Except when it is the operand of the sizeof operator, the _Alignof operator, or the unary & operator, or is a string literal used to initialize an array, an expression that has type ``array of type'' is converted to an expression with this type.", "id": "312", "alternativeSpellings":[]}
    ,
    {
"answer": "its value", "suggestions": [], "question": " If an expression is evaluated as a void expression, this is discarded.", "category": "VOID", "alternativeSpellings": [], "id":"313"}
    ,
    {
"id": "314", "alternativeSpellings": [], "category": "VOID", "question": " A void expression is evaluated for this.", "answer": "ITS SIDE EFFECTS", "suggestions":["EXPRESSION EFFECTS",
     "VOID"]}
    ,
    {
"id": "315", "alternativeSpellings": [], "answer": "void expression", "suggestions": [], "category": "VOID", "question":" This kind of expression is evaluated solely for its side effects."}
    ,
    {
"suggestions": [], "answer": "pointer to void", "question": " A pointer to any object type may be converted to this and back again; the result shall compare equal to the original pointer.", "category": "POINTERS", "alternativeSpellings": [], "id":"316"}
    ,
    {
"suggestions": [], "answer": "null pointer constant", "category": "POINTERS", "question": " An integer constant expression with the value 0, or such an expression cast to type void *, is called this.", "id": "317", "alternativeSpellings":[]}
    ,
    {
"question": " If a null pointer constant is converted to a pointer type, the resulting pointer is called this.", "category": "POINTERS", "answer": "null pointer", "suggestions": [], "alternativeSpellings": [], "id":"318"}
    ,
    {
"id": "319", "alternativeSpellings": [], "category": "POINTERS", "question": " If a null pointer constant is converted to a pointer type, the resulting pointer, called a null pointer, is guaranteed to compare as this to a pointer to any object or function.", "answer": "not equal", "suggestions":[]}
    ,
    {
"category": "POINTERS", "question": " The mapping functions for converting a pointer to an integer or an integer to a pointer are intended to be consistent with this of the execution environment.", "answer": "addressing structure", "suggestions": [], "id": "320", "alternativeSpellings":[]}
    ,
    {
"id": "321", "alternativeSpellings": [], "suggestions": [], "answer": "implementation defined", "category": "POINTERS", "question":" An integer may be converted to any pointer type. The result for an integer other than zero is this kind of behavior, might not be correctly aligned, might not point to an entity of the referenced type, and might be a trap representation."}
    ,
    {
"answer": "lowest", "suggestions": [], "question": " When a pointer to an object is converted to a pointer to a character type, the result points to this addressed byte of the object.", "category": "POINTERS", "alternativeSpellings": [], "id":"322"}
    ,
    {
"category": "POINTERS", "question": " If a pointer type to A is correctly aligned for a pointer to type B, which in turn is correctly aligned for a pointer to type C, then a pointer to type A is correctly aligned for a pointer to this type.", "suggestions": [], "answer": "C", "id": "323", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "324", "answer": "equal", "suggestions": [], "question": " A pointer to a function of one type may be converted to a pointer to a function of another type and back again; the result shall compare as this to the original pointer.", "category":"POINTERS"}
    ,
    {
"alternativeSpellings": [], "id": "325", "answer": "undefined", "suggestions": [], "question": " If a converted pointer is used to call a function whose type is not compatible with the referenced type, the behavior is this.", "category":"POINTERS"}
    ,
    {
"suggestions": [], "answer": "token", "category": "LEXICAL ELEMENTS", "question": " This is the minimal lexical element of the language in translation phases 7 and 8.", "id": "326", "alternativeSpellings":[]}
    ,
    {
"question": " This is the minimal lexical element of the language in translation phases 3 through 6.", "category": "LEXICAL ELEMENTS", "suggestions": [], "answer": "preprocessing token", "alternativeSpellings": [], "id":"327"}
    ,
    {
"question": " This is a sequence of nondigit characters (including the underscore _, the lowercase and uppercase Latin letters, and other characters) and digits, which designates one or more entities.", "category": "GENERAL", "answer": "identifier", "suggestions": [], "alternativeSpellings": [], "id":"328"}
    ,
    {
"question": " An implementation may allow multibyte characters that are not part of the basic source character set to appear in these.", "category": "GENERAL", "suggestions": [], "answer": "identifiers", "alternativeSpellings": [], "id":"329"}
    ,
    {
"id": "330", "alternativeSpellings": [], "category": "GENERAL", "question": " When preprocessing tokens are converted to tokens during translation phase 7, if a preprocessing token could be converted to either a keyword or an identifier, it is converted to this.", "answer": "keyword", "suggestions":[]}
    ,
    {
"id": "331", "alternativeSpellings": [], "category": "PREDEFINED IDENTIFIERS", "question": " This identifier shall be implicitly declared by the translator as if, immediately following the opening brace of each function definition, the declaration static const char this[] = \"function-name\"; appeared, where function-name is the name of the lexically-enclosing function.", "answer": "__func__", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "332", "answer": "universal", "suggestions": [], "question": " This kind of character name shall not specify a character whose short identifier is less than 00A0 other than 0024 ($), 0040 (@), or 0060 (`), nor one in the range D800 through DFFF inclusive.", "category":"MISC"}
    ,
    {
"suggestions": [], "answer": "decimal", "category": "INTEGER CONSTANTS", "question": " This kind of constant begins with a nonzero digit and consists of a sequence of decimal digits.", "id": "333", "alternativeSpellings":[]}
    ,
    {
"question": " This kind of constant consists of the prefix 0 optionally followed by a sequence of the digits 0 through 7 only.", "category": "INTEGER CONSTANTS", "answer": "octal", "suggestions": [], "alternativeSpellings": [], "id":"334"}
    ,
    {
"suggestions": [], "answer": "hexadecimal", "question": " This kind of constant consists of the prefix 0x or 0X followed by a sequence of the decimal digits and the letters a (or A) through f (or F) with values 10 through 15 respectively.", "category": "INTEGER CONSTANTS", "alternativeSpellings": [], "id":"335"}
    ,
    {
"alternativeSpellings": [], "id": "336", "question": " If a floating constant is suffixed by the letter f or F, it has this type.", "category": "MISC", "answer": "float", "suggestions":[]}
    ,
    {
"id": "337", "alternativeSpellings": [], "category": "FLOATING CONSTANTS", "question": " If a floating constant is suffixed by the letter l or L, it has this type.", "suggestions": [], "answer":"long double"}
    ,
    {
"id": "338", "alternativeSpellings": [], "category": "MISC", "question": " The conversion of this kind of constant shall not raise an exceptional condition or a floating-point exception at execution time.", "suggestions": [], "answer":"floating"}
    ,
    {
"id": "339", "alternativeSpellings": [], "category": "ENUMERATION CONSTANTS", "question": " An identifier declared as an enumeration constant has this type.", "suggestions": [], "answer":"INT"}
    ,
    {
"alternativeSpellings": [], "id": "340", "question": " This kind of constant is a sequence of one or more multibyte characters enclosed in single-quotes.", "category": "CHARACTER CONSTANTS", "suggestions": [], "answer":"integer character constant"}
    ,
    {
"id": "341", "alternativeSpellings": [], "category": "CHARACTER CONSTANTS", "question": " This kind of constant is a sequence of one or more multibyte characters enclosed in single-quotes and prefixed by the letter L, u, or U.", "suggestions": [], "answer":"wide character constant"}
    ,
    {
"id": "342", "alternativeSpellings": [], "suggestions": [], "answer": "unsigned char", "category": "CHARACTER CONSTANTS", "question":" The value of an octal or hexadecimal escape sequence in a character constant shall be in the range of representable values for this type if not prefixed."}
    ,
    {
"id": "343", "alternativeSpellings": [], "suggestions": [], "answer": "wchar_t", "category": "CHARACTER CONSTANTS", "question":" The value of an octal or hexadecimal escape sequence in a character constant shall be in the range of representable values for the unsigned type corresponding to this type if prefixed with L."}
    ,
    {
"question": " The value of an octal or hexadecimal escape sequence in a character constant shall be in the range of representable values for this type if prefixed with u.", "category": "CHARACTER CONSTANTS", "suggestions": [], "answer": "char16_t", "alternativeSpellings": [], "id":"344"}
    ,
    {
"alternativeSpellings": [], "id": "345", "answer": "char32_t", "suggestions": [], "question": " The value of an octal or hexadecimal escape sequence in a character constant shall be in the range of representable values for this type if prefixed with U.", "category":"CHARACTER CONSTANTS"}
    ,
    {
"category": "CHARACTER CONSTANTS", "question": " If an integer character constant contains a single character or escape sequence, its value is the one that results when an object with type char whose value is that of the single character or escape sequence is converted to this type.", "suggestions": [], "answer": "int", "id": "346", "alternativeSpellings":[]}
    ,
    {
"answer": "adjacent", "suggestions": [], "category": "STRING LITERALS", "question": " A sequence of these string literal tokens shall not include both a wide string literal and a UTF-8 string literal.", "id": "347", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "character string literal", "category": "STRING LITERALS", "question": " This kind of string literal is a sequence of zero or more multibyte characters enclosed in double-quotes.", "id": "348", "alternativeSpellings":[]}
    ,
    {
"id": "349", "alternativeSpellings": [], "suggestions": [], "answer": "UTF-8 string literal", "category": "STRING LITERALS", "question":" This kind of string literal is a sequence of zero or more multibyte characters enclosed in double-quotes and prefixed by u8."}
    ,
    {
"answer": "wide string literal", "suggestions": [], "category": "STRING LITERALS", "question": " This kind of string literal is a sequence of zero or more multibyte characters enclosed in double-quotes and  prefixed by the letter L, u, or U.", "id": "350", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "six", "question": " In this translation phase, the multibyte character sequences specified by any sequence of adjacent character and identically-prefixed string literal tokens are concatenated into a single multibyte character sequence.", "category": "STRING LITERALS", "alternativeSpellings": [], "id":"351"}
    ,
    {
"id": "352", "alternativeSpellings": [], "category": "STRING LITERALS", "question": " In translation phase 6, the multibyte character sequences specified by any sequence of adjacent character and identically-prefixed string literal tokens are this into a single multibyte character sequence.", "suggestions": [], "answer":"concatenated"}
    ,
    {
"id": "353", "alternativeSpellings": [], "category": "STRING LITERALS", "question": " When adjacent string literals are concatenated together in translation phase 6, if any of the tokens has an encoding prefix, the resulting multibyte character sequence is treated as having the same prefix; otherwise, it is treated as this kind of string literal.", "suggestions": [], "answer":"character string literal"}
    ,
    {
"question": " If the program attempts to do this to a string literal, the behavior is undefined.", "category": "STRING LITERALS", "suggestions": [], "answer": "modify", "alternativeSpellings": [], "id":"354"}
    ,
    {
"alternativeSpellings": [], "id": "355", "question": " A punctuator may specify an operation to be performed (which in turn may yield a value or a function designator, produce a side effect, or some combination thereof) in which case it is known as this.", "category": "PUNCTUATORS", "answer": "operator", "suggestions":[]}
    ,
    {
"answer": "operand", "suggestions": [], "question": " This is an entity on which an operator acts.", "category": "PUNCTUATORS", "alternativeSpellings": [], "id":"356"}
    ,
    {
"alternativeSpellings": [], "id": "357", "suggestions": [], "answer": "digraphs", "question": " The following tokens, <: :> <% %> %: and %:%:, are known as these.", "category":"PUNCTUATORS"}
    ,
    {
"answer": "#include", "suggestions": [], "category": "HEADER NAMES", "question": " If the characters ', \\, \", //, or /* occur in the sequence between the < and > delimiters of this preprocessing directive, the behavior is undefined.", "id": "358", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "expression", "category": "FUNCTIONS", "question": " A sequence of operators and operands that specifies computation of a value, or that designates an object or a function, or that generates side effects, or that performs a combination thereof, is called this.", "id": "359", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "360", "suggestions": [], "answer": "unsequenced", "question": " If a side effect on a scalar object is this relative to either a different side effect on the same scalar object or a value computation using the value of the same scalar object, the behavior is undefined.", "category":"EXPRESSIONS"}
    ,
    {
"category": "EXPRESSIONS", "question": " If a side effect on a scalar object is unsequenced relative to either a different side effect on the same scalar object or a value computation using the value of the same scalar object, the behavior is this.", "answer": "undefined", "suggestions": [], "id": "361", "alternativeSpellings":[]}
    ,
    {
"id": "362", "alternativeSpellings": [], "answer": "unsequenced side effect", "suggestions": [], "category": "EXPRESSIONS", "question":" If there are multiple allowable orderings of the subexpressions of an expression, the behavior is undefined if this occurs in any of the orderings."}
    ,
    {
"id": "363", "alternativeSpellings": [], "suggestions": [], "answer": "precedence of operators", "category": "EXPRESSIONS", "question":" This is specified by the syntax of the grouping of operators and operands in the evaluation of an expression."}
    ,
    {
"id": "364", "alternativeSpellings": [], "category": "EXPRESSIONS", "question": " The unary operator ~, and the binary operators <<, >>, &, ^, and \\| are collectively described as this.", "answer": "bitwise operators", "suggestions":[]}
    ,
    {
"answer": "unary ~", "suggestions": [], "category": "EXPRESSIONS", "question": " The result of this operator is the bitwise complement of its operand.", "id": "365", "alternativeSpellings":[]}
    ,
    {
"category": "EXPRESSIONS", "question": " The result of this operator is its left operand shifted the number of bit positions left designated by its right operand.", "suggestions": [], "answer": "binary <<", "id": "366", "alternativeSpellings":[]}
    ,
    {
"question": " The result of this operator is its left operand shifted the number of bit positions right designated by its right operand.", "category": "EXPRESSIONS", "answer": "binary >>", "suggestions": [], "alternativeSpellings": [], "id":"367"}
    ,
    {
"category": "EXPRESSIONS", "question": " The result of this operator is the bitwise-AND of its operands.", "answer": "binary &", "suggestions": [], "id": "368", "alternativeSpellings":[]}
    ,
    {
"answer": "binary ^", "suggestions": [], "question": " The result of this operator is the exclusive-OR of its operands.", "category": "EXPRESSIONS", "alternativeSpellings": [], "id":"369"}
    ,
    {
"alternativeSpellings": [], "id": "370", "suggestions": [], "answer": "binary \\|", "question": " The result of this operator is the bitwise-OR of its operands.", "category":"EXPRESSIONS"}
    ,
    {
"question": " The bitwise operators are required to have operands that have this kind of type.", "category": "EXPRESSIONS", "suggestions": [], "answer": "integer", "alternativeSpellings": [], "id":"371"}
    ,
    {
"alternativeSpellings": [], "id": "372", "question": " If the result of the evaluation of an expression is not mathematically defined or not in the range of representable values for its type, this kind of condition occurs.", "category": "EXPRESSIONS", "answer": "exceptional condition", "suggestions":[]}
    ,
    {
"id": "373", "alternativeSpellings": [], "category": "EXPRESSIONS", "question": " If an exceptional condition occurs during the evaluation of an expression (that is, if the result is not mathematically defined or not in the range of representable values for its type), the behavior is this.", "suggestions": [], "answer":"undefined"}
    ,
    {
"alternativeSpellings": [], "id": "374", "suggestions": [], "answer": "effective type", "question": " If a value is stored into an object having no declared type through an lvalue having a type that is not a character type, then the type of the lvalue becomes this type of the object for that access and for subsequent accesses that do not modify the stored value.", "category":"EXPRESSIONS"}
    ,
    {
"id": "375", "alternativeSpellings": [], "category": "EXPRESSIONS", "question": " When a floating expression is evaluated as though it were a single operation, thereby omitting rounding errors implied by the source code and the expression evaluation method, it is called this.", "answer": "contracted expression", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "376", "question": " This pragma in <math.h> provides a way to disallow contracted expressions.", "category": "EXPRESSIONS", "answer": "FP_CONTRACT", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "one", "question": " A generic selection shall have no more than this many default generic associations.", "category": "GENERIC SELECTION", "alternativeSpellings": [], "id":"377"}
    ,
    {
"category": "GENERIC SELECTION", "question": " The type name in a generic association shall specify a complete object type other than this kind of type.", "suggestions": ["VOID", "INCOMPLETE OBJECT TYPE", "FUNCTION"], "answer": "VARIABLY MODIFIED TYPE", "id": "378", "alternativeSpellings":[]}
    ,
    {
"id": "379", "alternativeSpellings": [], "category": "GENERIC SELECTION", "question": " No two generic associations in the same generic selection shall specify this kind of types.", "answer": "compatible", "suggestions":[]}
    ,
    {
"id": "380", "alternativeSpellings": [], "answer": "default generic association", "suggestions": [], "category": "GENERIC SELECTION", "question":" If a generic selection does not have one of this, its controlling expression shall have type compatible with exactly one of the types named in its generic association list."}
    ,
    {
"id": "381", "alternativeSpellings": [], "answer": "integer", "suggestions": [], "category": "ARRAY SUBSCRIPTING", "question":" One of the expressions of an array subscript shall have type ``pointer to complete object type'', the other expression shall have this type, and the result has type ``type''."}
    ,
    {
"id": "382", "alternativeSpellings": [], "category": "ARRAY SUBSCRIPTING", "question": " A postfix expression followed by an expression in these is a subscripted designation of an element of an array object.", "answer": "square brackets", "suggestions":[]}
    ,
    {
"id": "383", "alternativeSpellings": [], "category": "ARRAY SUBSCRIPTING", "question": " Regarding array subscripting, the expression x[i] is equivalent to this (no spaces).", "answer": "(*((x)+(i)))", "suggestions":[]}
    ,
    {
"id": "384", "alternativeSpellings": [], "category": "ARRAY SUBSCRIPTING", "question": " Regarding array subscripting, this expression is equivalent to (*((x)+(i))).", "answer": "x[i]", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "385", "question": " If the expression that denotes the called function has a type that includes this, the number of arguments shall agree with the number of parameters.", "category": "FUNCTION CALLS", "suggestions": [], "answer":"prototype"}
    ,
    {
"answer": "function call", "suggestions": [], "question": " A postfix expression followed by parentheses () containing a possibly empty, comma-separated list of expressions is called this.", "category": "MISC", "alternativeSpellings": [], "id":"386"}
    ,
    {
"id": "387", "alternativeSpellings": [], "category": "FUNCTION CALLS", "question": " If the expression that denotes the called function has a type that does not include a prototype, the integer promotions are performed on each argument, and arguments that have type float are promoted to double. These are called this.", "answer": "default argument promotions", "suggestions":[]}
    ,
    {
"answer": "prototype", "suggestions": [], "category": "FUNCTION CALLS", "question": " If the expression that denotes the called function has a type that does not include this, the integer promotions are performed on each argument, and arguments that have type float are promoted to double. These are called the default argument promotions.", "id": "388", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "389", "question": " If the expression that denotes the called function has a type that does include this, the arguments are implicitly converted, as if by assignment, to the types of the corresponding parameters, taking the type of each parameter to be the unqualified version of its declared type.", "category": "FUNCTION CALLS", "suggestions": [], "answer":"prototype"}
    ,
    {
"id": "390", "alternativeSpellings": [], "category": "FUNCTION CALLS", "question": " If the expression that denotes the called function has a type that does include a prototype, the arguments are implicitly converted, as if by this, to the types of the corresponding parameters, taking the type of each parameter to be the unqualified version of its declared type.", "answer": "assignment", "suggestions":[]}
    ,
    {
"answer": "recursive", "suggestions": [], "category": "FUNCTION CALLS", "question": " This kind of function call shall be permitted, both directly and indirectly through any chain of other functions.", "id": "391", "alternativeSpellings":[]}
    ,
    {
"question": " In the function call (*pf[f1()]) (f2(), f3() + f4()) the functions f1, f2, f3, and f4 may be called in any order. However, all of these must be completed before the function pointed to by pf[f1()] is called.", "category": "FUNCTION CALLS", "suggestions": [], "answer": "side effects", "alternativeSpellings": [], "id":"392"}
    ,
    {
"alternativeSpellings": [], "id": "393", "suggestions": [], "answer": ".", "question": " The first operand of this operator shall have an atomic, qualified, or unqualified structure or union type, and the second operand shall name a member of that type.", "category":"STRUCTURE AND UNION MEMBERS"}
    ,
    {
"id": "394", "alternativeSpellings": [], "category": "STRUCTURE AND UNION MEMBERS", "question": " The first operand of this operator shall have type ``pointer to atomic, qualified, or unqualified structure'' or ``pointer to atomic, qualified, or unqualified union'', and the second operand shall name a member of the type pointed to.", "suggestions": [], "answer":"->"}
    ,
    {
"alternativeSpellings": [], "id": "395", "question": " If the member used to read the contents of this kind of object is not the same as the member last used to store a value in the object, the appropriate part of the object representation of the value is reinterpreted as an object representation in the new type.", "category": "STRUCTURE AND UNION MEMBERS", "answer": "union", "suggestions":[]}
    ,
    {
"category": "STRUCTURE AND UNION MEMBERS", "question": " If the member used to read the contents of a union object is not the same as the member last used to store a value in the object, the appropriate part of the object representation of the value is reinterpreted as an object representation in the new type. This process is sometimes called this.", "suggestions": [], "answer": "type punning", "id": "396", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "397", "question": " The result of this operator is the value of the operand. As a side effect, the value of the operand object is incremented.", "category": "POSTFIX INCREMENT AND DECREMENT OPERATORS", "answer": "postfix ++", "suggestions":[]}
    ,
    {
"id": "398", "alternativeSpellings": [], "suggestions": [], "answer": "postfix --", "category": "POSTFIX INCREMENT AND DECREMENT OPERATORS", "question":" The result of this operator is the value of the operand. As a side effect, the value of the operand object is decremented."}
    ,
    {
"suggestions": [], "answer": "VLA", "question": " The type name of a compound literal shall specify a complete object type or an array of unknown size, but not this type.", "category": "COMPOUND LITERALS", "alternativeSpellings": [], "id":"399"}
    ,
    {
"question": " A postfix expression that consists of a parenthesized type name followed by a brace-enclosed list of initializers is called this.", "category": "MISC", "answer": "compound literal", "suggestions": [], "alternativeSpellings": [], "id":"400"}
    ,
    {
"id": "401", "alternativeSpellings": [], "category": "COMPOUND LITERALS", "question": " If the type name specifies an array of unknown size, the size is determined by this, and the type of the compound literal is that of the completed array type.", "suggestions": [], "answer":"initializer list"}
    ,
    {
"alternativeSpellings": [], "id": "402", "answer": "static", "suggestions": [], "question": " If a compound literal occurs outside the body of a function, the object has this storage duration.", "category":"COMPOUND LITERALS"}
    ,
    {
"alternativeSpellings": [], "id": "403", "suggestions": [], "answer": "prefix ++", "question": " The value of the operand of this operator is incremented. The result is the new value of the operand after incrementation.", "category":"PREFIX INCREMENT AND DECREMENT OPERATORS"}
    ,
    {
"category": "PREFIX INCREMENT AND DECREMENT OPERATORS", "question": " The value of the operand of this operator is decremented. The result is the new value of the operand after decrementation.", "suggestions": [], "answer": "prefix --", "id": "404", "alternativeSpellings":[]}
    ,
    {
"answer": "unary &", "suggestions": [], "question": " The operand of this operator shall be either a function designator, the result of a [] or unary * operator, or an lvalue that designates an object that is not a bit-field and is not declared with the register storage-class specifier.", "category": "ADDRESS AND INDIRECTION OPERATORS", "alternativeSpellings": [], "id":"405"}
    ,
    {
"answer": "pointer", "suggestions": [], "question": " The operand of the unary * operator shall have this kind of type.", "category": "ADDRESS AND INDIRECTION OPERATORS", "alternativeSpellings": [], "id":"406"}
    ,
    {
"alternativeSpellings": [], "id": "407", "question": " This operator yields the address of its operand.", "category": "ADDRESS AND INDIRECTION OPERATORS", "suggestions": [], "answer":"unary &"}
    ,
    {
"id": "408", "alternativeSpellings": [], "suggestions": [], "answer": "address", "category": "MISC", "question":" The unary & operator yields this of its operand."}
    ,
    {
"id": "409", "alternativeSpellings": [], "answer": "pointer to type", "suggestions": [], "category": "ADDRESS AND INDIRECTION OPERATORS", "question":" If the operand of the unary & operator has type ``type'', the result has this type."}
    ,
    {
"suggestions": [], "answer": "unary *", "question": " If the operand of the unary & operator is the result of this operator, neither that operator nor the & operator is evaluated and the result is as if both were omitted, except that the constraints on the operators still apply and the result is not an lvalue.", "category": "ADDRESS AND INDIRECTION OPERATORS", "alternativeSpellings": [], "id":"410"}
    ,
    {
"id": "411", "alternativeSpellings": [], "suggestions": [], "answer": "unary &", "category": "ADDRESS AND INDIRECTION OPERATORS", "question":" The result of this operator is a pointer to the object or function designated by its operand."}
    ,
    {
"id": "412", "alternativeSpellings": [], "category": "ADDRESS AND INDIRECTION OPERATORS", "question": " This operator denotes indirection.", "suggestions": [], "answer":"unary *"}
    ,
    {
"id": "413", "alternativeSpellings": [], "category": "MISC", "question": " This is denoted by the unary * operator.", "answer": "indirection", "suggestions":[]}
    ,
    {
"answer": "type", "suggestions": [], "category": "ADDRESS AND INDIRECTION OPERATORS", "question": " If the operand of the unary * operator has type ``pointer to type'', the result has this type.", "id": "414", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "arithmetic", "category": "MISC", "question": " The operand of the unary + or - operator shall have this kind of type.", "id": "415", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "integer", "question": " The operand of the unary ~ operator shall have this kind of type.", "category": "UNARY ARITHMETIC OPERATORS", "alternativeSpellings": [], "id":"416"}
    ,
    {
"alternativeSpellings": [], "id": "417", "answer": "scalar", "suggestions": [], "question": " The operand of the unary ! operator shall have this kind of type.", "category":"UNARY ARITHMETIC OPERATORS"}
    ,
    {
"question": " If the type of the ~ operator is this kind of type, the expression ~E is equivalent to the maximum value representable in that type minus E.", "category": "UNARY ARITHMETIC OPERATORS", "answer": "unsigned", "suggestions": [], "alternativeSpellings": [], "id":"418"}
    ,
    {
"id": "419", "alternativeSpellings": [], "suggestions": [], "answer": "_Alignof", "category": "FUNCTIONS", "question":" This operator shall not be applied to an expression that has function type or an incomplete type, to the parenthesized name of such a type, or to an expression that designates a bit-field member."}
    ,
    {
"alternativeSpellings": [], "id": "420", "question": " If the type of the operand of sizeof is this kind of type, the operand is evaluated; otherwise, the operand is not evaluated and the result is an integer constant.", "category": "THE SIZEOF AND _ALIGNOF OPERATORS", "answer": "VLA", "suggestions":[]}
    ,
    {
"id": "421", "alternativeSpellings": [], "category": "THE SIZEOF AND _ALIGNOF OPERATORS", "question": " If the type of the operand of sizeof is a variable length array type, the operand is evaluated; otherwise, the operand is not evaluated and the result is this.", "suggestions": [], "answer":"integer constant"}
    ,
    {
"alternativeSpellings": [], "id": "422", "suggestions": [], "answer": "_Alignof", "question": " When this operator is applied to an array type, the result is the alignment requirement of the element type.", "category":"MISC"}
    ,
    {
"category": "THE SIZEOF AND _ALIGNOF OPERATORS", "question": " When the sizeof operator is applied to an operand that has type char, unsigned char, or signed char, (or a qualified version thereof) the result is this.", "answer": "one", "suggestions": [], "id": "423", "alternativeSpellings":[]}
    ,
    {
"id": "424", "alternativeSpellings": [], "category": "MISC", "question": " When this operator is applied to an operand that has type char, unsigned char, or signed char, (or a qualified version thereof) the result is 1.", "answer": "sizeof", "suggestions":[]}
    ,
    {
"id": "425", "alternativeSpellings": [], "answer": "sizeof", "suggestions": [], "category": "MISC", "question":" When this operator is applied to an operand that has array type, the result is the total number of bytes in the array. When applied to an operand that has structure or union type, the result is the total number of bytes in such an object, including internal and trailing padding."}
    ,
    {
"category": "THE SIZEOF AND _ALIGNOF OPERATORS", "question": " When applied to a parameter declared to have array or function type, the sizeof operator yields the size of this type.", "suggestions": [], "answer": "pointer", "id": "426", "alternativeSpellings":[]}
    ,
    {
"id": "427", "alternativeSpellings": [], "suggestions": [], "answer": "sizeof", "category": "FUNCTIONS", "question":" When applied to a parameter declared to have array or function type, this operator yields the size of the adjusted (pointer) type."}
    ,
    {
"question": " When applied to a parameter declared to have this type, the sizeof operator yields the size of the adjusted (pointer) type.", "category": "THE SIZEOF AND _ALIGNOF OPERATORS", "suggestions": [], "answer": "array", "alternativeSpellings": [], "id":"428"}
    ,
    {
"answer": "explicit", "suggestions": [], "category": "CAST OPERATORS", "question": " Conversions that involve pointers, except where permitted by the constraints of simple assignment, shall be specified by means of this kind of cast.", "id": "429", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "430", "answer": "floating", "suggestions": [], "question": " A pointer type shall not be converted (as by cast) to this kind of type.", "category":"CAST OPERATORS"}
    ,
    {
"alternativeSpellings": [], "id": "431", "question": " A floating type shall not be converted (as by cast) to this kind of type.", "category": "CAST OPERATORS", "suggestions": [], "answer":"pointer"}
    ,
    {
"question": " Preceding an expression by a parenthesized type name converts the value of the expression to the named type. This construction is called this.", "category": "MISC", "answer": "cast", "suggestions": [], "alternativeSpellings": [], "id":"432"}
    ,
    {
"suggestions": [], "answer": "arithmetic", "question": " Each of the operands of multiplicative operators shall have this kind of type.", "category": "MULTIPLICATIVE OPERATORS", "alternativeSpellings": [], "id":"433"}
    ,
    {
"question": " The operands of the % operator shall have this kind of type.", "category": "MULTIPLICATIVE OPERATORS", "suggestions": [], "answer": "integer", "alternativeSpellings": [], "id":"434"}
    ,
    {
"answer": "binary *", "suggestions": [], "category": "MULTIPLICATIVE OPERATORS", "question": " The result of this operator is the product of the operands.", "id": "435", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "436", "answer": "binary /", "suggestions": [], "question": " The result of this operator is the quotient from the division of the first operand by the second.", "category":"MULTIPLICATIVE OPERATORS"}
    ,
    {
"category": "MULTIPLICATIVE OPERATORS", "question": " The result of the / operator is this from the division of the first operand by the second.", "suggestions": [], "answer": "quotient", "id": "437", "alternativeSpellings":[]}
    ,
    {
"id": "438", "alternativeSpellings": [], "category": "MULTIPLICATIVE OPERATORS", "question": " The result of the % operator is this from the division of the first operand by the second.", "suggestions": [], "answer":"remainder"}
    ,
    {
"answer": "binary %", "suggestions": [], "category": "MULTIPLICATIVE OPERATORS", "question": " The result of this operator is the remainder from the division of the first operand by the second.", "id": "439", "alternativeSpellings":[]}
    ,
    {
"answer": "fractional", "suggestions": [], "category": "MULTIPLICATIVE OPERATORS", "question": " When integers are divided, the result of the / operator is the algebraic quotient with this part discarded.", "id": "440", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "441", "question": " For addition, either both operands shall have this type, or one operand shall be a pointer to a complete object type and the other shall have integer type.", "category": "ADDITIVE OPERATORS", "suggestions": [], "answer":"arithmetic"}
    ,
    {
"suggestions": [], "answer": "integer", "question": " For addition, either both operands shall have arithmetic type, or one operand shall be a pointer to a complete object type and the other shall have this type.", "category": "ADDITIVE OPERATORS", "alternativeSpellings": [], "id":"442"}
    ,
    {
"alternativeSpellings": [], "id": "443", "answer": "pointer", "suggestions": [], "question": " When an expression that has integer type is added to or subtracted from a pointer, the result has the type of this operand.", "category":"ADDITIVE OPERATORS"}
    ,
    {
"answer": "subtraction", "suggestions": [], "question": " When this happens to two pointers, both shall point to elements of the same array object, or one past the last element of the array object; the result is the difference of the subscripts of the two array elements.", "category": "ADDITIVE OPERATORS", "alternativeSpellings": [], "id":"444"}
    ,
    {
"answer": "integer", "suggestions": [], "question": " Each of the operands for the bitwise shift operators shall have this kind of type.", "category": "BITWISE SHIFT OPERATORS", "alternativeSpellings": [], "id":"445"}
    ,
    {
"category": "BITWISE SHIFT OPERATORS", "question": " If the value of the right operand of a bitwise shift operator is this or is greater than or equal to the width of the promoted left operand, the behavior is undefined.", "answer": "negative", "suggestions": [], "id": "446", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "447", "question": " The result of E1 << E2 is E1 left-shifted E2 bit positions; vacated bits are filled with these.", "category": "BITWISE SHIFT OPERATORS", "answer": "zeros", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "448", "suggestions": [], "answer": "implementation-defined", "question": " The result of E1 << E2 is E1 left-shifted E2 bit positions. If E1 has a signed type and a negative value, the resulting value is this.", "category":"BITWISE SHIFT OPERATORS"}
    ,
    {
"suggestions": [], "answer": "address space", "question": " When two pointers are compared, the result depends on the relative locations in this of the objects pointed to.", "category": "RELATIONAL OPERATORS", "alternativeSpellings": [], "id":"449"}
    ,
    {
"alternativeSpellings": [], "id": "450", "suggestions": [], "answer": "equal", "question": " If two pointers to object types both point to the same object, or both point one past the last element of the same array object, they compare as this.", "category":"RELATIONAL OPERATORS"}
    ,
    {
"category": "RELATIONAL OPERATORS", "question": " If the expression P points to an element of an array object and the expression Q points to the last element of the same array object, the pointer expression Q+1 compares as this to P.", "suggestions": [], "answer": "greater than", "id": "451", "alternativeSpellings":[]}
    ,
    {
"answer": "int", "suggestions": [], "question": " Each of the operators < (less than), > (greater than), <= (less than or equal to), and >= (greater than or equal to) shall yield 1 if the specified relation is true and 0 if it is false. The result has this type.", "category": "RELATIONAL OPERATORS", "alternativeSpellings": [], "id":"452"}
    ,
    {
"alternativeSpellings": [], "id": "453", "answer": "equal", "suggestions": [], "question": " Two pointers compare as this if one is a pointer to one past the end of one array object and the other is a pointer to the start of a different array object that happens to immediately follow the first array object in the address space.", "category":"MISC"}
    ,
    {
"alternativeSpellings": [], "id": "454", "answer": "scalar", "suggestions": [], "question": " Each of the operands of the && operator shall have this kind of type.", "category":"LOGICAL AND OPERATOR"}
    ,
    {
"alternativeSpellings": [], "id": "455", "question": " The && operator shall yield 1 if both of its operands compare as this to 0; otherwise, it yields 0.", "category": "LOGICAL AND OPERATOR", "suggestions": [], "answer":"not equal"}
    ,
    {
"question": " If the first operand of the && operator compares as this to 0, the second operand is not evaluated.", "category": "LOGICAL AND OPERATOR", "suggestions": [], "answer": "equal", "alternativeSpellings": [], "id":"456"}
    ,
    {
"question": " If the first operand of this operator compares as equal to 0, the second operand is not evaluated.", "category": "LOGICAL AND OPERATOR", "suggestions": [], "answer": "&&", "alternativeSpellings": [], "id":"457"}
    ,
    {
"alternativeSpellings": [], "id": "458", "answer": "scalar", "suggestions": [], "question": " Each of the operands of the \\|\\| operator shall have this type.", "category":"LOGICAL OR OPERATOR"}
    ,
    {
"question": " The \\|\\| operator shall yield 1 if either of its operands compare as this to 0; otherwise, it yields 0.", "category": "LOGICAL OR OPERATOR", "suggestions": [], "answer": "not equal", "alternativeSpellings": [], "id":"459"}
    ,
    {
"suggestions": [], "answer": "not equal", "question": " If the first operand of the \\|\\| operator compares as this to 0, the second operand is not evaluated.", "category": "LOGICAL OR OPERATOR", "alternativeSpellings": [], "id":"460"}
    ,
    {
"category": "LOGICAL OR OPERATOR", "question": " If the first operand of this operator compares unequal to 0, the second operand is not evaluated.", "suggestions": [], "answer": "\\|\\|", "id": "461", "alternativeSpellings":[]}
    ,
    {
"id": "462", "alternativeSpellings": [], "suggestions": [], "answer": "scalar", "category": "CONDITIONAL OPERATOR", "question":" The first operand of the ?: operator shall have this kind of type."}
    ,
    {
"answer": "conditional operator", "suggestions": [], "question": " The ?: operator is called this.", "category": "MISC", "alternativeSpellings": [], "id":"463"}
    ,
    {
"alternativeSpellings": [], "id": "464", "suggestions": [], "answer": "void", "question": " If both the second and third operands of the ?: operator have this type, the result has void type.", "category":"CONDITIONAL OPERATOR"}
    ,
    {
"suggestions": [], "answer": "modifiable lvalue", "question": " An assignment operator shall have this as its left operand.", "category": "ASSIGNMENT OPERATORS", "alternativeSpellings": [], "id":"465"}
    ,
    {
"suggestions": [], "answer": "lvalue", "category": "ASSIGNMENT OPERATORS", "question": " An assignment expression has the value of the left operand after the assignment, but is not this.", "id": "466", "alternativeSpellings":[]}
    ,
    {
"answer": "compound assignment", "suggestions": [], "category": "MISC", "question": " An assignment of the form E1 op = E2 is equivalent to the simple assignment expression E1 = E1 op (E2) and is called this.", "id": "467", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "468", "question": " This kind of expression shall not contain assignment, increment, decrement, function-call, or comma operators, except when they are contained within a subexpression that is not evaluated.", "category": "FUNCTIONS", "answer": "constant expression", "suggestions":[]}
    ,
    {
"id": "469", "alternativeSpellings": [], "answer": "integer constant expression", "suggestions": [], "category": "CONSTANT EXPRESSIONS", "question":" This kind of expression shall have integer type and shall only have operands that are integer constants, enumeration constants, character constants, sizeof expressions whose results are integer constants, _Alignof expressions, and floating constants that are the immediate operands of casts."}
    ,
    {
"alternativeSpellings": [], "id": "470", "suggestions": [], "answer": "integer constant expression", "question": " Cast operators in this kind of expression shall only convert arithmetic types to integer types, except as part of an operand to the sizeof or _Alignof operator.", "category":"CONSTANT EXPRESSIONS"}
    ,
    {
"category": "CONSTANT EXPRESSIONS", "question": " This kind of expression is required in a number of contexts such as the size of a bit-field member of a structure, the value of an enumeration constant, and the size of a non-variable length array.", "suggestions": [], "answer": "integer constant expression", "id": "471", "alternativeSpellings":[]}
    ,
    {
"question": " This kind of expression shall have arithmetic type and shall only have operands that are integer constants, floating constants, enumeration constants, character constants, sizeof expressions whose results are integer constants, and _Alignof expressions.", "category": "CONSTANT EXPRESSIONS", "answer": "arithmetic constant expression", "suggestions": [], "alternativeSpellings": [], "id":"472"}
    ,
    {
"suggestions": [], "answer": "arithmetic constant expression", "question": " Cast operators in this kind of expression shall only convert arithmetic types to arithmetic types, except as part of an operand to a sizeof or _Alignof operator.", "category": "CONSTANT EXPRESSIONS", "alternativeSpellings": [], "id":"473"}
    ,
    {
"question": " This kind of constant is a null pointer, a pointer to an lvalue designating an object of static storage duration, or a pointer to a function designator.", "category": "CONSTANT EXPRESSIONS", "answer": "address constant", "suggestions": [], "alternativeSpellings": [], "id":"474"}
    ,
    {
"alternativeSpellings": [], "id": "475", "question": " A declaration other than this kind of declaration shall declare at least a declarator (other than the parameters of a function or the members of a structure or union), a tag, or the members of an enumeration.", "category": "DECLARATIONS", "answer": "static_assert", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "476", "answer": "compatible", "suggestions": [], "question": " All declarations in the same scope that refer to the same object or function shall specify this kind of type.", "category":"DECLARATIONS"}
    ,
    {
"id": "477", "alternativeSpellings": [], "suggestions": [], "answer": "definition", "category": "DECLARATIONS", "question":" This is a declaration for an identifier that: for an object, causes storage to be reserved for that object; for a function, includes the function body; for an enumeration constant, is the (only) declaration of the identifier; for a typedef name, is the first (or only) declaration of the identifier."}
    ,
    {
"answer": "no linkage", "suggestions": [], "category": "DECLARATIONS", "question": " If an identifier for an object is declared with this linkage, the type for the object shall be complete by the end of its declarator, or by the end of its init-declarator if it has an initializer; in the case of function parameters (including in prototypes), it is the adjusted type that is required to be complete.", "id": "478", "alternativeSpellings":[]}
    ,
    {
"id": "479", "alternativeSpellings": [], "category": "STORAGE-CLASS SPECIFIERS", "question": " In the declaration of an object with block scope, if the declaration specifiers include this storage-class specifier, they shall also include either static or extern.", "suggestions": [], "answer":"_Thread_local"}
    ,
    {
"alternativeSpellings": [], "id": "480", "answer": "_Thread_local", "suggestions": [], "question": " If this storage-class specifier appears in any declaration of an object, it shall be present in every declaration of that object.", "category":"STORAGE-CLASS SPECIFIERS"}
    ,
    {
"id": "481", "alternativeSpellings": [], "category": "STORAGE-CLASS SPECIFIERS", "question": " This storage-class specifier shall not appear in the declaration specifiers of a function declaration.", "suggestions": [], "answer":"_Thread_local"}
    ,
    {
"alternativeSpellings": [], "id": "482", "question": " This specifier is called a ``storage-class specifier'' for syntactic convenience only.", "category": "STORAGE-CLASS SPECIFIERS", "suggestions": [], "answer":"typedef"}
    ,
    {
"answer": "register", "suggestions": [], "category": "STORAGE-CLASS SPECIFIERS", "question": " A declaration of an identifier for an object with this storage-class specifier suggests that access to the object be as fast as possible.", "id": "483", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "484", "answer": "extern", "suggestions": [], "question": " The declaration of an identifier for a function that has block scope shall have no explicit storage-class specifier other than this.", "category":"STORAGE-CLASS SPECIFIERS"}
    ,
    {
"id": "485", "alternativeSpellings": [], "answer": "typedef", "suggestions": [], "category": "STORAGE-CLASS SPECIFIERS", "question":" If an aggregate or union object is declared with a storage-class specifier other than this, the properties resulting from the storage-class specifier, except with respect to linkage, also apply to the members of the object, and so on recursively for any aggregate or union member objects."}
    ,
    {
"category": "TYPE SPECIFIERS", "question": " This type specifier shall not be used if the implementation does not support complex types.", "suggestions": [], "answer": "_Complex", "id": "486", "alternativeSpellings":[]}
    ,
    {
"category": "STRUCTURE AND UNION SPECIFIERS", "question": " A struct-declaration that does not declare an anonymous structure or anonymous union shall contain this.", "suggestions": [], "answer": "named member", "id": "487", "alternativeSpellings":[]}
    ,
    {
"answer": "flexible array member", "suggestions": [], "category": "STRUCTURE AND UNION SPECIFIERS", "question": " The last member of a structure with more than one named member may have incomplete array type; it is called this.", "id": "488", "alternativeSpellings":[]}
    ,
    {
"category": "STRUCTURE AND UNION SPECIFIERS", "question": " A structure containing this shall not be a member of a structure or an element of an array.", "suggestions": [], "answer": "flexible array member", "id": "489", "alternativeSpellings":[]}
    ,
    {
"id": "490", "alternativeSpellings": [], "category": "STRUCTURE AND UNION SPECIFIERS", "question": " The expression that specifies the width of a bit-field shall be this kind of expression.", "suggestions": [], "answer":"integer constant expression"}
    ,
    {
"question": " A structure or union may have a member declared to consist of a specified number of bits. Such a member is called this.", "category": "STRUCTURE AND UNION SPECIFIERS", "suggestions": [], "answer": "bit-field", "alternativeSpellings": [], "id":"491"}
    ,
    {
"suggestions": [], "answer": "same unit", "question": " If enough space remains, a bit-field that immediately follows another bit-field in a structure shall be packed into adjacent bits of this.", "category": "STRUCTURE AND UNION SPECIFIERS", "alternativeSpellings": [], "id":"492"}
    ,
    {
"id": "493", "alternativeSpellings": [], "suggestions": [], "answer": "implementation-defined", "category": "STRUCTURE AND UNION SPECIFIERS", "question":" If insufficient space remains, whether a bit-field that does not fit is put into the next unit or overlaps adjacent units is this."}
    ,
    {
"alternativeSpellings": [], "id": "494", "answer": "unnamed bit-field", "suggestions": [], "question": " This structure member is useful for padding to conform to externally imposed layouts.", "category":"STRUCTURE AND UNION SPECIFIERS"}
    ,
    {
"id": "495", "alternativeSpellings": [], "answer": "padding", "suggestions": [], "category": "STRUCTURE AND UNION SPECIFIERS", "question":" An unnamed bit-field structure member is useful for this to conform to externally imposed layouts."}
    ,
    {
"answer": "anonymous structure", "suggestions": [], "question": " An unnamed member whose type specifier is a structure specifier with no tag is called this.", "category": "STRUCTURE AND UNION SPECIFIERS", "alternativeSpellings": [], "id":"496"}
    ,
    {
"answer": "anonymous union", "suggestions": [], "question": " An unnamed member whose type specifier is a union specifier with no tag is called this.", "category": "STRUCTURE AND UNION SPECIFIERS", "alternativeSpellings": [], "id":"497"}
    ,
    {
"suggestions": [], "answer": "structure", "question": " A pointer to this object, suitably converted, points to its initial member (or if that member is a bit-field, then to the unit in which it resides), and vice versa.", "category": "MISC", "alternativeSpellings": [], "id":"498"}
    ,
    {
"question": " A pointer to this object, suitably converted, points to each of its members (or if a member is a bit-field, then to the unit in which it resides), and vice versa.", "category": "MISC", "answer": "union", "suggestions": [], "alternativeSpellings": [], "id":"499"}
    ,
    {
"category": "STRUCTURE AND UNION SPECIFIERS", "question": " There may be unnamed padding within a structure object, but not at this location.", "suggestions": [], "answer": "beginning", "id": "500", "alternativeSpellings":[]}
    ,
    {
"category": "STRUCTURE AND UNION SPECIFIERS", "question": " If this member of a structure would have no elements, it behaves as if it had one element but the behavior is undefined if any attempt is made to access that element or to generate a pointer one past it.", "suggestions": [], "answer": "flexible array member", "id": "501", "alternativeSpellings":[]}
    ,
    {
"answer": "int", "suggestions": [], "question": " The expression that defines the value of an enumeration constant shall be an integer constant expression that has a value representable as this type.", "category": "ENUMERATION SPECIFIERS", "alternativeSpellings": [], "id":"502"}
    ,
    {
"alternativeSpellings": [], "id": "503", "suggestions": [], "answer": "integer constant expression", "question": " The expression that defines the value of an enumeration constant shall be this kind of expression that has a value representable as an int.", "category":"ENUMERATION SPECIFIERS"}
    ,
    {
"alternativeSpellings": [], "id": "504", "question": " If the first enumerator has no =, the value of its enumeration constant is this value.", "category": "ENUMERATION SPECIFIERS", "answer": "zero", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "incomplete", "category": "TAGS", "question": " This kind of type may only by used when the size of an object of that type is not needed.", "id": "505", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "atomic", "category": "ATOMIC TYPE SPECIFIERS", "question": " Atomic type specifiers shall not be used if the implementation does not support this kind of types.", "id": "506", "alternativeSpellings":[]}
    ,
    {
"id": "507", "alternativeSpellings": [], "category": "ATOMIC TYPE SPECIFIERS", "question": " If the _Atomic keyword is immediately followed by this, it is interpreted as a type specifier (with a type name), not as a type qualifier.", "answer": "left parenthesis", "suggestions":[]}
    ,
    {
"category": "TYPE QUALIFIERS", "question": " Types other than pointer types whose referenced type is an object type shall not be qualified with this type qualifier.", "suggestions": [], "answer": "restrict", "id": "508", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "509", "answer": "_Atomic", "suggestions": [], "question": " The type modified by this type qualifier shall not be an array type or a function type.", "category":"TYPE QUALIFIERS"}
    ,
    {
"question": " If the same qualifier appears more than once in the same specifier-qualifier-list, either directly or via one or more typedefs, the behavior is the same as if it appeared this many times.", "category": "TYPE QUALIFIERS", "suggestions": [], "answer": "once", "alternativeSpellings": [], "id":"510"}
    ,
    {
"id": "511", "alternativeSpellings": [], "answer": "_Atomic", "suggestions": [], "category": "TYPE QUALIFIERS", "question":" If other qualifiers appear along with this qualifier in a specifier-qualifier-list, the resulting type is the so-qualified atomic type."}
    ,
    {
"category": "TYPE QUALIFIERS", "question": " If an attempt is made to modify an object defined with a const-qualified type through use of an lvalue with non-const-qualified type, the behavior is this.", "suggestions": [], "answer": "undefined", "id": "512", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "513", "question": " If an attempt is made to refer to an object defined with a volatile-qualified type through use of an lvalue with non-volatile-qualified type, the behavior is this.", "category": "TYPE QUALIFIERS", "suggestions": [], "answer":"undefined"}
    ,
    {
"suggestions": [], "answer": "implementation-defined", "category": "TYPE QUALIFIERS", "question": " What constitutes an access to an object that has volatile-qualified type is this.", "id": "514", "alternativeSpellings":[]}
    ,
    {
"category": "TYPE QUALIFIERS", "question": " What constitutes an access to an object that has this qualified type is implementation-defined.", "suggestions": [], "answer": "volatile", "id": "515", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "516", "question": " Actions on objects declared with this type qualifier shall not be ``optimized out'' by an implementation or reordered except as permitted by the rules for evaluating expressions.", "category": "TYPE QUALIFIERS", "answer": "volatile", "suggestions":[]}
    ,
    {
"answer": "restrict", "suggestions": [], "question": " An object that is accessed through a pointer qualified with this type qualifier has a special association with that pointer. This association requires that all accesses to that object use, directly or indirectly, the value of that particular pointer.", "category": "TYPE QUALIFIERS", "alternativeSpellings": [], "id":"517"}
    ,
    {
"question": " If the specification of an array type includes any type qualifiers, this type is so-qualified, not the array type.", "category": "TYPE QUALIFIERS", "answer": "element type", "suggestions": [], "alternativeSpellings": [], "id":"518"}
    ,
    {
"id": "519", "alternativeSpellings": [], "category": "TYPE QUALIFIERS", "question": " If the specification of a function type includes any type qualifiers, the behavior is this.", "answer": "undefined", "suggestions":[]}
    ,
    {
"question": " A translator is free to ignore any or all aliasing implications of uses of this type qualifier.", "category": "MISC", "suggestions": [], "answer": "restrict", "alternativeSpellings": [], "id":"520"}
    ,
    {
"alternativeSpellings": [], "id": "521", "answer": "function", "suggestions": [], "question": " Function specifiers shall be used only in the declaration of an identifier for this.", "category":"FUNCTION SPECIFIERS"}
    ,
    {
"category": "FUNCTION SPECIFIERS", "question": " In a hosted environment, no function specifier(s) shall appear in a declaration of this function.", "suggestions": [], "answer": "main", "id": "522", "alternativeSpellings":[]}
    ,
    {
"question": " A function specifier may appear more than once; the behavior is the same as if it appeared this many times.", "category": "FUNCTION SPECIFIERS", "answer": "once", "suggestions": [], "alternativeSpellings": [], "id":"523"}
    ,
    {
"id": "524", "alternativeSpellings": [], "suggestions": [], "answer": "inline", "category": "FUNCTION SPECIFIERS", "question":" A function declared with this function specifier is an inline function."}
    ,
    {
"suggestions": [], "answer": "inline", "category": "FUNCTION SPECIFIERS", "question": " If a function with external linkage is declared with this function specifier, then it shall also be defined in the same translation unit.", "id": "525", "alternativeSpellings":[]}
    ,
    {
"answer": "_Noreturn", "suggestions": [], "question": " A function declared with this function specifier shall not return to its caller.", "category": "FUNCTION SPECIFIERS", "alternativeSpellings": [], "id":"526"}
    ,
    {
"suggestions": [], "answer": "alignment", "question": " This attribute shall not be specified in a declaration of a typedef, or a bit-field, or a function, or a parameter, or an object declared with the register storage-class specifier.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"527"}
    ,
    {
"alternativeSpellings": [], "id": "528", "answer": "integer constant expression", "suggestions": [], "question": " The constant expression to the _Alignas specifier shall be this kind of expression.", "category":"ALIGNMENT SPECIFIER"}
    ,
    {
"answer": "zero", "suggestions": [], "question": " The expression to the _Alignas specifier shall evaluate to a valid fundamental alignment, or to a valid extended alignment supported by the implementation in the context in which it appears, or to this.", "category": "ALIGNMENT SPECIFIER", "alternativeSpellings": [], "id":"529"}
    ,
    {
"category": "ALIGNMENT SPECIFIER", "question": " When multiple alignment specifiers occur in a declaration, the effective alignment requirement is this specified alignment.", "answer": "strictest", "suggestions": [], "id": "530", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "equivalent", "question": " If the definition of an object has an alignment specifier, any other declaration of that object shall either specify this kind of alignment or have no alignment specifier.", "category": "ALIGNMENT SPECIFIER", "alternativeSpellings": [], "id":"531"}
    ,
    {
"category": "ALIGNMENT SPECIFIER", "question": " If declarations of an object in different translation units have different alignment specifiers, the behavior is this.", "suggestions": [], "answer": "undefined", "id": "532", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "533", "question": " This is a declarator that is not part of another declarator.", "category": "DECLARATORS", "answer": "full declarator", "suggestions":[]}
    ,
    {
"answer": "variably modified", "suggestions": [], "question": " If, in the nested sequence of declarators in a full declarator, there is a declarator specifying a variable length array type, the type specified by the full declarator is said to be this.", "category": "DECLARATORS", "alternativeSpellings": [], "id":"534"}
    ,
    {
"alternativeSpellings": [], "id": "535", "suggestions": [], "answer": "compatible", "question": " For two pointer types to be this, both shall be identically qualified and both shall be pointers to compatible types.", "category":"POINTER DECLARATORS"}
    ,
    {
"id": "536", "alternativeSpellings": [], "category": "ARRAY DECLARATORS", "question": " The element type of an array shall not be this type.", "answer": "function type", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "537", "suggestions": [], "answer": "VLA", "question": " If an identifier is declared to be an object with static or thread storage duration, it shall not have this kind of type.", "category":"ARRAY DECLARATORS"}
    ,
    {
"question": " When several ``array of'' specifications are adjacent, this kind of array is declared.", "category": "ARRAY DECLARATORS", "answer": "multidimensional", "suggestions": [], "alternativeSpellings": [], "id":"538"}
    ,
    {
"answer": "incomplete type", "suggestions": [], "category": "ARRAY DECLARATORS", "question": " If the size is not present, the array type is this kind of type.", "id": "539", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "540", "question": " If the size is this instead of being an expression, the array type is a variable length array type of unspecified size, which can only be used in declarations or type names with function prototype scope; such arrays are nonetheless complete types.", "category": "ARRAY DECLARATORS", "answer": "*", "suggestions":[]}
    ,
    {
"id": "541", "alternativeSpellings": [], "suggestions": [], "answer": "VLA", "category": "ARRAY DECLARATORS", "question":" If the size of an array is not an integer constant expression and the element type does not have a known constant size, but is not incomplete, the array type is this kind of type."}
    ,
    {
"question": " For two array types to be this, both shall have compatible element types, and if both size specifiers are present, and are integer constant expressions, then both size specifiers shall have the same constant value.", "category": "ARRAY DECLARATORS", "suggestions": [], "answer": "compatible", "alternativeSpellings": [], "id":"542"}
    ,
    {
"id": "543", "alternativeSpellings": [], "answer": "not equal", "suggestions": [], "category": "ARRAY DECLARATORS", "question":" If the two array types are used in a context which requires them to be compatible, it is undefined behavior if the two size specifiers evaluate to compare as this."}
    ,
    {
"alternativeSpellings": [], "id": "544", "suggestions": [], "answer": "function type", "question": " A function declarator shall not specify a return type that is this kind of type.", "category":"FUNCTION DECLARATORS (INCLUDING PROTOTYPES)"}
    ,
    {
"question": " The only storage-class specifier that shall occur in a parameter declaration is this.", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "answer": "register", "suggestions": [], "alternativeSpellings": [], "id":"545"}
    ,
    {
"alternativeSpellings": [], "id": "546", "suggestions": [], "answer": "empty", "question": " An identifier list in a function declarator that is not part of a definition of that function shall be this.", "category":"FUNCTION DECLARATORS (INCLUDING PROTOTYPES)"}
    ,
    {
"suggestions": [], "answer": "parameter type list", "question": " This specifies the types of, and may declare identifiers for, the parameters of the function.", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "alternativeSpellings": [], "id":"547"}
    ,
    {
"id": "548", "alternativeSpellings": [], "answer": "square brackets", "suggestions": [], "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question":" A declaration of a parameter as ``array of type'' shall be adjusted to ``qualified pointer to type'', where the type qualifiers (if any) are those specified within these of the array type derivation."}
    ,
    {
"id": "549", "alternativeSpellings": [], "answer": "static", "suggestions": [], "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question":" If this keyword appears within the [ and ] of the array type derivation, then for each call to the function, the value of the corresponding actual argument shall provide access to the first element of an array with at least as many elements as specified by the size expression."}
    ,
    {
"question": " A declaration of a parameter as ``function returning type'' shall be adjusted to this type.", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "answer": "pointer to function returning type", "suggestions": [], "alternativeSpellings": [], "id":"550"}
    ,
    {
"id": "551", "alternativeSpellings": [], "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question": " If the parameter type list terminates with this, no information about the number or types of the parameters after the comma is supplied.", "suggestions": [], "answer":"ellipsis"}
    ,
    {
"id": "552", "alternativeSpellings": [], "suggestions": [], "answer": "ellipsis", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question":" The macros defined in the <stdarg.h> header may be used to access arguments that correspond to this in a parameter type list."}
    ,
    {
"alternativeSpellings": [], "id": "553", "answer": "stdarg.h", "suggestions": [], "question": " The macros defined in this header may be used to access arguments that correspond to the ellipsis in a parameter type list.", "category":"FUNCTION DECLARATORS (INCLUDING PROTOTYPES)"}
    ,
    {
"question": " If, in a parameter declaration, an identifier can be treated either as a typedef name or as a parameter name, it shall be taken as this.", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "answer": "typedef name", "suggestions": [], "alternativeSpellings": [], "id":"554"}
    ,
    {
"id": "555", "alternativeSpellings": [], "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question": " If the function declarator is not part of a definition of that function, parameters may have incomplete type and may use this notation in their sequences of declarator specifiers to specify variable length array types.", "answer": "[*]", "suggestions":[]}
    ,
    {
"answer": "identifier list", "suggestions": [], "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question": " This declares only the identifiers of the parameters of the function.", "id": "556", "alternativeSpellings":[]}
    ,
    {
"id": "557", "alternativeSpellings": [], "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question": " An empty list in a function declarator that is part of a definition of that function specifies that the function has none of these.", "answer": "parameters", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "558", "question": " For two function types to be this, both shall specify compatible return types. Moreover, the parameter type lists, if both are present, shall agree in the number of parameters and in use of the ellipsis terminator; corresponding parameters shall have compatible types.", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "answer": "compatible", "suggestions":[]}
    ,
    {
"answer": "function", "suggestions": [], "question": " For two of these types to be compatible, both shall specify compatible return types. Moreover, the parameter type lists, if both are present, shall agree in the number of parameters and in use of the ellipsis terminator; corresponding parameters shall have compatible types.", "category": "MISC", "alternativeSpellings": [], "id":"559"}
    ,
    {
"question": " If one function type has this and the other type is specified by a function definition that contains a (possibly empty) identifier list, both shall agree in the number of parameters.", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "suggestions": [], "answer": "parameter type list", "alternativeSpellings": [], "id":"560"}
    ,
    {
"id": "561", "alternativeSpellings": [], "suggestions": [], "answer": "old style", "category": "FUNCTION DECLARATORS (INCLUDING PROTOTYPES)", "question":" When determining the compatability of two function types, if both function types are this, parameter types are not compared."}
    ,
    {
"alternativeSpellings": [], "id": "562", "question": " If a typedef name specifies a variably modified type then it shall have this scope.", "category": "TYPE DEFINITIONS", "answer": "block", "suggestions":[]}
    ,
    {
"id": "563", "alternativeSpellings": [], "suggestions": [], "answer": "value", "category": "INITIALIZATION", "question":" No initializer shall attempt to provide this for an object not contained within the entity being initialized."}
    ,
    {
"category": "INITIALIZATION", "question": " All the expressions in an initializer for an object that has static or thread storage duration shall be these.", "suggestions": [], "answer": "constant expressions", "id": "564", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "565", "question": " If the declaration of an identifier has this scope, and the identifier has external or internal linkage, the declaration shall have no initializer for the identifier.", "category": "INITIALIZATION", "suggestions": [], "answer":"block"}
    ,
    {
"question": " If a designated initializer has the form [ constant-expression ] then the current object shall have this kind of type.", "category": "INITIALIZATION", "answer": "array", "suggestions": [], "alternativeSpellings": [], "id":"566"}
    ,
    {
"suggestions": [], "answer": "structure", "category": "INITIALIZATION", "question": " If a designated initializer has the form . identifer then the current object shall have this kind of type.", "id": "567", "alternativeSpellings":[]}
    ,
    {
"id": "568", "alternativeSpellings": [], "answer": "indeterminate", "suggestions": [], "category": "INITIALIZATION", "question":" If an object that has automatic storage duration is not initialized explicitly, its value is this."}
    ,
    {
"id": "569", "alternativeSpellings": [], "category": "INITIALIZATION", "question": " If an object that has this storage duration is not initialized explicitly, then: if it has pointer type, it is initialized to a null pointer; if it has arithmetic type, it is initialized to zero; if it is an aggregate, every member is initialized according to the aforementioned rules; if it is a union, the first named member is initialized according to the aforementioned rules.", "suggestions": [], "answer":"static"}
    ,
    {
"id": "570", "alternativeSpellings": [], "answer": "braces", "suggestions": [], "category": "INITIALIZATION", "question":" The initializer for a scalar shall be a single expression, optionally enclosed in these."}
    ,
    {
"alternativeSpellings": [], "id": "571", "answer": "designations", "suggestions": [], "question": " When none of these are present, subobjects are initialized in order according to the type of the current object: array elements in increasing subscript order, structure members in declaration order, and the first named member of a union.", "category":"INITIALIZATION"}
    ,
    {
"alternativeSpellings": [], "id": "572", "suggestions": [], "answer": "initializer list order", "question": " The initialization shall occur in this order, each initializer provided for a particular subobject overriding any previously listed initializer for the same subobject.", "category":"INITIALIZATION"}
    ,
    {
"answer": "static", "suggestions": [], "category": "INITIALIZATION", "question": " The initialization shall occur in initializer list order, each initializer provided for a particular subobject overriding any previously listed initializer for the same subobject; all subobjects that are not initialized explicitly shall be initialized implicitly the same as objects that have this storage duration.", "id": "573", "alternativeSpellings":[]}
    ,
    {
"question": " If there are fewer initializers in a brace-enclosed list than there are elements or members of an aggregate, or fewer characters in a string literal used to initialize an array of known size than there are elements in the array, the remainder of the aggregate shall be initialized implicitly the same as objects that have this storage duration.", "category": "INITIALIZATION", "suggestions": [], "answer": "static", "alternativeSpellings": [], "id":"574"}
    ,
    {
"id": "575", "alternativeSpellings": [], "category": "INITIALIZATION", "question": " If an array of unknown size is initialized, its size is determined by the largest indexed element with this.", "answer": "explicit initializer", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "576", "suggestions": [], "answer": "not equal", "question": " If the value of the constant expression of a static assertion compares as this to 0, the declaration has no effect.", "category":"STATIC ASSERTIONS"}
    ,
    {
"id": "577", "alternativeSpellings": [], "suggestions": [], "answer": "statement", "category": "MISC", "question":" This specifies an action to be performed."}
    ,
    {
"id": "578", "alternativeSpellings": [], "category": "STATEMENTS", "question": " This allows a set of declarations and statements to be grouped into one syntactic unit.", "suggestions": [], "answer":"block"}
    ,
    {
"alternativeSpellings": [], "id": "579", "suggestions": [], "answer": "full expression", "question": " This is an expression that is not part of another expression or of a declarator.", "category":"STATEMENTS AND BLOCKS"}
    ,
    {
"answer": "switch", "suggestions": [], "category": "LABELED STATEMENTS", "question": " A case or default label shall appear only in this statement.", "id": "580", "alternativeSpellings":[]}
    ,
    {
"suggestions": ["CURRENT SCOPE"], "answer": "FUNCTION", "question": " Label names shall be unique within this.", "category": "LABELED STATEMENTS", "alternativeSpellings": [], "id":"581"}
    ,
    {
"category": "MISC", "question": " A block is also known as this.", "suggestions": [], "answer": "compound statement", "id": "582", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "583", "question": " A compound statement is also known as this.", "category": "COMPOUND STATEMENT", "suggestions": [], "answer":"block"}
    ,
    {
"id": "584", "alternativeSpellings": [], "category": "EXPRESSION AND NULL STATEMENTS", "question": " The expression in an expression statement is evaluated as this kind of expression for its side effect.", "suggestions": [], "answer":"void expression"}
    ,
    {
"alternativeSpellings": [], "id": "585", "question": " The expression in an expression statement is evaluated as a void expression for this.", "category": "EXPRESSION AND NULL STATEMENTS", "suggestions": [], "answer":"side effect"}
    ,
    {
"alternativeSpellings": [], "id": "586", "question": " A statement consisting of just a semicolon performs no operations; it is known as this.", "category": "STATEMENTS", "answer": "null statement", "suggestions":[]}
    ,
    {
"id": "587", "alternativeSpellings": [], "category": "EXPRESSION AND NULL STATEMENTS", "question": " If a function call is evaluated as an expression statement for only this, the discarding of its value may be made explicit by converting the expression to a void expression by means of a cast.", "answer": "side effect", "suggestions":[]}
    ,
    {
"category": "EXPRESSION AND NULL STATEMENTS", "question": " If a function call is evaluated as an expression statement for its side effects only, the discarding of its value may be made explicit by converting the expression to this kind of expression by means of a cast.", "answer": "void expression", "suggestions": [], "id": "588", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "selection statement", "question": " This kind of statement selects among a set of statements depending on the value of a controlling expression (e.g., if and switch).", "category": "STATEMENTS", "alternativeSpellings": [], "id":"589"}
    ,
    {
"alternativeSpellings": [], "id": "590", "suggestions": [], "answer": "scalar", "question": " The controlling expression of an if statement shall have this type.", "category":"STATEMENTS"}
    ,
    {
"suggestions": [], "answer": "label", "category": "STATEMENTS", "question": " If the first substatement of an if statement is reached via this, the second substatement is not executed.", "id": "591", "alternativeSpellings":[]}
    ,
    {
"question": " The controlling expression of a switch statement shall have this type.", "category": "STATEMENTS", "suggestions": [], "answer": "integer", "alternativeSpellings": [], "id":"592"}
    ,
    {
"id": "593", "alternativeSpellings": [], "suggestions": [], "answer": "integer constant expression", "category": "STATEMENTS", "question":" The expression of each case label shall be this kind of expression and no two of the case constant expressions in the same switch statement shall have the same value after conversion."}
    ,
    {
"answer": "switch", "suggestions": [], "question": " This statement causes control to jump to, into, or past the statement that is its body, depending on the value of a controlling expression, and on the presence of a default label and the values of any case labels on or in its body.", "category": "STATEMENTS", "alternativeSpellings": [], "id":"594"}
    ,
    {
"answer": "case label", "suggestions": [], "category": "STATEMENTS", "question": " If a value matches that of the promoted controlling expression of a switch statement, control jumps to the statement following the matched this.", "id": "595", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "596", "suggestions": [], "answer": "none", "question": " If no case constant expression matches its controlling expression and there is no default label, then this part of the switch body is executed.", "category":"STATEMENTS"}
    ,
    {
"answer": "iteration statement", "suggestions": [], "category": "STATEMENTS", "question": " A statement that causes a statement, called the loop body, to be executed repeatedly until the controlling expression compares equal to 0 is called this (e.g., for and while).", "id": "597", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "598", "question": " The controlling expression of an iteration statement shall have this type.", "category": "ITERATION STATEMENTS", "answer": "scalar", "suggestions":[]}
    ,
    {
"category": "ITERATION STATEMENTS", "question": " An omitted optional controlling expression for an iteration statement is replaced by this.", "answer": "nonzero constant", "suggestions": [], "id": "599", "alternativeSpellings":[]}
    ,
    {
"answer": "label", "suggestions": [], "category": "STATEMENTS", "question": " The identifier in a goto statement shall refer to this located somewhere in the enclosing function.", "id": "600", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "variably modified", "question": " A goto statement shall not jump from outside the scope of an identifier having this kind of type to inside the scope of that identifier.", "category": "STATEMENTS", "alternativeSpellings": [], "id":"601"}
    ,
    {
"id": "602", "alternativeSpellings": [], "answer": "variably modified", "suggestions": [], "category": "STATEMENTS", "question":" A goto statement is not allowed to jump past any declarations of objects with this kind of type. A jump within the scope, however, is permitted."}
    ,
    {
"id": "603", "alternativeSpellings": [], "category": "STATEMENTS", "question": " This statement shall appear only in or as a loop body.", "answer": "continue", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "604", "question": " A continue statement shall appear only in or as this kind of body.", "category": "STATEMENTS", "suggestions": [], "answer":"loop"}
    ,
    {
"alternativeSpellings": [], "id": "605", "suggestions": [], "answer": "continue", "question": " This statement causes a jump to the loop-continuation portion of the smallest enclosing iteration statement; that is, to the end of the loop body.", "category":"STATEMENTS"}
    ,
    {
"answer": "break", "suggestions": [], "category": "STATEMENTS", "question": " This statement shall appear only in or as a switch body or loop body.", "id": "606", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "not void", "category": "STATEMENTS", "question": " A return statement with an expression shall only appear in a function whose return type is this.", "id": "607", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "void", "question": " A return statement without an expression shall only appear in a function whose return type is this.", "category": "STATEMENTS", "alternativeSpellings": [], "id":"608"}
    ,
    {
"alternativeSpellings": [], "id": "609", "suggestions": [], "answer": "assignment", "question": " If the expression of the return statement has a type different from the return type of the function in which it appears, the value is converted as if by this to an object having the return type of the function.", "category":"STATEMENTS"}
    ,
    {
"alternativeSpellings": [], "id": "610", "suggestions": [], "answer": "one", "question": " There shall be no more than this many external definitions for each identifier declared with internal linkage in a translation unit.", "category":"EXTERNAL DEFINITIONS"}
    ,
    {
"alternativeSpellings": [], "id": "611", "answer": "external definition", "suggestions": [], "question": " This is an external declaration that is also a definition of a function (other than an inline definition) or an object.", "category":"FUNCTIONS"}
    ,
    {
"question": " If the declarator of a function includes this, the declaration of each parameter shall include an identifier, except for the special case of a parameter list consisting of a single parameter of type void, in which case there shall not be an identifier.", "category": "FUNCTION DEFINITIONS", "suggestions": [], "answer": "parameter type list", "alternativeSpellings": [], "id":"612"}
    ,
    {
"alternativeSpellings": [], "id": "613", "question": " If the declarator of a function includes a parameter type list, the declaration of each parameter shall include an identifier, except for the special case of a parameter list consisting of this single parameter, in which case there shall not be an identifier.", "category": "FUNCTION DEFINITIONS", "answer": "void", "suggestions":[]}
    ,
    {
"id": "614", "alternativeSpellings": [], "category": "FUNCTION DEFINITIONS", "question": " If the declarator of a function includes a parameter type list, the list also specifies the types of all the parameters; such a declarator also serves as this for later calls to the same function in the same translation unit.", "suggestions": [], "answer":"function prototype"}
    ,
    {
"question": " If a function declarator includes this, the types of the parameters shall be declared in a following declaration list.", "category": "FUNCTION DEFINITIONS", "suggestions": [], "answer": "identifier list", "alternativeSpellings": [], "id":"615"}
    ,
    {
"question": " If a function that accepts a variable number of arguments is defined without a parameter type list that ends with this, the behavior is undefined.", "category": "FUNCTION DEFINITIONS", "suggestions": [], "answer": "ellipsis", "alternativeSpellings": [], "id":"616"}
    ,
    {
"suggestions": [], "answer": "undefined", "category": "FUNCTION DEFINITIONS", "question": " If the } that terminates a function is reached, and the value of the function call is used by the caller, the behavior is this.", "id": "617", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "618", "suggestions": [], "answer": "file", "question": " If the declaration of an identifier for an object has this scope and an initializer, the declaration is an external definition for the identifier.", "category":"EXTERNAL OBJECT DEFINITIONS"}
    ,
    {
"id": "619", "alternativeSpellings": [], "suggestions": [], "answer": "zero", "category": "EXTERNAL OBJECT DEFINITIONS", "question":" If at the end of the translation unit containing int i[]; at file scope, the array i still has incomplete type, the implicit initializer causes it to have one element, which is set to this on program startup."}
    ,
    {
"answer": "preprocessing directive", "suggestions": [], "category": "MISC", "question": " A sequence of preprocessing tokens whose first token in the sequence is a # preprocessing token that is either the first character in the source file (optionally after white space containing no new-line characters) or that follows white space containing at least one new-line character is called this.", "id": "620", "alternativeSpellings":[]}
    ,
    {
"answer": "new-line", "suggestions": [], "category": "PREPROCESSING DIRECTIVES", "question": " This character ends the preprocessing directive even if it occurs within what would otherwise be an invocation of a function-like macro.", "id": "621", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "space and horizontal-tab", "category": "PREPROCESSING DIRECTIVES", "question": " The only white-space characters that shall appear between preprocessing tokens within a preprocessing directive (from just after the introducing # preprocessing token through just before the terminating new-line character) are these (name both, separated by \"and\").", "id": "622", "alternativeSpellings":[]}
    ,
    {
"question": " The implementation can process and skip sections of source files conditionally, include other source files, and replace macros. These capabilities are called this, because conceptually they occur before translation of the resulting translation unit.", "category": "MISC", "answer": "preprocessing", "suggestions": [], "alternativeSpellings": [], "id":"623"}
    ,
    {
"category": "CONDITIONAL INCLUSION", "question": " Prior to evaluation, macro invocations in the list of preprocessing tokens that will become the controlling constant expression has this happen to them, except for those macro names modified by the defined unary operator), just as in normal text.", "suggestions": [], "answer": "replacement", "id": "624", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "skipped", "category": "CONDITIONAL INCLUSION", "question": " If a conditional inclusion's condition evaluates to false (zero), the group that it controls has this happen to it.", "id": "625", "alternativeSpellings":[]}
    ,
    {
"category": "CONDITIONAL INCLUSION", "question": " If none of the conditions of a conditional inclusion evaluates to true, and there is this preprocessing directive, the group controlled by that directive is processed.", "suggestions": [], "answer": "#else", "id": "626", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "new-line", "category": "CONDITIONAL INCLUSION", "question": " As indicated by the syntax, a preprocessing token shall not follow a #else or #endif directive before this character which terminates the directive.", "id": "627", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "#include", "question": " This preprocessing directive shall identify a header or source file that can be processed by the implementation.", "category": "SOURCE FILE INCLUSION", "alternativeSpellings": [], "id":"628"}
    ,
    {
"id": "629", "alternativeSpellings": [], "category": "SOURCE FILE INCLUSION", "question": " The method by which a sequence of preprocessing tokens between a < and a > preprocessing token pair or a pair of \" characters is combined into a single header name preprocessing token is this kind of behavior.", "suggestions": [], "answer":"implementation-defined"}
    ,
    {
"alternativeSpellings": [], "id": "630", "suggestions": [], "answer": "object-like macro", "question": " An identifier currently defined as this kind of macro shall not be redefined by another #define preprocessing directive unless the second definition is also this kind of macro definition and the two replacement lists are identical.", "category":"MACRO REPLACEMENT"}
    ,
    {
"id": "631", "alternativeSpellings": [], "answer": "function-like macro", "suggestions": [], "category": "MACRO REPLACEMENT", "question":" Likewise, an identifier currently defined as this kind of macro shall not be redefined by another #define preprocessing directive unless the second definition is also this kind of macro definition that has the same number and spelling of parameters, and the two replacement lists are identical."}
    ,
    {
"answer": "white-space", "suggestions": [], "category": "MACRO REPLACEMENT", "question": " This shall be between the identifier and the replacement list in the definition of an object-like macro.", "id": "632", "alternativeSpellings":[]}
    ,
    {
"id": "633", "alternativeSpellings": [], "category": "MACRO REPLACEMENT", "question": " If the identifier-list in a macro definition does not end with this, the number of arguments in an invocation of a function-like macro shall equal the number of parameters in the macro definition. Otherwise, there shall be more arguments in the invocation than there are parameters in the macro definition.", "suggestions": [], "answer":"ellipsis"}
    ,
    {
"category": "MACRO REPLACEMENT", "question": " This identifier shall occur only in the replacement-list of a function-like macro that uses the ellipsis notation in the parameters.", "suggestions": [], "answer": "__VA_ARGS__", "id": "634", "alternativeSpellings":[]}
    ,
    {
"question": " The identifier __VA_ARGS__ shall occur only in the replacement-list of a function-like macro that uses this notation in the parameters.", "category": "MACRO REPLACEMENT", "answer": "ellipsis", "suggestions": [], "alternativeSpellings": [], "id":"635"}
    ,
    {
"alternativeSpellings": [], "id": "636", "question": " A parameter identifier in this kind of macro shall be uniquely declared within its scope.", "category": "MACRO REPLACEMENT", "answer": "function-like macro", "suggestions":[]}
    ,
    {
"answer": "macro name", "suggestions": [], "category": "MACRO REPLACEMENT", "question": " The identifier immediately following the #define directive is called this.", "id": "637", "alternativeSpellings":[]}
    ,
    {
"answer": "macro replacement", "suggestions": [], "category": "MISC", "question": " If a # preprocessing token, followed by an identifier, occurs lexically at the point at which a preprocessing directive could begin, the identifier is not subject to this.", "id": "638", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "object-like macro", "category": "MACRO REPLACEMENT", "question": " A preprocessing directive of the form `# define identifier replacement-list new-line` defines this kind of macro that causes each subsequent instance of the macro name to be replaced by the replacement list of preprocessing tokens that constitute the remainder of the directive.", "id": "639", "alternativeSpellings":[]}
    ,
    {
"answer": "function-like macro", "suggestions": [], "question": " A preprocessing directive of the form `# define identifier lparen identifier-listopt ) replacement-list new-line` defines this kind of macro with parameters, who use is similar syntactically to a function call.", "category": "MACRO REPLACEMENT", "alternativeSpellings": [], "id":"640"}
    ,
    {
"answer": "ellipsis", "suggestions": [], "question": " If this is in the identifier-list in a macro definition, then the trailing arguments, including any separating comma preprocessing tokens, are merged to form a single item: the variable arguments.", "category": "MACRO REPLACEMENT", "alternativeSpellings": [], "id":"641"}
    ,
    {
"answer": "variable arguments", "suggestions": [], "question": " If there is a ... in the identifier-list in a macro definition, then the trailing arguments, including any separating comma preprocessing tokens, are merged to form a single item called this.", "category": "MACRO REPLACEMENT", "alternativeSpellings": [], "id":"642"}
    ,
    {
"answer": "__VA_ARGS__", "suggestions": [], "question": " If this identifier occurs in the macro replacement list it shall be treated as if it were a parameter, and the variable arguments shall form the preprocessing tokens used to replace it.", "category": "ARGUMENT SUBSTITUTION", "alternativeSpellings": [], "id":"643"}
    ,
    {
"id": "644", "alternativeSpellings": [], "category": "THE # OPERATOR", "question": " If the replacement that results from a # stringification is not a valid this, the behavior is undefined.", "suggestions": [], "answer":"character string literal"}
    ,
    {
"alternativeSpellings": [], "id": "645", "suggestions": ["PLACEHOLDER", "VOID", "##"], "answer": "PLACEMARKER", "question": " If, in the replacement list of a function-like macro, an argument consists of no preprocessing tokens, the parameter is replaced by this preprocessing token.", "category":"THE ## OPERATOR"}
    ,
    {
"question": " These preprocessing tokens do not appear in the syntax because they are temporary entities that exist only within translation phase 4.", "category": "THE ## OPERATOR", "answer": "placemarker", "suggestions": [], "alternativeSpellings": [], "id":"646"}
    ,
    {
"answer": "four", "suggestions": [], "question": " Placemarker preprocessing tokens do not appear in the syntax because they are temporary entities that exist only within this translation phase.", "category": "THE ## OPERATOR", "alternativeSpellings": [], "id":"647"}
    ,
    {
"question": " A macro definition lasts (independent of block structure) until this preprocessing directive that corresponds to it is encountered or (if none is encountered) until the end of the preprocessing translation unit.", "category": "SCOPE OF MACRO DEFINITIONS", "answer": "#undef", "suggestions": [], "alternativeSpellings": [], "id":"648"}
    ,
    {
"id": "649", "alternativeSpellings": [], "answer": "preprocessing translation unit", "suggestions": [], "category": "SCOPE OF MACRO DEFINITIONS", "question":" A macro definition lasts (independent of block structure) until a corresponding #undef directive is encountered or (if none is encountered) until the end of this."}
    ,
    {
"id": "650", "alternativeSpellings": [], "answer": "character string literal", "suggestions": [], "category": "LINE CONTROL", "question":" The string literal of a #line directive, if present, shall be this kind of string literal."}
    ,
    {
"alternativeSpellings": [], "id": "651", "question": " The digit sequence of a #line directive shall not specify zero, nor a number greater than this.", "category": "LINE CONTROL", "suggestions": [], "answer":"2147483647"}
    ,
    {
"alternativeSpellings": [], "id": "652", "question": " An implementation is not required to perform this in pragmas, but it is permitted except for in standard pragmas (where STDC immediately follows pragma).", "category": "PRAGMA DIRECTIVE", "answer": "macro replacement", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "653", "answer": "STDC", "suggestions": ["IGNORE"], "question": " If this preprocessing token does immediately follow pragma in the directive (prior to any macro replacement), then no macro replacement is performed on the directive.", "category":"PRAGMA DIRECTIVE"}
    ,
    {
"id": "654", "alternativeSpellings": [], "suggestions": [], "answer": "predefined macro names", "category": "MISC", "question":" None of these macro names, nor the identifier defined, shall be the subject of a #define or a #undef preprocessing directive."}
    ,
    {
"suggestions": [], "answer": "underscore", "category": "PREDEFINED MACRO NAMES", "question": " Any predefined macro names shall begin with this character followed by an uppercase letter or a second such character.", "id": "655", "alternativeSpellings":[]}
    ,
    {
"id": "656", "alternativeSpellings": [], "answer": "__cplusplus", "suggestions": [], "category": "PREDEFINED MACRO NAMES", "question":" The implementation shall not predefine this macro, nor shall it define it in any standard header."}
    ,
    {
"suggestions": [], "answer": "__DATE__", "question": " This predefined macro is the date of translation of the preprocessing translation unit.", "category": "MANDATORY MACROS", "alternativeSpellings": [], "id":"657"}
    ,
    {
"answer": "__FILE__", "suggestions": [], "category": "MANDATORY MACROS", "question": " This predefined macro is the presumed name of the current source file (a character string literal).", "id": "658", "alternativeSpellings":[]}
    ,
    {
"answer": "__LINE__", "suggestions": [], "category": "MANDATORY MACROS", "question": " This predefined macro is the presumed line number (within the current source file) of the current source line (an integer constant).", "id": "659", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "660", "question": " This predefined macro is the integer constant 1, intended to indicate a conforming implementation.", "category": "MANDATORY MACROS", "suggestions": [], "answer":"__STDC__"}
    ,
    {
"category": "MANDATORY MACROS", "question": " This predefined macro is the integer constant 1 if the implementation is a hosted implementation or the integer constant 0 if it is not.", "answer": "__STDC_HOSTED__", "suggestions": [], "id": "661", "alternativeSpellings":[]}
    ,
    {
"question": " This predefined macro is an integer constant of type long that is increased with each revision of this International Standard.", "category": "MANDATORY MACROS", "answer": "__STDC_VERSION__", "suggestions": [], "alternativeSpellings": [], "id":"662"}
    ,
    {
"id": "663", "alternativeSpellings": [], "category": "MANDATORY MACROS", "question": " This predefined macro is the time of translation of the preprocessing translation unit.", "suggestions": [], "answer":"__TIME__"}
    ,
    {
"alternativeSpellings": [], "id": "664", "question": " If this predefined macro is defined, then every character in the Unicode required set, when stored in an object of type wchar_t, has the same value as the short identifier of that character.", "category": "ENVIRONMENT MACROS", "answer": "__STDC_ISO_10646__", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "665", "answer": "__STDC_MB_MIGHT_NEQ_WC__", "suggestions": [], "question": " This conditionally predefined macro is the integer constant 1 if, in the encoding for wchar_t, a member of the basic character set need not have a code value equal to its value when used as the lone character in an integer character constant.", "category":"ENVIRONMENT MACROS"}
    ,
    {
"alternativeSpellings": [], "id": "666", "answer": "__STDC_UTF_16__", "suggestions": [], "question": " This conditionally predefined macro is the integer constant 1, intended to indicate that values of type char16_t are UTF-16 encoded. If some other encoding is used, the macro shall not be defined and the actual encoding used is implementation-defined.", "category":"ENVIRONMENT MACROS"}
    ,
    {
"id": "667", "alternativeSpellings": [], "answer": "__STDC_UTF_32__", "suggestions": [], "category": "ENVIRONMENT MACROS", "question":" This conditionally predefined macro is the integer constant 1, intended to indicate that values of type char32_t are UTF-32 encoded. If some other encoding is used, the macro shall not be defined and the actual encoding used is implementation-defined."}
    ,
    {
"id": "668", "alternativeSpellings": [], "answer": "__STDC_ANALYZABLE__", "suggestions": [], "category": "CONDITIONAL FEATURE MACROS", "question":" This conditionally predefined macro is the integer constant 1, intended to indicate conformance to the specifications in annex L (Analyzability)."}
    ,
    {
"suggestions": [], "answer": "__STDC_IEC_559__", "category": "CONDITIONAL FEATURE MACROS", "question": " This conditionally predefined macro is the integer constant 1, intended to indicate conformance to the specifications in annex F (IEC 60559 floating-point arithmetic).", "id": "669", "alternativeSpellings":[]}
    ,
    {
"id": "670", "alternativeSpellings": [], "suggestions": [], "answer": "__STDC_IEC_559_COMPLEX__", "category": "CONDITIONAL FEATURE MACROS", "question":" This conditionally predefined macro is the integer constant 1, intended to indicate adherence to the specifications in annex G (IEC 60559 compatible complex arithmetic)."}
    ,
    {
"alternativeSpellings": [], "id": "671", "question": " This conditionally predefined macro is the integer constant 201ymmL, intended to indicate support for the extensions defined in annex K (Bounds-checking interfaces).", "category": "CONDITIONAL FEATURE MACROS", "suggestions": [], "answer":"__STDC_LIB_EXT1__"}
    ,
    {
"alternativeSpellings": [], "id": "672", "suggestions": [], "answer": "__STDC_NO_ATOMICS__", "question": " This conditionally predefined macro is the integer constant 1, intended to indicate that the implementation does not support atomic types (including the _Atomic type qualifier) and the <stdatomic.h> header.", "category":"CONDITIONAL FEATURE MACROS"}
    ,
    {
"category": "CONDITIONAL FEATURE MACROS", "question": " This conditionally predefined macro is the integer constant 1, intended to indicate that the implementation does not support complex types or the <complex.h> header.", "answer": "__STDC_NO_COMPLEX__", "suggestions": [], "id": "673", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "674", "answer": "__STDC_NO_THREADS__", "suggestions": [], "question": " This conditionally predefined macro is the integer constant 1, intended to indicate that the implementation does not support the <threads.h> header.", "category":"CONDITIONAL FEATURE MACROS"}
    ,
    {
"id": "675", "alternativeSpellings": [], "answer": "__STDC_NO_VLA__", "suggestions": [], "category": "CONDITIONAL FEATURE MACROS", "question":" This conditionally predefined macro is the integer constant 1, intended to indicate that the implementation does not support variable length arrays or variably modified types."}
    ,
    {
"id": "676", "alternativeSpellings": [], "category": "DEFINITIONS OF TERMS", "question": " A contiguous sequence of characters terminated by and including the first null character is called this.", "answer": "string", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "677", "answer": "null wide character", "suggestions": [], "question": " A wide character with code value zero is called this.", "category":"DEFINITIONS OF TERMS"}
    ,
    {
"id": "678", "alternativeSpellings": [], "category": "DEFINITIONS OF TERMS", "question": " A contiguous sequence of wide characters terminated by and including the first null wide character is called this.", "suggestions": [], "answer":"wide string"}
    ,
    {
"answer": "shift sequence", "suggestions": [], "question": " A contiguous sequence of bytes within a multibyte string that (potentially) causes a change in shift state is called this.", "category": "DEFINITIONS OF TERMS", "alternativeSpellings": [], "id":"679"}
    ,
    {
"category": "STANDARD HEADERS", "question": " If a file with the same name as one of the above < and > delimited sequences, not provided as part of the implementation, is placed in any of the standard places that are searched for included source files, the behavior is this.", "suggestions": [], "answer": "undefined", "id": "680", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "681", "question": " The program shall not have any macros with names lexically identical to these currently defined prior to the inclusion of the header or when any macro defined in the header is expanded.", "category": "STANDARD HEADERS", "suggestions": [], "answer":"keywords"}
    ,
    {
"alternativeSpellings": [], "id": "682", "answer": "parentheses", "suggestions": [], "question": " Any definition of an object-like macro in a standard header shall expand to code that is fully protected by these where necessary, so that it groups in an arbitrary expression as if it were a single identifier.", "category":"STANDARD HEADERS"}
    ,
    {
"alternativeSpellings": [], "id": "683", "question": " Any declaration of a library function shall have this linkage.", "category": "STANDARD HEADERS", "suggestions": [], "answer":"external"}
    ,
    {
"question": " All identifiers that begin with an underscore and either this or another underscore are always reserved for any use.", "category": "RESERVED IDENTIFIERS", "suggestions": [], "answer": "uppercase letter", "alternativeSpellings": [], "id":"684"}
    ,
    {
"id": "685", "alternativeSpellings": [], "answer": "RACE CONDITION", "suggestions": [], "category": "USE OF LIBRARY FUNCTIONS", "question":" Implementations may share their own internal objects between threads if the objects are not visible to users and are protected against this."}
    ,
    {
"alternativeSpellings": [], "id": "686", "question": " If this macro is defined as a macro name at the point in the source file where <assert.h> is included, the assert macro is defined simply as #define assert(ignore) ((void)0).", "category": "DIAGNOSTICS <ASSERT.H>", "answer": "NDEBUG", "suggestions":[]}
    ,
    {
"answer": "standard error", "suggestions": [], "question": " When it is executed, if expression is false, the assert macro writes information about the particular call that failed on this stream in an implementation-defined format.", "category": "THE ASSERT MACRO", "alternativeSpellings": [], "id":"687"}
    ,
    {
"alternativeSpellings": [], "id": "688", "question": " When it is executed, if expression is false, the assert macro writes information about the particular call that failed. It then calls this function.", "category": "THE ASSERT MACRO", "suggestions": [], "answer":"abort"}
    ,
    {
"alternativeSpellings": [], "id": "689", "question": " Values of complex arithmetic are not interpreted as degrees, but as this.", "category": "CONVENTIONS", "suggestions": [], "answer":"radians"}
    ,
    {
"id": "690", "alternativeSpellings": [], "suggestions": [], "answer": "cacos", "category": "FUNCTIONS", "question":" This function computes the complex arc cosine of z, with branch cuts outside the interval [-1, +1] along the real axis and return the complex arc cosine value, in the range of a strip mathematically unbounded along the imaginary axis and in the interval [0, pi] along the real axis."}
    ,
    {
"alternativeSpellings": [], "id": "691", "suggestions": [], "answer": "casin", "question": " This function computes the complex arc sine of z, with branch cuts outside the interval [-1, +1] along the real axis and return the complex arc sine value, in the range of a strip mathematically unbounded along the imaginary axis and in the interval [-pi/2, +pi/2] along the real axis.", "category":"FUNCTIONS"}
    ,
    {
"answer": "catan", "suggestions": [], "category": "FUNCTIONS", "question": " This function computes the complex arc tangent of z, with branch cuts outside the interval [-i, +i] along the imaginary axis and return the complex arc tangent value, in the range of a strip mathematically unbounded along the imaginary axis and in the interval [-pi/2, +pi/2] along the real axis.", "id": "692", "alternativeSpellings":[]}
    ,
    {
"answer": "ccos", "suggestions": [], "question": " This function computes the complex cosine of z.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"693"}
    ,
    {
"alternativeSpellings": [], "id": "694", "question": " This function computes the complex sine of z.", "category": "FUNCTIONS", "answer": "csin", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "ctan", "question": " This function computes the complex tangent of z.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"695"}
    ,
    {
"id": "696", "alternativeSpellings": [], "suggestions": [], "answer": "cacosh", "category": "FUNCTIONS", "question":" This function computes the complex arc hyperbolic cosine of z, with a branch cut at values less than 1 along the real axis and return the complex arc hyperbolic cosine value, in the range of a half-strip of nonnegative values along the real axis and in the interval [-ipi, +ipi] along the imaginary axis."}
    ,
    {
"id": "697", "alternativeSpellings": [], "answer": "casinh", "suggestions": [], "category": "FUNCTIONS", "question":" This function computes the complex arc hyperbolic sine of z, with branch cuts outside the interval [-i, +i] along the imaginary axis and return the complex arc hyperbolic sine value, in the range of a strip mathematically unbounded along the real axis and in the interval [-ipi/2, +ipi/2] along the imaginary axis."}
    ,
    {
"question": " This function computes the complex arc hyperbolic tangent of z, with branch cuts outside the interval [-1, +1] along the real axis and return the complex arc hyperbolic tangent value, in the range of a strip mathematically unbounded along the real axis and in the interval [-ipi/2, +ipi/2] along the imaginary axis.", "category": "FUNCTIONS", "answer": "catanh", "suggestions": [], "alternativeSpellings": [], "id":"698"}
    ,
    {
"alternativeSpellings": [], "id": "699", "question": " This function computes the complex hyperbolic cosine of z.", "category": "FUNCTIONS", "answer": "ccosh", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "700", "question": " This function computes the complex hyperbolic sine of z.", "category": "FUNCTIONS", "answer": "csinh", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "ctanh", "question": " This function computes the complex hyperbolic tangent of z.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"701"}
    ,
    {
"id": "702", "alternativeSpellings": [], "answer": "cexp", "suggestions": [], "category": "FUNCTIONS", "question":" This function computes the complex base-e exponential of z."}
    ,
    {
"alternativeSpellings": [], "id": "703", "suggestions": [], "answer": "clog", "question": " This function computes the complex natural (base-e) logarithm of z, with a branch cut along the negative real axis and return the complex natural logarithm value, in the range of a strip mathematically unbounded along the real axis and in the interval [-ipi, +ipi] along the imaginary axis.", "category":"FUNCTIONS"}
    ,
    {
"id": "704", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the complex absolute value (also called norm, modulus, or magnitude) of z.", "answer": "cabs", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function computes the complex power function xy, with a branch cut for the first parameter along the negative real axis.", "suggestions": [], "answer": "cpow", "id": "705", "alternativeSpellings":[]}
    ,
    {
"id": "706", "alternativeSpellings": [], "answer": "csqrt", "suggestions": [], "category": "FUNCTIONS", "question":" This function computes the complex square root of z, with a branch cut along the negative real axis and return the complex square root value, in the range of the right half-plane (including the imaginary axis)."}
    ,
    {
"id": "707", "alternativeSpellings": [], "suggestions": [], "answer": "carg", "category": "FUNCTIONS", "question":" This function computes the argument (also called phase angle) of z, with a branch cut along the negative real axis and return the value of the argument in the interval [-pi, +pi]."}
    ,
    {
"answer": "cimag", "suggestions": [], "question": " This function computes the imaginary part of z.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"708"}
    ,
    {
"answer": "conj", "suggestions": [], "category": "FUNCTIONS", "question": " This function computes the complex conjugate of z, by reversing the sign of its imaginary part.", "id": "709", "alternativeSpellings":[]}
    ,
    {
"id": "710", "alternativeSpellings": [], "suggestions": [], "answer": "cproj", "category": "FUNCTIONS", "question":" This function computes a projection of z onto the Riemann sphere: z projects to z except that all complex infinities (even those with one infinite part and one NaN part) project to positive infinity on the real axis."}
    ,
    {
"answer": "creal", "suggestions": [], "question": " This function computes the real part of z.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"711"}
    ,
    {
"suggestions": [], "answer": "ctype.h", "category": "FUNCTIONS", "question": " This header declares several functions useful for classifying and mapping characters.", "id": "712", "alternativeSpellings":[]}
    ,
    {
"answer": "isalnum", "suggestions": [], "question": " This function tests for any character for which isalpha or isdigit is true.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"713"}
    ,
    {
"id": "714", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function tests for any character for which isupper or islower is true, or any character that is one of a locale-specific set of alphabetic characters for which none of iscntrl, isdigit, ispunct, or isspace is true.", "answer": "isalpha", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "715", "question": " This function tests for any character that is a standard blank character or is one of a locale-specific set of characters for which isspace is true and that is used to separate words within a line of text.", "category": "FUNCTIONS", "answer": "isblank", "suggestions":[]}
    ,
    {
"answer": "iscntrl", "suggestions": [], "question": " This function tests for any control character.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"716"}
    ,
    {
"alternativeSpellings": [], "id": "717", "answer": "isdigit", "suggestions": [], "question": " This function tests for any decimal-digit character.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "718", "answer": "isgraph", "suggestions": [], "question": " This function tests for any printing character except space (' ').", "category":"FUNCTIONS"}
    ,
    {
"answer": "islower", "suggestions": [], "question": " This function tests for any character that is a lowercase letter or is one of a locale-specific set of characters for which none of iscntrl, isdigit, ispunct, or isspace is true.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"719"}
    ,
    {
"answer": "isprint", "suggestions": [], "category": "FUNCTIONS", "question": " This function tests for any printing character including space (' ').", "id": "720", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function tests for any printing character that is one of a locale-specific set of punctuation characters for which neither isspace nor isalnum is true.", "suggestions": [], "answer": "ispunct", "id": "721", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function tests for any character that is a standard white-space character or is one of a locale-specific set of characters for which isalnum is false.", "answer": "isspace", "suggestions": [], "id": "722", "alternativeSpellings":[]}
    ,
    {
"question": " This function tests for any character that is an uppercase letter or is one of a locale-specific set of characters for which none of iscntrl, isdigit, ispunct, or isspace is true.", "category": "FUNCTIONS", "answer": "isupper", "suggestions": [], "alternativeSpellings": [], "id":"723"}
    ,
    {
"question": " This function tests for any hexadecimal-digit character.", "category": "FUNCTIONS", "suggestions": [], "answer": "isxdigit", "alternativeSpellings": [], "id":"724"}
    ,
    {
"id": "725", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function converts an uppercase letter to a corresponding lowercase letter.", "suggestions": [], "answer":"tolower"}
    ,
    {
"question": " This function converts a lowercase letter to a corresponding uppercase letter.", "category": "FUNCTIONS", "suggestions": [], "answer": "toupper", "alternativeSpellings": [], "id":"726"}
    ,
    {
"suggestions": [], "answer": "floating-point status flag", "question": " The floating-point environment provides a system variable whose value is set (but never cleared) when a floating-point exception is raised, which occurs as a side effect of exceptional floating-point arithmetic to provide auxiliary information. It is called this.", "category": "FLOATING-POINT ENVIRONMENT <FENV.H>", "alternativeSpellings": [], "id":"727"}
    ,
    {
"suggestions": [], "answer": "floating-point control mode", "category": "FLOATING-POINT ENVIRONMENT <FENV.H>", "question": " The floating-point environment provides a system variable whose value may be set by the user to affect the subsequent behavior of floating-point arithmetic. A floating-point status flag is not an object and can be set more than once within an expression. It is called this.", "id": "728", "alternativeSpellings":[]}
    ,
    {
"category": "MISC", "question": " This pragma provides a means to inform the implementation when a program might access the floating-point environment to test floating-point status flags or run under non-default floating-point control modes.", "suggestions": [], "answer": "FENV_ACCESS", "id": "729", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "730", "answer": "feclearexcept", "suggestions": [], "question": " This function attempts to clear the supported floating-point exceptions represented by its argument.", "category":"FUNCTIONS"}
    ,
    {
"id": "731", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function attempts to store an implementation-defined representation of the states of the floating-point status flags indicated by the argument excepts in the object pointed to by the argument flagp.", "answer": "fegetexceptflag", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function attempts to raise the supported floating-point exceptions represented by its argument.", "answer": "feraiseexcept", "suggestions": [], "id": "732", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function attempts to set the floating-point status flags indicated by the argument excepts to the states stored in the object pointed to by flagp.", "suggestions": [], "answer": "fesetexceptflag", "id": "733", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "734", "suggestions": [], "answer": "fetestexcept", "question": " This function determines which of a specified subset of the floating-point exception flags are currently set.", "category":"FUNCTIONS"}
    ,
    {
"question": " This function gets the current rounding direction.", "category": "FUNCTIONS", "suggestions": [], "answer": "fegetround", "alternativeSpellings": [], "id":"735"}
    ,
    {
"answer": "negative", "suggestions": [], "question": " The fegetround function returns the value of the rounding direction macro representing the current rounding direction or this value if there is no such rounding direction macro or the current rounding direction is not determinable.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"736"}
    ,
    {
"id": "737", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function establishes the rounding direction represented by its argument round.", "answer": "fesetround", "suggestions":[]}
    ,
    {
"question": " This function attempts to store the current floating-point environment in the object pointed to by envp.", "category": "FUNCTIONS", "suggestions": [], "answer": "fegetenv", "alternativeSpellings": [], "id":"738"}
    ,
    {
"suggestions": [], "answer": "feholdexcept", "category": "FUNCTIONS", "question": " This function saves the current floating-point environment in the object pointed to by envp, clears the floating-point status flags, and then installs a non-stop (continue on floating-point exceptions) mode, if available, for all floating-point exceptions.", "id": "739", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "740", "suggestions": [], "answer": "fesetenv", "question": " This function attempts to establish the floating-point environment represented by the object pointed to by envp.", "category":"FUNCTIONS"}
    ,
    {
"id": "741", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function attempts to save the currently raised floating-point exceptions in its automatic storage, install the floating-point environment represented by the object pointed to by envp, and then raise the saved floating-point exceptions.", "suggestions": [], "answer":"feupdateenv"}
    ,
    {
"id": "742", "alternativeSpellings": [], "suggestions": [], "answer": "inttypes.h", "category": "MISC", "question":" This header includes the header <stdint.h> and extends it with additional facilities provided by the hosted implementation."}
    ,
    {
"suggestions": [], "answer": "stdint.h", "category": "FORMAT CONVERSION OF INTEGER TYPES <INTTYPES.H>", "question": " The header <inttypes.h> includes this header and extends it with additional facilities provided by the hosted implementation.", "id": "743", "alternativeSpellings":[]}
    ,
    {
"question": " This function computes the absolute value of an integer.", "category": "FUNCTIONS", "suggestions": [], "answer": "imaxabs", "alternativeSpellings": [], "id":"744"}
    ,
    {
"question": " This function computes numer / denom and numer % denom in a single operation.", "category": "FUNCTIONS", "suggestions": [], "answer": "imaxdiv", "alternativeSpellings": [], "id":"745"}
    ,
    {
"category": "FUNCTIONS", "question": " This function returns a structure of type imaxdiv_t comprising both the quotient and the remainder.", "answer": "imaxdiv", "suggestions": [], "id": "746", "alternativeSpellings":[]}
    ,
    {
"id": "747", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This structure shall contain (in either order) the members quot (the quotient) and rem (the remainder), each of which has type intmax_t.", "suggestions": [], "answer":"imaxdiv_t"}
    ,
    {
"id": "748", "alternativeSpellings": [], "answer": "setlocale", "suggestions": [], "category": "FUNCTIONS", "question":" This function may be used to change or query the program's entire current locale or portions thereof."}
    ,
    {
"alternativeSpellings": [], "id": "749", "question": " This value for the locale argument causes the setlocale function to return a pointer to the string associated with the category for the program's current locale; the program's locale is not changed.", "category": "FUNCTIONS", "suggestions": [], "answer":"null pointer"}
    ,
    {
"alternativeSpellings": [], "id": "750", "suggestions": [], "answer": "LC_ALL", "question": " The implementation shall arrange to encode in a string the various categories due to a heterogeneous locale when the category argument to the setlocale function has this value.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " This function sets the components of an object with type struct lconv with values appropriate for the formatting of numeric quantities (monetary and otherwise) according to the rules of the current locale.", "answer": "localeconv", "suggestions": [], "id": "751", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "752", "question": " If FLT_EVAL_METHOD is set to this, float_t and double_t are float and double, respectively.", "category": "MATHEMATICS <MATH.H>", "answer": "0", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "753", "suggestions": [], "answer": "1", "question": " If FLT_EVAL_METHOD is set to this, float_t and double_t are both double.", "category":"MATHEMATICS <MATH.H>"}
    ,
    {
"id": "754", "alternativeSpellings": [], "category": "MATHEMATICS <MATH.H>", "question": " If FLT_EVAL_METHOD is set to this, float_t and double_t are both long double.", "suggestions": [], "answer":"2"}
    ,
    {
"question": " If this macro is defined, it indicates that the fma function generally executes about as fast as, or faster than, a multiply and an add of double operands.", "category": "MATHEMATICS <MATH.H>", "answer": "FP_FAST_FMA", "suggestions": [], "alternativeSpellings": [], "id":"755"}
    ,
    {
"suggestions": [], "answer": "fenv.h", "question": " If the expression math_errhandling & MATH_ERREXCEPT can be nonzero, the implementation shall define the macros FE_DIVBYZERO, FE_INVALID, and FE_OVERFLOW in this header.", "category": "MATHEMATICS <MATH.H>", "alternativeSpellings": [], "id":"756"}
    ,
    {
"alternativeSpellings": [], "id": "757", "answer": "domain", "suggestions": [], "question": " This error occurs if an input argument is outside the domain over which the mathematical function is defined.", "category":"TREATMENT OF ERROR CONDITIONS"}
    ,
    {
"category": "TREATMENT OF ERROR CONDITIONS", "question": " This error (also known as a singularity or infinitary) occurs if the mathematical function has an exact infinite result as the finite input argument(s) are approached in the limit (for example, log(0.0)).", "suggestions": [], "answer": "pole", "id": "758", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "range", "question": " This error occurs if the mathematical result of the function cannot be represented in an object of the specified type, due to extreme magnitude.", "category": "TREATMENT OF ERROR CONDITIONS", "alternativeSpellings": [], "id":"759"}
    ,
    {
"alternativeSpellings": [], "id": "760", "question": " A floating result does this if the magnitude of the mathematical result is finite but so large that the mathematical result cannot be represented without extraordinary roundoff error in an object of the specified type.", "category": "TREATMENT OF ERROR CONDITIONS", "suggestions": [], "answer":"overflows"}
    ,
    {
"id": "761", "alternativeSpellings": [], "category": "TREATMENT OF ERROR CONDITIONS", "question": " If a floating result does this and default rounding is in effect, then the function returns the value of the macro HUGE_VAL, HUGE_VALF, or HUGE_VALL according to the return type, with the same sign as the correct value of the function.", "suggestions": [], "answer":"overflows"}
    ,
    {
"id": "762", "alternativeSpellings": [], "suggestions": [], "answer": "ERANGE", "category": "TREATMENT OF ERROR CONDITIONS", "question":" If a floating result overflows and if the integer expression math_errhandling & MATH_ERRNO is nonzero, the integer expression errno acquires this value."}
    ,
    {
"question": " If a floating result overflows and if the integer expression math_errhandling & MATH_ERREXCEPT is nonzero, this floating-point exception is raised.", "category": "TREATMENT OF ERROR CONDITIONS", "suggestions": [], "answer": "overflow", "alternativeSpellings": [], "id":"763"}
    ,
    {
"answer": "zero", "suggestions": [], "category": "TREATMENT OF ERROR CONDITIONS", "question": " If a domain, pole, or range error occurs and the integer expression math_errhandling & MATH_ERRNO is this value, then errno shall either be set to the value corresponding to the error or left unmodified.", "id": "764", "alternativeSpellings":[]}
    ,
    {
"id": "765", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the principal value of the arc cosine of x and return arc cosine x in the interval [0,pi] radians.", "suggestions": [], "answer":"acos"}
    ,
    {
"alternativeSpellings": [], "id": "766", "answer": "asin", "suggestions": [], "question": " This function computes the principal value of the arc sine of x and return arc sine x in the interval [-pi/2, +pi/2] radians.", "category":"FUNCTIONS"}
    ,
    {
"question": " This function computes the principal value of the arc tangent of x and return arc tangent x in the interval [-pi/2, +pi/2] radians.", "category": "FUNCTIONS", "suggestions": [], "answer": "atan", "alternativeSpellings": [], "id":"767"}
    ,
    {
"alternativeSpellings": [], "id": "768", "question": " This function computes the value of the arc tangent of y/x, using the signs of both arguments to determine the quadrant of the return value and return arc tangent y/x in the interval [-pi, +pi] radians.", "category": "FUNCTIONS", "suggestions": [], "answer":"atan2"}
    ,
    {
"alternativeSpellings": [], "id": "769", "question": " This function computes the cosine of x (measured in radians).", "category": "FUNCTIONS", "suggestions": [], "answer":"cos"}
    ,
    {
"category": "FUNCTIONS", "question": " This function computes the sine of x (measured in radians).", "suggestions": [], "answer": "sin", "id": "770", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function returns the tangent of x (measured in radians).", "answer": "tan", "suggestions": [], "id": "771", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "acosh", "question": " This function computes the (nonnegative) arc hyperbolic cosine of x and return a value in the interval [0, +pi].", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"772"}
    ,
    {
"question": " This function computes the arc hyperbolic sine of x.", "category": "FUNCTIONS", "suggestions": [], "answer": "asinh", "alternativeSpellings": [], "id":"773"}
    ,
    {
"answer": "atanh", "suggestions": [], "question": " This function computes the arc hyperbolic tangent of x.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"774"}
    ,
    {
"id": "775", "alternativeSpellings": [], "answer": "cosh", "suggestions": [], "category": "FUNCTIONS", "question":" This function computes the hyperbolic cosine of x."}
    ,
    {
"id": "776", "alternativeSpellings": [], "answer": "sinh", "suggestions": [], "category": "FUNCTIONS", "question":" This function computes the hyperbolic sine of x."}
    ,
    {
"id": "777", "alternativeSpellings": [], "answer": "tanh", "suggestions": [], "category": "FUNCTIONS", "question":" This function computes the hyperbolic tangent of x."}
    ,
    {
"alternativeSpellings": [], "id": "778", "suggestions": [], "answer": "exp", "question": " This function computes the base-e exponential of x.", "category":"FUNCTIONS"}
    ,
    {
"answer": "exp2", "suggestions": [], "question": " This function computes the base-2 exponential of x.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"779"}
    ,
    {
"question": " This function computes the base-e exponential of the argument, minus 1.", "category": "FUNCTIONS", "answer": "expm1", "suggestions": [], "alternativeSpellings": [], "id":"780"}
    ,
    {
"category": "FUNCTIONS", "question": " This function breaks a floating-point number into a normalized fraction and an integral power of 2.", "answer": "frexp", "suggestions": [], "id": "781", "alternativeSpellings":[]}
    ,
    {
"answer": "ilogb", "suggestions": [], "category": "FUNCTIONS", "question": " This function extracts the exponent of x as a signed int value.", "id": "782", "alternativeSpellings":[]}
    ,
    {
"id": "783", "alternativeSpellings": [], "answer": "FP_ILOGB0", "suggestions": [], "category": "FUNCTIONS", "question":" If the argument of the ilogb functions is zero they compute this value."}
    ,
    {
"category": "FUNCTIONS", "question": " If the argument of the ilogb functions is infinite they compute this value.", "answer": "INT_MAX", "suggestions": [], "id": "784", "alternativeSpellings":[]}
    ,
    {
"id": "785", "alternativeSpellings": [], "suggestions": [], "answer": "FP_ILOGBNAN", "category": "FUNCTIONS", "question":" If the argument of the ilogb functions is a NaN they compute this value."}
    ,
    {
"suggestions": [], "answer": "ilogb", "question": " This function returns the exponent of x as a signed int value.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"786"}
    ,
    {
"id": "787", "alternativeSpellings": [], "answer": "ldexp", "suggestions": [], "category": "FUNCTIONS", "question":" This function multiplies a floating-point number by an integral power of 2."}
    ,
    {
"question": " This function computes the base-e (natural) logarithm of x.", "category": "FUNCTIONS", "answer": "log", "suggestions": [], "alternativeSpellings": [], "id":"788"}
    ,
    {
"id": "789", "alternativeSpellings": [], "suggestions": [], "answer": "log10", "category": "FUNCTIONS", "question":" This function computes the base-10 (common) logarithm of x."}
    ,
    {
"id": "790", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the base-e (natural) logarithm of 1 plus the argument.", "suggestions": [], "answer":"log1p"}
    ,
    {
"id": "791", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the base-2 logarithm of x.", "answer": "log2", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function extracts the exponent of x, as a signed integer value in floating-point format.", "answer": "logb", "suggestions": [], "id": "792", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function breaks the argument value into integral and fractional parts, each of which has the same type and sign as the argument.", "suggestions": [], "answer": "modf", "id": "793", "alternativeSpellings":[]}
    ,
    {
"id": "794", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the real cube root of x.", "answer": "cbrt", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function computes the absolute value of a floating-point number x.", "answer": "fabs", "suggestions": [], "id": "795", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "hypot", "category": "FUNCTIONS", "question": " This function computes the square root of the sum of the squares of x and y, without undue overflow or underflow.", "id": "796", "alternativeSpellings":[]}
    ,
    {
"id": "797", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes x raised to the power y.", "suggestions": [], "answer":"pow"}
    ,
    {
"alternativeSpellings": [], "id": "798", "suggestions": [], "answer": "sqrt", "question": " This function computes the nonnegative square root of x.", "category":"FUNCTIONS"}
    ,
    {
"question": " This function computes the error function of x.", "category": "FUNCTIONS", "answer": "erf", "suggestions": [], "alternativeSpellings": [], "id":"799"}
    ,
    {
"category": "FUNCTIONS", "question": " This function computes the complementary error function of x.", "answer": "erfc", "suggestions": [], "id": "800", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "801", "suggestions": [], "answer": "lgamma", "question": " This function computes the natural logarithm of the absolute value of gamma of x.", "category":"FUNCTIONS"}
    ,
    {
"id": "802", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the gamma function of x.", "suggestions": [], "answer":"tgamma"}
    ,
    {
"question": " This function computes the smallest integer value not less than x.", "category": "FUNCTIONS", "suggestions": [], "answer": "ceil", "alternativeSpellings": [], "id":"803"}
    ,
    {
"question": " This function computes the largest integer value not greater than x.", "category": "FUNCTIONS", "suggestions": [], "answer": "floor", "alternativeSpellings": [], "id":"804"}
    ,
    {
"alternativeSpellings": [], "id": "805", "question": " This function rounds its argument to an integer value in floating-point format, using the current rounding direction and without raising the ``inexact'' floating-point exception.", "category": "FUNCTIONS", "answer": "nearbyint", "suggestions":[]}
    ,
    {
"id": "806", "alternativeSpellings": [], "suggestions": [], "answer": "rint", "category": "FUNCTIONS", "question":" This function rounds its argument to an integer value in floating-point format, using the current rounding direction and raises the ``inexact'' floating-point exception if the result differs in value from the argument."}
    ,
    {
"alternativeSpellings": [], "id": "807", "suggestions": [], "answer": "round", "question": " This function rounds its argument to the nearest integer value in floating-point format, rounding halfway cases away from zero, regardless of the current rounding direction.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "808", "answer": "trunc", "suggestions": [], "question": " This function rounds its argument to the integer value, in floating format, nearest to but no larger in magnitude than the argument.", "category":"FUNCTIONS"}
    ,
    {
"suggestions": [], "answer": "fmod", "question": " This function computes the floating-point remainder of x/y.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"809"}
    ,
    {
"alternativeSpellings": [], "id": "810", "question": " This function computes the remainder x REM y as required by IEC 60559.", "category": "FUNCTIONS", "answer": "remainder", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "811", "suggestions": [], "answer": "copysign", "question": " This function produces a value with the magnitude of x and the sign of y.", "category":"FUNCTIONS"}
    ,
    {
"answer": "nan", "suggestions": [], "category": "FUNCTIONS", "question": " This function returns a quiet NaN, if available, with content indicated through its argument. If the implementation does not support quiet NaNs, the functions return zero.", "id": "812", "alternativeSpellings":[]}
    ,
    {
"answer": "nextafter", "suggestions": [], "category": "FUNCTIONS", "question": " This function determines the next representable value, in the type of the function, after x in the direction of y, where x and y are first converted to the type of the function.", "id": "813", "alternativeSpellings":[]}
    ,
    {
"id": "814", "alternativeSpellings": [], "suggestions": [], "answer": "nexttoward", "category": "FUNCTIONS", "question":" This function is equivalent to the nextafter function except that the second parameter has type long double and the function returns y converted to the type of the function if x equals y."}
    ,
    {
"answer": "fdim", "suggestions": [], "category": "FUNCTIONS", "question": " This function determines the positive difference between its arguments.", "id": "815", "alternativeSpellings":[]}
    ,
    {
"answer": "fmax", "suggestions": [], "question": " This function determines the maximum numeric value of its arguments", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"816"}
    ,
    {
"category": "FUNCTIONS", "question": " This function determines the minimum numeric value of its arguments.", "suggestions": [], "answer": "fmin", "id": "817", "alternativeSpellings":[]}
    ,
    {
"answer": "fma", "suggestions": [], "question": " This function computes (x * y) + z, rounded as one ternary operation.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"818"}
    ,
    {
"answer": "setjmp.h", "suggestions": [], "question": " This header defines the macro setjmp, and declares one function and one type, for bypassing the normal function call and return discipline.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"819"}
    ,
    {
"question": " This type is an array type suitable for holding the information needed to restore a calling setjmp environment.", "category": "NONLOCAL JUMPS <SETJMP.H>", "suggestions": ["JMPBUF_T"], "answer": "JMP_BUF", "alternativeSpellings": [], "id":"820"}
    ,
    {
"alternativeSpellings": [], "id": "821", "question": " This macro saves its calling environment in its jmp_buf argument for later use by the longjmp function.", "category": "FUNCTIONS", "answer": "setjmp", "suggestions":[]}
    ,
    {
"id": "822", "alternativeSpellings": [], "category": "THE SETJMP MACRO", "question": " The setjmp macro saves its calling environment in its jmp_buf argument for later use by this function.", "answer": "longjmp", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "longjmp", "category": "FUNCTIONS", "question": " This function restores the environment saved by the most recent invocation of the setjmp macro in the same invocation of the program with the corresponding jmp_buf argument.", "id": "823", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "824", "question": " If longjmp is called without a prior invocation of this macro the behavior is undefined.", "category": "FUNCTIONS", "suggestions": [], "answer":"setjmp"}
    ,
    {
"category": "FUNCTIONS", "question": " The longjmp function that returns control back to the point of the setjmp invocation might cause this to happen to memory associated with a variable length array object.", "answer": "squandered", "suggestions": [], "id": "825", "alternativeSpellings":[]}
    ,
    {
"answer": "signal.h", "suggestions": [], "question": " This header declares a type and two functions and defines several macros, for handling various signals (conditions that may be reported during program execution).", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"826"}
    ,
    {
"alternativeSpellings": [], "id": "827", "question": " This is the (possibly volatile-qualified) integer type of an object that can be accessed as an atomic entity, even in the presence of asynchronous interrupts.", "category": "SIGNAL HANDLING <SIGNAL.H>", "suggestions": [], "answer":"sig_atomic_t"}
    ,
    {
"category": "SIGNAL HANDLING <SIGNAL.H>", "question": " This macro is a signal number denoting abnormal termination, such as is initiated by the abort function.", "suggestions": [], "answer": "SIGABRT", "id": "828", "alternativeSpellings":[]}
    ,
    {
"id": "829", "alternativeSpellings": [], "category": "SIGNAL HANDLING <SIGNAL.H>", "question": " This macro is a signal number denoting an erroneous arithmetic operation, such as zero divide or an operation resulting in overflow.", "suggestions": [], "answer":"SIGFPE"}
    ,
    {
"question": " This macro is a signal number denoting the detection of an invalid function image, such as an invalid instruction.", "category": "SIGNAL HANDLING <SIGNAL.H>", "answer": "SIGILL", "suggestions": [], "alternativeSpellings": [], "id":"830"}
    ,
    {
"alternativeSpellings": [], "id": "831", "suggestions": [], "answer": "SIGINT", "question": " This macro is a signal number denoting the receipt of an interactive attention signal.", "category":"SIGNAL HANDLING <SIGNAL.H>"}
    ,
    {
"id": "832", "alternativeSpellings": [], "answer": "SIGSEGV", "suggestions": [], "category": "SIGNAL HANDLING <SIGNAL.H>", "question":" This macro is a signal number denoting an invalid access to storage."}
    ,
    {
"alternativeSpellings": [], "id": "833", "question": " This macro is a signal number denoting a termination request sent to the program.", "category": "SIGNAL HANDLING <SIGNAL.H>", "suggestions": [], "answer":"SIGTERM"}
    ,
    {
"id": "834", "alternativeSpellings": [], "category": "SIGNAL HANDLING <SIGNAL.H>", "question": " The complete set of signals, their semantics, and their default handling is implementation-defined; all signal numbers shall be this kind value.", "answer": "nonnegative", "suggestions":[]}
    ,
    {
"id": "835", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If the value of the function passed to signal() is this, default handling for that signal will occur.", "suggestions": [], "answer":"SIG_DFL"}
    ,
    {
"question": " If the value of the function passed to signal() is this, the signal will be ignored.", "category": "FUNCTIONS", "answer": "SIG_IGN", "suggestions": [], "alternativeSpellings": [], "id":"836"}
    ,
    {
"category": "FUNCTIONS", "question": " An invocation of a function because of a signal, or (recursively) of any further functions called by that invocation (other than functions in the standard library), is called this.", "suggestions": [], "answer": "signal handler", "id": "837", "alternativeSpellings":[]}
    ,
    {
"id": "838", "alternativeSpellings": [], "answer": "raise", "suggestions": [], "category": "FUNCTIONS", "question":" If the signal occurs as the result of calling the abort or raise function, the signal handler shall not call this function."}
    ,
    {
"suggestions": [], "answer": "asynchronous", "category": "FUNCTIONS", "question": " If any signal is generated by this kind of signal handler, the behavior is undefined.", "id": "839", "alternativeSpellings":[]}
    ,
    {
"answer": "raise", "suggestions": [], "question": " This function causes the handler for the signal specified by its argument to be invoked.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"840"}
    ,
    {
"answer": "raise", "suggestions": [], "question": " If a signal handler is called, this function shall not return until after the signal handler does.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"841"}
    ,
    {
"answer": "va_list", "suggestions": [], "question": " This type is a complete object type suitable for holding information needed by the macros va_start, va_arg, va_end, and va_copy.", "category": "VARIABLE ARGUMENTS <STDARG.H>", "alternativeSpellings": [], "id":"842"}
    ,
    {
"question": " If access to the varying arguments is desired, the called function shall declare an object having this type.", "category": "VARIABLE ARGUMENTS <STDARG.H>", "suggestions": [], "answer": "va_list", "alternativeSpellings": [], "id":"843"}
    ,
    {
"alternativeSpellings": [], "id": "844", "question": " Each invocation of the va_start and va_copy macros shall be matched by a corresponding invocation of this macro in the same function.", "category": "VARIABLE ARGUMENT LIST ACCESS MACROS", "answer": "va_end", "suggestions":[]}
    ,
    {
"question": " If there is no corresponding invocation of the va_start or va_copy macro, or if the va_end macro is not invoked before the return, the behavior is this.", "category": "THE VA_END MACRO", "suggestions": [], "answer": "undefined", "alternativeSpellings": [], "id":"845"}
    ,
    {
"answer": "va_start", "suggestions": [], "category": "MISC", "question": " This  macro initializes a unique va_list for subsequent use by the va_arg and va_end macros.", "id": "846", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "847", "question": " Neither the va_start nor va_copy macro shall be invoked to reinitialize a va_list without an intervening invocation of this macro for the same va_list.", "category": "THE VA_START MACRO", "answer": "va_end", "suggestions":[]}
    ,
    {
"answer": "stdatomic.h", "suggestions": [], "category": "INTRODUCTION", "question": " This header defines several macros and declares several types and functions for performing atomic operations on data shared between threads.", "id": "848", "alternativeSpellings":[]}
    ,
    {
"question": " This type is an enumerated type whose enumerators identify memory ordering constraints.", "category": "INTRODUCTION", "suggestions": [], "answer": "memory_order", "alternativeSpellings": [], "id":"849"}
    ,
    {
"id": "850", "alternativeSpellings": [], "suggestions": [], "answer": "atomic_flag", "category": "INTRODUCTION", "question":" This type is a structure type representing a lock-free, primitive atomic flag."}
    ,
    {
"id": "851", "alternativeSpellings": [], "suggestions": [], "answer": "ATOMIC_VAR_INIT", "category": "MISC", "question":" An atomic object with automatic storage duration that is not explicitly initialized using this macro is initially in an indeterminate state; however, the default (zero) initialization for objects with static or thread-local storage duration is guaranteed to produce a valid state."}
    ,
    {
"category": "ORDER AND CONSISTENCY", "question": " These Atomic operations shall always read the last value (in the modification order) stored before the write associated with such an operation.", "answer": "read-modify-write", "suggestions": [], "id": "852", "alternativeSpellings":[]}
    ,
    {
"id": "853", "alternativeSpellings": [], "answer": "atomic store", "suggestions": [], "category": "ORDER AND CONSISTENCY", "question":" This shall only store a value that has been computed from constants and program input values by a finite sequence of program evaluations, such that each evaluation observes the values of variables as computed by the last prior assignment in the sequence."}
    ,
    {
"alternativeSpellings": [], "id": "854", "suggestions": [], "answer": "acquire fence", "question": " A fence with acquire semantics is called this.", "category":"FENCES"}
    ,
    {
"category": "FENCES", "question": " A fence with release semantics is called this.", "answer": "release fence", "suggestions": [], "id": "855", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "856", "question": " This function can be used to specify the order in which actions performed by the thread become visible to the signal handler.", "category": "FUNCTIONS", "answer": "atomic_signal_fence", "suggestions":[]}
    ,
    {
"suggestions": ["ONE", "TWO"], "answer": "ZERO", "question": " This value for the atomic lock-free macros indicates that the integer or address atomic type is never lock-free.", "category": "LOCK-FREE PROPERTY", "alternativeSpellings": [], "id":"857"}
    ,
    {
"id": "858", "alternativeSpellings": [], "answer": "one", "suggestions": [], "category": "LOCK-FREE PROPERTY", "question":" This value for the atomic lock-free macros indicates that the integer or address atomic type is sometimes lock-free."}
    ,
    {
"alternativeSpellings": [], "id": "859", "answer": "two", "suggestions": [], "question": " This value for the atomic lock-free macros indicates that the integer or address atomic type is always lock-free.", "category":"LOCK-FREE PROPERTY"}
    ,
    {
"alternativeSpellings": [], "id": "860", "answer": "atomic_is_lock_free", "suggestions": [], "question": " This generic function indicates whether or not the object pointed to by obj is lock-free.", "category":"FUNCTIONS"}
    ,
    {
"answer": "atomic_flag", "suggestions": [], "category": "ATOMIC FLAG TYPE AND OPERATIONS", "question": " This type provides the classic test-and-set functionality. It has two states, set and clear.", "id": "861", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "862", "suggestions": [], "answer": "atomic_flag", "question": " Operations on an object of this type shall be lock-free and address-free.", "category":"ATOMIC FLAG TYPE AND OPERATIONS"}
    ,
    {
"alternativeSpellings": [], "id": "863", "answer": "ATOMIC_FLAG_INIT", "suggestions": [], "question": " An atomic_flag that is not explicitly initialized with this macro is initially in an indeterminate state.", "category":"ATOMIC FLAG TYPE AND OPERATIONS"}
    ,
    {
"alternativeSpellings": [], "id": "864", "question": " The <stdbool.h> macro bool expands to this.", "category": "BOOLEAN TYPE AND VALUES <STDBOOL.H>", "answer": "_Bool", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "865", "answer": "true", "suggestions": [], "question": " This <stdbool.h> macro expands to the integer constant 1.", "category":"BOOLEAN TYPE AND VALUES <STDBOOL.H>"}
    ,
    {
"id": "866", "alternativeSpellings": [], "category": "BOOLEAN TYPE AND VALUES <STDBOOL.H>", "question": " This <stdbool.h> macro expands to the integer constant 0.", "suggestions": [], "answer":"false"}
    ,
    {
"answer": "ptrdiff_t", "suggestions": [], "question": " This type is the signed integer type of the result of subtracting two pointers.", "category": "COMMON DEFINITIONS <STDDEF.H>", "alternativeSpellings": [], "id":"867"}
    ,
    {
"alternativeSpellings": [], "id": "868", "answer": "size_t", "suggestions": [], "question": " This type is the unsigned integer type of the result of the sizeof operator.", "category":"COMMON DEFINITIONS <STDDEF.H>"}
    ,
    {
"id": "869", "alternativeSpellings": [], "category": "COMMON DEFINITIONS <STDDEF.H>", "question": " This type is an object type whose alignment is as great as is supported by the implementation in all contexts.", "suggestions": [], "answer":"max_align_t"}
    ,
    {
"question": " This type is an integer type whose range of values can represent distinct codes for all members of the largest extended character set specified among the supported locales.", "category": "COMMON DEFINITIONS <STDDEF.H> ", "suggestions": [], "answer": "wchar_t", "alternativeSpellings": [], "id":"870"}
    ,
    {
"answer": "NULL", "suggestions": [], "category": "COMMON DEFINITIONS <STDDEF.H>", "question": " This macro expands to an implementation-defined null pointer constant.", "id": "871", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "offsetof", "question": " This macro expands to an integer constant expression that has type size_t, the value of which is the offset in bytes, to a structure member from the beginning of its structure.", "category": "COMMON DEFINITIONS <STDDEF.H>", "alternativeSpellings": [], "id":"872"}
    ,
    {
"alternativeSpellings": [], "id": "873", "answer": "stdint.h", "suggestions": [], "question": " This header declares sets of integer types having specified widths, and defines corresponding sets of macros. It also defines macros that specify limits of integer types corresponding to types defined in other standard headers.", "category":"MISC"}
    ,
    {
"category": "INTEGER TYPES CAPABLE OF HOLDING OBJECT POINTERS", "question": " This type designates a signed integer type with the property that any valid pointer to void can be converted to this type, then converted back to pointer to void, and the result will compare equal to the original pointer.", "answer": "intptr_t", "suggestions": [], "id": "874", "alternativeSpellings":[]}
    ,
    {
"id": "875", "alternativeSpellings": [], "answer": "uintptr_t", "suggestions": [], "category": "INTEGER TYPES CAPABLE OF HOLDING OBJECT POINTERS", "question":" This type designates an unsigned integer type with the property that any valid pointer to void can be converted to this type, then converted back to pointer to void, and the result will compare equal to the original pointer."}
    ,
    {
"id": "876", "alternativeSpellings": [], "answer": "intmax_t", "suggestions": [], "category": "GREATEST-WIDTH INTEGER TYPES", "question":" This type designates a signed integer type capable of representing any value of any signed integer type."}
    ,
    {
"id": "877", "alternativeSpellings": [], "category": "GREATEST-WIDTH INTEGER TYPES", "question": " This type designates an unsigned integer type capable of representing any value of any unsigned integer type.", "suggestions": [], "answer":"uintmax_t"}
    ,
    {
"answer": "PTRDIFF_MIN", "suggestions": [], "category": "LIMITS OF OTHER INTEGER TYPES", "question": " This macro is the minimum limit of ptrdiff_t.", "id": "878", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "879", "question": " This macro is the maximum limit of ptrdiff_t.", "category": "LIMITS OF OTHER INTEGER TYPES", "answer": "PTRDIFF_MAX", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "880", "question": " This macro is the minimum limit of sig_atomic_t.", "category": "LIMITS OF OTHER INTEGER TYPES", "answer": "SIG_ATOMIC_MIN", "suggestions":[]}
    ,
    {
"question": " This macro is the maximum limit of sig_atomic_t.", "category": "LIMITS OF OTHER INTEGER TYPES", "answer": "SIG_ATOMIC_MAX", "suggestions": [], "alternativeSpellings": [], "id":"881"}
    ,
    {
"alternativeSpellings": [], "id": "882", "suggestions": [], "answer": "SIZE_MAX", "question": " This macro is the maximum limit of size_t.", "category":"LIMITS OF OTHER INTEGER TYPES"}
    ,
    {
"alternativeSpellings": [], "id": "883", "question": " This macro is the minimum limit of wchar_t.", "category": "LIMITS OF OTHER INTEGER TYPES", "answer": "WCHAR_MIN", "suggestions":[]}
    ,
    {
"id": "884", "alternativeSpellings": [], "category": "LIMITS OF OTHER INTEGER TYPES", "question": " This macro is the maximum limit of wchar_t.", "suggestions": [], "answer":"WCHAR_MAX"}
    ,
    {
"alternativeSpellings": [], "id": "885", "question": " This macro is the minimum limit of wint_t.", "category": "LIMITS OF OTHER INTEGER TYPES", "suggestions": [], "answer":"WINT_MIN"}
    ,
    {
"category": "LIMITS OF OTHER INTEGER TYPES", "question": " This macro is the maximum limit of wint_t.", "answer": "WINT_MAX", "suggestions": [], "id": "886", "alternativeSpellings":[]}
    ,
    {
"category": "INTRODUCTION", "question": " This header defines several macros, and declares three types and many functions for performing input and output.", "suggestions": [], "answer": "stdio.h", "id": "887", "alternativeSpellings":[]}
    ,
    {
"category": "INTRODUCTION", "question": " This type is an object type capable of recording all the information needed to control a stream.", "suggestions": [], "answer": "FILE", "id": "888", "alternativeSpellings":[]}
    ,
    {
"category": "INTRODUCTION", "question": " This macro expands to an integer constant expression that is the size of the buffer used by the setbuf function;", "suggestions": [], "answer": "BUFSIZ", "id": "889", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "EOF", "question": " This macro expands to an integer constant expression, with type int and a negative value, that is returned by several functions to indicate end-of-file, that is, no more input from a stream.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"890"}
    ,
    {
"suggestions": [], "answer": "FOPEN_MAX", "category": "INTRODUCTION", "question": " This macro expands to an integer constant expression that is the minimum number of files that the implementation guarantees can be open simultaneously.", "id": "891", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "892", "suggestions": [], "answer": "FILENAME_MAX", "question": " This macro expands to an integer constant expression that is the size needed for an array of char large enough to hold the longest file name string that the implementation guarantees can be opened.", "category":"INTRODUCTION"}
    ,
    {
"category": "INTRODUCTION", "question": " This macro expands to an integer constant expression that is the size needed for an array of char large enough to hold a temporary file name string generated by the tmpnam function.", "suggestions": [], "answer": "L_tmpnam", "id": "893", "alternativeSpellings":[]}
    ,
    {
"category": "INTRODUCTION", "question": " The macros SEEK_CUR, SEEK_END, and SEEK_SET expand to integer constant expressions with distinct values, suitable for use as the third argument to this function.", "suggestions": [], "answer": "fseek", "id": "894", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "TMP_MAX", "question": " This macro expands to an integer constant expression that is the minimum number of unique file names that can be generated by the tmpnam function.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"895"}
    ,
    {
"id": "896", "alternativeSpellings": [], "category": "INTRODUCTION", "question": " This symbol is an expression of type ``pointer to FILE'' that points to the FILE object associated with the standard error stream.", "suggestions": [], "answer":"stderr"}
    ,
    {
"category": "INTRODUCTION", "question": " This symbol is an expression of type ``pointer to FILE'' that points to the FILE object associated with the standard output stream.", "suggestions": [], "answer": "stdout", "id": "897", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "stdin", "question": " This symbol is an expression of type ``pointer to FILE'' that points to the FILE object associated with the standard input stream.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"898"}
    ,
    {
"question": " If the implementation imposes no practical limit on the length of file name strings, the value of this macro should instead be the recommended size of an array intended to hold a file name string.", "category": "INTRODUCTION", "answer": "FILENAME_MAX", "suggestions": [], "alternativeSpellings": [], "id":"899"}
    ,
    {
"alternativeSpellings": [], "id": "900", "suggestions": [], "answer": "text", "question": " This kind of stream is an ordered sequence of characters composed into lines, each line consisting of zero or more characters plus a terminating new-line character.", "category":"STREAMS"}
    ,
    {
"id": "901", "alternativeSpellings": [], "answer": "binary", "suggestions": [], "category": "STREAMS", "question":" This kind of stream is an ordered sequence of characters that can transparently record internal data."}
    ,
    {
"id": "902", "alternativeSpellings": [], "suggestions": [], "answer": "254", "category": "STREAMS", "question":" An implementation shall support text files with lines containing at least this many characters, including the terminating new-line character."}
    ,
    {
"id": "903", "alternativeSpellings": [], "suggestions": [], "answer": "256", "category": "STREAMS", "question":" The value of the macro BUFSIZ shall be at least this."}
    ,
    {
"answer": "stream", "suggestions": [], "category": "FILES", "question": " This is associated with an external file (which may be a physical device) by opening a file, which may involve creating a new file.", "id": "904", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "905", "suggestions": [], "answer": "append", "question": " If a file can support positioning requests (such as a disk file, as opposed to a terminal), then a file position indicator associated with the stream is positioned at the start of the file, unless the file is opened with this mode in which case it is implementation-defined whether the file position indicator is initially positioned at the beginning or the end of the file.", "category":"FILES"}
    ,
    {
"alternativeSpellings": [], "id": "906", "suggestions": [], "answer": "unbuffered", "question": " When a stream has this kind of buffering, characters are intended to appear from the source or at the destination as soon as possible.", "category":"FILES"}
    ,
    {
"question": " When a stream has this kind of buffering, characters are intended to be transmitted to or from the host environment as a block when a buffer is filled.", "category": "FILES", "answer": "fully buffered", "suggestions": [], "alternativeSpellings": [], "id":"907"}
    ,
    {
"suggestions": [], "answer": "line buffered", "question": " When a stream has this kind of buffering, characters are intended to be transmitted to or from the host environment as a block when a new-line character is encountered.", "category": "FILES", "alternativeSpellings": [], "id":"908"}
    ,
    {
"question": " A file may be disassociated from a controlling stream by doing this to the file.", "category": "FILES", "suggestions": [], "answer": "closing", "alternativeSpellings": [], "id":"909"}
    ,
    {
"answer": "exit", "suggestions": [], "category": "FILES", "question": " If the main function returns to its original caller, or if this function is called, all open files are closed (hence all output streams are flushed) before program termination.", "id": "910", "alternativeSpellings":[]}
    ,
    {
"category": "FILES", "question": " Functions that open nontemporary files require this, which is a string.", "answer": "file name", "suggestions": [], "id": "911", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "912", "question": " The value of FOPEN_MAX shall be at least this, including the three standard text streams.", "category": "FILES", "answer": "eight", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "remove", "question": " This function causes the file whose name is the string pointed to by filename to be no longer accessible by that name unless it is created anew.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"913"}
    ,
    {
"category": "FUNCTIONS", "question": " If the file is open, the behavior of the remove function is this.", "suggestions": [], "answer": "implementation-defined", "id": "914", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "915", "question": " This function causes the file whose name is the string pointed to by its first argument to be henceforth known by the name given by the string pointed to by its second argument.", "category": "FUNCTIONS", "suggestions": [], "answer":"rename"}
    ,
    {
"alternativeSpellings": [], "id": "916", "suggestions": [], "answer": "implementation-defined", "question": " If a file named by the string pointed to by new exists prior to the call to the rename function, the behavior is this.", "category":"FUNCTIONS"}
    ,
    {
"question": " This function creates a temporary binary file that is different from any other existing file and that will automatically be removed when it is closed or at program termination.", "category": "FUNCTIONS", "suggestions": [], "answer": "tmpfile", "alternativeSpellings": [], "id":"917"}
    ,
    {
"id": "918", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If the program terminates abnormally, whether an open temporary file is removed is this.", "suggestions": [], "answer":"implementation-defined"}
    ,
    {
"id": "919", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function generates a string that is a valid file name and that is not the same as the name of an existing file. The function is potentially capable of generating at least TMP_MAX different strings, but any or all of them may already be in use by existing files and thus not be suitable return values.", "suggestions": [], "answer":"tmpnam"}
    ,
    {
"id": "920", "alternativeSpellings": [], "answer": "twenty-five", "suggestions": [], "category": "FUNCTIONS", "question":" The value of the macro TMP_MAX shall be at least this."}
    ,
    {
"alternativeSpellings": [], "id": "921", "suggestions": [], "answer": "fclose", "question": " A successful call to this function causes the stream pointed to by its stream argument to be flushed and the associated file to be closed.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "922", "suggestions": [], "answer": "EOF", "question": " The fclose function returns zero if the stream was successfully closed, or this value if any errors were detected.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " If its stream argument points to an output stream or an update stream in which the most recent operation was not input, this function causes any unwritten data for that stream to be delivered to the host environment to be written to the file.", "suggestions": [], "answer": "fflush", "id": "923", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "924", "answer": "null pointer", "suggestions": [], "question": " If its argument is this value, the fflush function performs the flushing action on all applicable streams.", "category":"FUNCTIONS"}
    ,
    {
"answer": "fopen", "suggestions": [], "category": "FUNCTIONS", "question": " This function opens the file whose name is the string pointed to by filename, and associates a stream with it.", "id": "925", "alternativeSpellings":[]}
    ,
    {
"id": "926", "alternativeSpellings": [], "suggestions": [], "answer": "\"r\"", "category": "FUNCTIONS", "question":" If fopen's mode string is this, the file is opened as a text file for reading."}
    ,
    {
"alternativeSpellings": [], "id": "927", "suggestions": [], "answer": "\"w\"", "question": " If fopen's mode string is this, the file is created as a text file for writing and truncated to zero length if it already exists.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "928", "answer": "\"wx\"", "suggestions": [], "question": " If fopen's mode string is this, the file is created as a text file for writing or an error is returned if it already exists.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "929", "answer": "\"a\"", "suggestions": [], "question": " If fopen's mode string is this, the file is opened for appending; that is, opened or created as a text file for writing at end-of-file.", "category":"FUNCTIONS"}
    ,
    {
"suggestions": [], "answer": "\"rb\"", "category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is opened as binary file for reading", "id": "930", "alternativeSpellings":[]}
    ,
    {
"answer": "\"wb\"", "suggestions": [], "question": " If fopen's mode string is this, the file is created as a binary file for writing and truncated to zero length if it already exists.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"931"}
    ,
    {
"alternativeSpellings": [], "id": "932", "answer": "\"wbx\"", "suggestions": [], "question": " If fopen's mode string is this, the file is created as a binary file for writing or an error is returned if it already exists.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "933", "answer": "\"ab\"", "suggestions": [], "question": " If fopen's mode string is this, the file is opened as a binary file for appending; that is, opened or created as a binary file for writing at end-of-file.", "category":"FUNCTIONS"}
    ,
    {
"id": "934", "alternativeSpellings": [], "answer": "\"r+\"", "suggestions": [], "category": "FUNCTIONS", "question":" If fopen's mode string is this, the file is opened as a text file for updating (reading and writing)."}
    ,
    {
"category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is created as a text file for updating (reading and writing) and truncated to zero length if it already exists.", "suggestions": [], "answer": "\"w+\"", "id": "935", "alternativeSpellings":[]}
    ,
    {
"id": "936", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is created as a text file for updating (reading and writing) or an error is returned if it already exists.", "suggestions": [], "answer":"\"w+x\""}
    ,
    {
"id": "937", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is opened or created as a text file for updating (reading and writing), writing at end-of-file.", "suggestions": [], "answer":"\"a+\""}
    ,
    {
"id": "938", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is opened as a binary file for updating (reading and writing).", "answer": "\"r+b\"", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is created as a binary file for updating (reading and writing) and truncated to zero length if it already exists.", "suggestions": [], "answer": "\"w+b\"", "id": "939", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is created as a binary file for updating (reading and write) or an error is returned if it already exists.", "answer": "\"w+bx\"", "suggestions": [], "id": "940", "alternativeSpellings":[]}
    ,
    {
"answer": "\"a+b\"", "suggestions": [], "category": "FUNCTIONS", "question": " If fopen's mode string is this, the file is opened or created as a binary file for updating (reading and writing), writing at end-of-file.", "id": "941", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "942", "question": " When a file is opened with this kind of mode, both input and output may be performed on the associated stream.", "category": "FUNCTIONS", "answer": "update", "suggestions":[]}
    ,
    {
"answer": "update", "suggestions": [], "question": " When a file is opened in this kind of mode, output shall not be directly followed by input without an intervening call to the fflush function or to a file positioning function (fseek, fsetpos, or rewind), and input shall not be directly followed by output without an intervening call to a file positioning function, unless the input operation encounters end-of-file.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"943"}
    ,
    {
"alternativeSpellings": [], "id": "944", "question": " When opened, a stream is fully buffered if and only if it can be determined not to refer to this kind of device.", "category": "FUNCTIONS", "suggestions": [], "answer":"interactive"}
    ,
    {
"alternativeSpellings": [], "id": "945", "question": " This function opens the file whose name is the string pointed to by a filename as its first argument and associates its stream to the stream pointed to by its third argument.", "category": "FUNCTIONS", "answer": "freopen", "suggestions":[]}
    ,
    {
"question": " If the filename argument is this value, the freopen function attempts to change the mode of the stream to that specified by mode, as if the name of the file currently associated with the stream had been used.", "category": "FUNCTIONS", "suggestions": [], "answer": "null pointer", "alternativeSpellings": [], "id":"946"}
    ,
    {
"answer": "setvbuf", "suggestions": [], "category": "FUNCTIONS", "question": " This function changes how a stream is buffered.", "id": "947", "alternativeSpellings":[]}
    ,
    {
"answer": "fprintf", "suggestions": [], "question": " This function writes output to the stream pointed to by its stream argument, under control of the string pointed to by its format argument that specifies how subsequent arguments are converted for output.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"948"}
    ,
    {
"answer": "hh", "suggestions": [], "question": " This fprintf length modifier specifies that a following conversion specifier applies to a signed char or unsigned char argument.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"949"}
    ,
    {
"alternativeSpellings": [], "id": "950", "question": " This fprintf length modifier specifies that a following conversion specifier applies to a short int or unsigned short int argument.", "category": "FUNCTIONS", "suggestions": [], "answer":"h"}
    ,
    {
"answer": "l", "suggestions": [], "category": "FUNCTIONS", "question": " This fprintf length modifier specifies that a following conversion specifier applies to a long int or unsigned long int argument", "id": "951", "alternativeSpellings":[]}
    ,
    {
"question": " This fprintf length modifier specifies that a following conversion specifier applies to a long long int or unsigned long long int argument.", "category": "FUNCTIONS", "suggestions": [], "answer": "ll", "alternativeSpellings": [], "id":"952"}
    ,
    {
"answer": "j", "suggestions": [], "question": " This fprintf length modifier specifies that a following conversion specifier applies to an intmax_t or uintmax_t argument.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"953"}
    ,
    {
"category": "FUNCTIONS", "question": " This fprintf length modifier specifies that a following conversion specifier applies to a size_t or the corresponding signed integer type argument.", "answer": "z", "suggestions": [], "id": "954", "alternativeSpellings":[]}
    ,
    {
"id": "955", "alternativeSpellings": [], "category": "MISC", "question": " This fprintf length modifier specifies that a following conversion specifier applies to a ptrdiff_t or the corresponding unsigned integer type argument.", "suggestions": [], "answer":"t"}
    ,
    {
"alternativeSpellings": [], "id": "956", "suggestions": [], "answer": "L", "question": " This fprintf length modifier specifies that a following conversion specifier applies to a long double argument.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "957", "question": " This function reads input from the stream pointed to by its stream argument, under control of the string pointed to by its format argument that specifies the admissible input sequences and how they are to be converted for assignment, using subsequent arguments as pointers to the objects to receive the converted input.", "category": "FUNCTIONS", "answer": "fscanf", "suggestions":[]}
    ,
    {
"id": "958", "alternativeSpellings": [], "answer": "white-space", "suggestions": [], "category": "FUNCTIONS", "question":" A fscanf directive composed of this kind of character(s) is executed by reading input up to the first non-white-space character (which remains unread), or until no more characters can be read."}
    ,
    {
"id": "959", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If the fscanf input item is not a matching sequence, the execution of the fscanf directive fails: this condition is called this.", "answer": "matching failure", "suggestions":[]}
    ,
    {
"id": "960", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If an encoding error or a read error prevented handling of an input item from a fscanf stream, the execution of the fscanf directive fails: this condition is called this.", "suggestions": [], "answer":"input failure"}
    ,
    {
"suggestions": [], "answer": "EOF", "category": "FUNCTIONS", "question": " The fscanf function returns this value if an input failure occurs before the first conversion (if any) has completed.", "id": "961", "alternativeSpellings":[]}
    ,
    {
"id": "962", "alternativeSpellings": [], "answer": "printf", "suggestions": [], "category": "FUNCTIONS", "question":" This function is equivalent to fprintf with the argument stdout interposed before its arguments."}
    ,
    {
"id": "963", "alternativeSpellings": [], "suggestions": [], "answer": "scanf", "category": "FUNCTIONS", "question":" This function is equivalent to fscanf with the argument stdin interposed before its arguments."}
    ,
    {
"id": "964", "alternativeSpellings": [], "answer": "snprintf", "suggestions": [], "category": "FUNCTIONS", "question":" This function is equivalent to fprintf, except that the output is written into an array (up to a specified length limit) rather than to a stream."}
    ,
    {
"id": "965", "alternativeSpellings": [], "suggestions": [], "answer": "sprintf", "category": "FUNCTIONS", "question":" This function is equivalent to fprintf, except that the output is written into an array (without an length limit) rather than to a stream."}
    ,
    {
"answer": "sscanf", "suggestions": [], "question": " This function is equivalent to fscanf, except that input is obtained from a string rather than from a stream.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"966"}
    ,
    {
"alternativeSpellings": [], "id": "967", "question": " This function is equivalent to fprintf, with a variable argument list.", "category": "FUNCTIONS", "suggestions": [], "answer":"vfprintf"}
    ,
    {
"question": " This function is equivalent to fscanf, with a variable argument list.", "category": "FUNCTIONS", "suggestions": [], "answer": "vfscanf", "alternativeSpellings": [], "id":"968"}
    ,
    {
"suggestions": [], "answer": "vprintf", "category": "FUNCTIONS", "question": " This function is equivalent to printf, with a variable argument list.", "id": "969", "alternativeSpellings":[]}
    ,
    {
"question": " This function is equivalent to scanf, with a variable argument list.", "category": "FUNCTIONS", "answer": "vscanf", "suggestions": [], "alternativeSpellings": [], "id":"970"}
    ,
    {
"id": "971", "alternativeSpellings": [], "suggestions": [], "answer": "vsnprintf", "category": "FUNCTIONS", "question":" This function is equivalent to snprintf, with a variable argument list."}
    ,
    {
"answer": "vsprintf", "suggestions": [], "question": " This function is equivalent to sprintf, with a variable argument list.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"972"}
    ,
    {
"id": "973", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function is equivalent to sscanf, with a variable argument list.", "suggestions": [], "answer":"vsscanf"}
    ,
    {
"category": "FUNCTIONS", "question": " If the end-of-file indicator for the input stream pointed to by stream is not set and a next character is present, this function obtains that character as an unsigned char converted to an int and advances the associated file position indicator for the stream (if defined).", "suggestions": [], "answer": "fgetc", "id": "974", "alternativeSpellings":[]}
    ,
    {
"question": " An end-of-file and a read error can be distinguished by use of these functions (name both, separated by \"and\").", "category": "FUNCTIONS", "suggestions": [], "answer": "feof and ferror", "alternativeSpellings": [], "id":"975"}
    ,
    {
"alternativeSpellings": [], "id": "976", "suggestions": [], "answer": "fgets", "question": " This function reads at most one less than the number of characters specified by its n argument from the stream pointed to by its stream argument into the array pointed to by its s argument.", "category":"FUNCTIONS"}
    ,
    {
"question": " This character is written immediately after the last character read into the array by the fgets function.", "category": "FUNCTIONS", "suggestions": [], "answer": "null character", "alternativeSpellings": [], "id":"977"}
    ,
    {
"suggestions": [], "answer": "null pointer", "category": "FUNCTIONS", "question": " If end-of-file is encountered by fgets and no characters have been read into the array, this value is returned.", "id": "978", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "979", "answer": "unchanged", "suggestions": [], "question": " If end-of-file is encountered by fgets and no characters have been read into the array, the contents of the array are this.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " If a read error occurs during the fgets operation, the array contents are this.", "answer": "indeterminate", "suggestions": [], "id": "980", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function writes the character specified by its argument (converted to an unsigned char) to the output stream pointed to by its stream argument, at the position indicated by the associated file position indicator for the stream (if defined), and advances the indicator appropriately.", "answer": "fputc", "suggestions": [], "id": "981", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "982", "question": " If the file cannot support positioning requests, or if the stream was opened with this kind of mode, the character is written to the end of output stream.", "category": "FUNCTIONS", "answer": "append", "suggestions":[]}
    ,
    {
"id": "983", "alternativeSpellings": [], "suggestions": [], "answer": "fputs", "category": "FUNCTIONS", "question":" This function writes the string pointed to by its argument to the stream pointed to by its stream argument."}
    ,
    {
"id": "984", "alternativeSpellings": [], "answer": "getc", "suggestions": [], "category": "FUNCTIONS", "question":" This function is equivalent to fgetc, except that if it is implemented as a macro, it may evaluate stream more than once, so the argument should never be an expression with side effects."}
    ,
    {
"id": "985", "alternativeSpellings": [], "suggestions": [], "answer": "getchar", "category": "FUNCTIONS", "question":" This function is equivalent to getc with the argument stdin."}
    ,
    {
"question": " This function returns the next character from the input stream pointed to by stdin.", "category": "FUNCTIONS", "suggestions": [], "answer": "getchar", "alternativeSpellings": [], "id":"986"}
    ,
    {
"id": "987", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function is equivalent to fputc, except that if it is implemented as a macro, it may evaluate stream more than once, so that argument should never be an expression with side effects.", "suggestions": [], "answer":"putc"}
    ,
    {
"id": "988", "alternativeSpellings": [], "answer": "putchar", "suggestions": [], "category": "FUNCTIONS", "question":" This function is equivalent to putc with the second argument stdout."}
    ,
    {
"suggestions": [], "answer": "puts", "question": " This function writes the string pointed to by its argument to the stream pointed to by stdout, and appends a new-line character to the output.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"989"}
    ,
    {
"id": "990", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function pushes the character specified by its argument (converted to an unsigned char) back onto the input stream pointed to by its stream argument.", "suggestions": [], "answer":"ungetc"}
    ,
    {
"alternativeSpellings": [], "id": "991", "question": " If the ungetc function is called too many times on the same stream without an intervening read or file positioning operation on that stream, the operation may do this.", "category": "FUNCTIONS", "suggestions": [], "answer":"fail"}
    ,
    {
"answer": "fread", "suggestions": [], "category": "FUNCTIONS", "question": " This function reads, into the array pointed to by ptr, up to nmemb elements whose size is specified by size, from the stream pointed to by stream.", "id": "992", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " If a partial element is read by fread, its value is this.", "answer": "indeterminate", "suggestions": [], "id": "993", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function writes, from the array pointed to by ptr, up to nmemb elements whose size is specified by size, to the stream pointed to by stream.", "suggestions": [], "answer": "fwrite", "id": "994", "alternativeSpellings":[]}
    ,
    {
"id": "995", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function stores the current values of the parse state (if any) and file position indicator for the stream pointed to by stream in the object pointed to by pos.", "suggestions": [], "answer":"fgetpos"}
    ,
    {
"id": "996", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If successful, the fgetpos function returns zero; on failure, the fgetpos function returns nonzero and stores an implementation-defined positive value in this object.", "answer": "errno", "suggestions":[]}
    ,
    {
"answer": "fseek", "suggestions": [], "category": "FUNCTIONS", "question": " This function sets the file position indicator for the stream pointed to by its stream argument.", "id": "997", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " For a text stream, offset argument shall be either zero or a value returned by an earlier successful call to the ftell function on a stream associated with the same file and its whence argument shall be this.", "answer": "SEEK_SET", "suggestions": [], "id": "998", "alternativeSpellings":[]}
    ,
    {
"question": " The fseek function returns this value for a request that cannot be satisfied.", "category": "FUNCTIONS", "suggestions": [], "answer": "nonzero", "alternativeSpellings": [], "id":"999"}
    ,
    {
"alternativeSpellings": [], "id": "1000", "suggestions": [], "answer": "fsetpos", "question": " This function sets the mbstate_t object (if any) and file position indicator for the stream pointed to by stream according to the value of the object pointed to by pos.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1001", "question": " The fsetpos function sets the mbstate_t object (if any) and file position indicator for the stream pointed to by stream according to the value of the object pointed to by pos, which shall be a value obtained from an earlier successful call to this function on a stream associated with the same file.", "category": "FUNCTIONS", "suggestions": [], "answer":"fgetpos"}
    ,
    {
"answer": "ftell", "suggestions": [], "question": " This function obtains the current value of the file position indicator for the stream pointed to by stream.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1002"}
    ,
    {
"suggestions": [], "answer": "rewind", "question": " This function sets the file position indicator for the stream pointed to by stream to the beginning of the file.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1003"}
    ,
    {
"question": " This function clears the end-of-file and error indicators for the stream pointed to by stream.", "category": "FUNCTIONS", "answer": "clearerr", "suggestions": [], "alternativeSpellings": [], "id":"1004"}
    ,
    {
"id": "1005", "alternativeSpellings": [], "answer": "feof", "suggestions": [], "category": "FUNCTIONS", "question":" This function tests the end-of-file indicator for the stream pointed to by stream."}
    ,
    {
"alternativeSpellings": [], "id": "1006", "question": " This function tests the error indicator for the stream pointed to by stream.", "category": "FUNCTIONS", "suggestions": [], "answer":"ferror"}
    ,
    {
"alternativeSpellings": [], "id": "1007", "question": " This function maps the error number in the integer expression errno to an error message.", "category": "FUNCTIONS", "answer": "perror", "suggestions":[]}
    ,
    {
"question": " This macro expands to a integer constant expressions that can be used as the argument to the exit function to return unsuccessful termination status to the host environment.", "category": "GENERAL UTILITIES <STDLIB.H>", "suggestions": [], "answer": "EXIT_FAILURE", "alternativeSpellings": [], "id":"1008"}
    ,
    {
"answer": "EXIT_SUCCESS", "suggestions": [], "question": " This macro expands to a integer constant expressions that can be used as the argument to the exit function to return successful termination status to the host environment.", "category": "GENERAL UTILITIES <STDLIB.H>", "alternativeSpellings": [], "id":"1009"}
    ,
    {
"category": "GENERAL UTILITIES <STDLIB.H>", "question": " This macro expands to an integer constant expression that is the maximum value returned by the rand function.", "suggestions": [], "answer": "RAND_MAX", "id": "1010", "alternativeSpellings":[]}
    ,
    {
"question": " This macro expands to a positive integer expression with type size_t that is the maximum number of bytes in a multibyte character for the extended character set specified by the current locale (category LC_CTYPE).", "category": "GENERAL UTILITIES <STDLIB.H>", "suggestions": [], "answer": "MB_CUR_MAX", "alternativeSpellings": [], "id":"1011"}
    ,
    {
"category": "FUNCTIONS", "question": " This function converts the initial portion of the string pointed to by its argument to double representation.", "suggestions": [], "answer": "atof", "id": "1012", "alternativeSpellings":[]}
    ,
    {
"id": "1013", "alternativeSpellings": [], "suggestions": [], "answer": "rand", "category": "FUNCTIONS", "question":" This function computes a sequence of pseudo-random integers in the range 0 to RAND_MAX."}
    ,
    {
"alternativeSpellings": [], "id": "1014", "answer": "32767", "suggestions": [], "question": " The value of the RAND_MAX macro shall be at least this.", "category":"FUNCTIONS"}
    ,
    {
"suggestions": [], "answer": "srand", "question": " This function uses the argument as a seed for a new sequence of pseudo-random numbers to be returned by subsequent calls to rand.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1015"}
    ,
    {
"suggestions": [], "answer": "identical", "question": " If srand is then called with the same seed value, the sequence of pseudo-random numbers shall be this.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1016"}
    ,
    {
"alternativeSpellings": [], "id": "1017", "suggestions": [], "answer": "one", "question": " If rand is called before any calls to srand have been made, the same sequence shall be generated as when srand is first called with this seed value.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1018", "answer": "aligned_alloc", "suggestions": [], "question": " This function allocates space for an object whose alignment is specified by alignment, whose size is specified by size, and whose value is indeterminate.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " This function allocates space for an array of nmemb objects, each of whose size is specified by the size argument.", "suggestions": [], "answer": "calloc", "id": "1019", "alternativeSpellings":[]}
    ,
    {
"id": "1020", "alternativeSpellings": [], "suggestions": [], "answer": "free", "category": "FUNCTIONS", "question":" This function causes the space pointed to by the ptr argument to be deallocated, that is, made available for further allocation."}
    ,
    {
"suggestions": [], "answer": "null pointer", "question": " If the ptr argument of the free function is this, no action occurs.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1021"}
    ,
    {
"id": "1022", "alternativeSpellings": [], "answer": "malloc", "suggestions": [], "category": "FUNCTIONS", "question":" This function allocates space for an object whose size is specified by the size argument and whose value is indeterminate."}
    ,
    {
"id": "1023", "alternativeSpellings": [], "suggestions": [], "answer": "realloc", "category": "FUNCTIONS", "question":" This function deallocates the old object pointed to by the ptr argument and returns a pointer to a new object that has the size specified by the size argument."}
    ,
    {
"id": "1024", "alternativeSpellings": [], "answer": "malloc", "suggestions": [], "category": "FUNCTIONS", "question":" If the ptr argument is a null pointer, the realloc function behaves like this function for the specified size."}
    ,
    {
"alternativeSpellings": [], "id": "1025", "answer": "null pointer", "suggestions": [], "question": " If the ptr argument is this value, the realloc function behaves like the malloc function for the specified size.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " This function causes abnormal program termination to occur.", "suggestions": [], "answer": "abort", "id": "1026", "alternativeSpellings":[]}
    ,
    {
"answer": "unsuccessful", "suggestions": [], "category": "FUNCTIONS", "question": " An implementation-defined form of this kind of termination is returned to the host environment by means of the function call raise(SIGABRT).", "id": "1027", "alternativeSpellings":[]}
    ,
    {
"question": " This function registers the function pointed to by func, to be called without arguments at normal program termination.", "category": "FUNCTIONS", "answer": "atexit", "suggestions": [], "alternativeSpellings": [], "id":"1028"}
    ,
    {
"suggestions": [], "answer": "thirty-two", "category": "FUNCTIONS", "question": " The implementation shall support the atexit registration of at least this many functions.", "id": "1029", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function registers the function pointed to by func, to be called without arguments should quick_exit be called.", "answer": "at_quick_exit", "suggestions": [], "id": "1030", "alternativeSpellings":[]}
    ,
    {
"answer": "exit", "suggestions": [], "question": " This function causes normal program termination to occur.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1031"}
    ,
    {
"answer": "at_quick_exit", "suggestions": [], "question": " No functions registered by this function are called if exit is called.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1032"}
    ,
    {
"id": "1033", "alternativeSpellings": [], "suggestions": [], "answer": "longjmp", "category": "FUNCTIONS", "question":" If, during the call to any function registered by atexit, a call to this function is made that would terminate the call to the registered function, the behavior is undefined."}
    ,
    {
"id": "1034", "alternativeSpellings": [], "suggestions": [], "answer": "EXIT_SUCCESS", "category": "FUNCTIONS", "question":" If the value of the argument to the exit function is this, an implementation-defined form of the status successful termination is returned."}
    ,
    {
"category": "FUNCTIONS", "question": " If the value of the argument to the exit function is this, an implementation-defined form of the status unsuccessful termination is returned.", "suggestions": [], "answer": "EXIT_FAILURE", "id": "1035", "alternativeSpellings":[]}
    ,
    {
"answer": "_Exit", "suggestions": [], "category": "FUNCTIONS", "question": " This function causes normal program termination to occur and control to be returned to the host environment. No functions registered by the atexit function, the at_quick_exit function, or signal handlers registered by the signal function are called.", "id": "1036", "alternativeSpellings":[]}
    ,
    {
"id": "1037", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function searches an environment list, provided by the host environment, for a string that matches the string pointed to by name.", "suggestions": [], "answer":"getenv"}
    ,
    {
"alternativeSpellings": [], "id": "1038", "suggestions": [], "answer": "quick_exit", "question": " This function causes normal program termination to occur. No functions registered by the atexit function or signal handlers registered by the signal function are called.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1039", "suggestions": [], "answer": "undefined", "question": " If a signal is raised while the quick_exit function is executing, the behavior is this.", "category":"FUNCTIONS"}
    ,
    {
"id": "1040", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If the argument of the system function is this, the system function determines whether the host environment has a command processor and returns nonzero if so.", "suggestions": [], "answer":"null pointer"}
    ,
    {
"id": "1041", "alternativeSpellings": [], "answer": "command processor", "suggestions": [], "category": "FUNCTIONS", "question":" If the argument of the system function is a null pointer, the system function determines whether the host environment has this and returns nonzero if so."}
    ,
    {
"id": "1042", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If the argument is not a null pointer, this function passes the string pointed to by its argument to the host environment's command processor to be executed in a manner which the implementation shall document.", "answer": "system", "suggestions":[]}
    ,
    {
"answer": "bsearch", "suggestions": [], "category": "FUNCTIONS", "question": " This function searches an array of nmemb objects, the initial element of which is pointed to by base, for an element that matches the object pointed to by key.", "id": "1043", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function sorts an array of nmemb objects, the initial element of which is pointed to by base. The contents of the array are sorted into ascending order according to a comparison function pointed to by compar, which is called with two arguments that point to the objects being compared.", "suggestions": [], "answer": "qsort", "id": "1044", "alternativeSpellings":[]}
    ,
    {
"id": "1045", "alternativeSpellings": [], "answer": "mblen", "suggestions": [], "category": "FUNCTIONS", "question":" This function determines the number of bytes contained in the multibyte character."}
    ,
    {
"answer": "mbtowc", "suggestions": [], "question": " This function converts a multibyte character into a wide character.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1046"}
    ,
    {
"answer": "wctomb", "suggestions": [], "category": "FUNCTIONS", "question": " This function converts a wide character into a multibyte character.", "id": "1047", "alternativeSpellings":[]}
    ,
    {
"answer": "mbstowcs", "suggestions": [], "question": " This function converts a sequence of multibyte characters that begins in the initial shift state from the array pointed to by its argument into a sequence of corresponding wide characters.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1048"}
    ,
    {
"alternativeSpellings": [], "id": "1049", "question": " This function converts a sequence of wide characters from the array pointed to by its argument into a sequence of corresponding multibyte characters that begins in the initial shift state.", "category": "FUNCTIONS", "answer": "wcstombs", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1050", "question": " This header defines the macro noreturn which expands to _Noreturn.", "category": "MISC", "answer": "stdnoreturn.h", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "_Noreturn", "category": "MISC", "question": " The header <stdnoreturn.h> defines the macro noreturn which expands to this.", "id": "1051", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1052", "question": " This function copies n characters from the object pointed to by s2 into the object pointed to by s1, including any null characters.", "category": "FUNCTIONS", "answer": "memcpy", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "memmove", "category": "FUNCTIONS", "question": " This function copies n characters from the object pointed to by s2 into the object pointed to by s1. Copying takes place as if the n characters from the object pointed to by s2 are first copied into a temporary array of n characters that does not overlap the objects pointed to by s1 and s2.", "id": "1053", "alternativeSpellings":[]}
    ,
    {
"id": "1054", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function copies the string pointed to by s2 (including the terminating null character) into the array pointed to by s1.", "answer": "strcpy", "suggestions":[]}
    ,
    {
"id": "1055", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function copies not more than n characters (characters that follow a null character are not copied) from the array pointed to by s2 to the array pointed to by s1.", "answer": "strncpy", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1056", "suggestions": [], "answer": "strcat", "question": " This function appends a copy of the string pointed to by s2 (including the terminating null character) to the end of the string pointed to by s1.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " This function appends not more than n characters (a null character and characters that follow it are not appended) from the array pointed to by s2 to the end of the string pointed to by s1. A terminating null character is always appended to the result.", "answer": "strncat", "suggestions": [], "id": "1057", "alternativeSpellings":[]}
    ,
    {
"id": "1058", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function compares the first n characters of the object pointed to by s1 to the first n characters of the object pointed to by s2, and does not stop comparing if a null character is encountered.", "answer": "memcmp", "suggestions":[]}
    ,
    {
"id": "1059", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function compares the string pointed to by s1 to the string pointed to by s2.", "suggestions": [], "answer":"strcmp"}
    ,
    {
"suggestions": [], "answer": "strcoll", "question": " This function compares the string pointed to by s1 to the string pointed to by s2, both interpreted as appropriate to the LC_COLLATE category of the current locale.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1060"}
    ,
    {
"question": " The strcoll function compares the string pointed to by s1 to the string pointed to by s2, both interpreted as appropriate to this category of the current locale.", "category": "FUNCTIONS", "answer": "LC_COLLATE", "suggestions": [], "alternativeSpellings": [], "id":"1061"}
    ,
    {
"id": "1062", "alternativeSpellings": [], "suggestions": [], "answer": "strncmp", "category": "FUNCTIONS", "question":" This function compares not more than n characters (characters that follow a null character are not compared) from the array pointed to by s1 to the array pointed to by s2."}
    ,
    {
"suggestions": [], "answer": "strxfrm", "question": " This function transforms the string pointed to by s2 and places the resulting string into the array pointed to by s1.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1063"}
    ,
    {
"category": "FUNCTIONS", "question": " This function locates the first occurrence of c (converted to an unsigned char) in the initial n characters (each interpreted as unsigned char) of the object pointed to by s, and does not stop searching if a null character is encountered.", "answer": "memchr", "suggestions": [], "id": "1064", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1065", "answer": "strchr", "suggestions": [], "question": " This function locates the first occurrence of c (converted to a char) in the string pointed to by s.", "category":"FUNCTIONS"}
    ,
    {
"id": "1066", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function computes the length of the maximum initial segment of the string pointed to by s1 which consists entirely of characters not from the string pointed to by s2.", "suggestions": [], "answer":"strcspn"}
    ,
    {
"id": "1067", "alternativeSpellings": [], "answer": "strpbrk", "suggestions": [], "category": "FUNCTIONS", "question":" This function locates the first occurrence in the string pointed to by s1 of any character from the string pointed to by s2."}
    ,
    {
"alternativeSpellings": [], "id": "1068", "answer": "strrchr", "suggestions": [], "question": " This function locates the last occurrence of c (converted to a char) in the string pointed to by s.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1069", "question": " This function computes the length of the maximum initial segment of the string pointed to by s1 which consists entirely of characters from the string pointed to by s2.", "category": "FUNCTIONS", "answer": "strspn", "suggestions":[]}
    ,
    {
"question": " This function locates the first occurrence in the string pointed to by s1 of the sequence of characters (excluding the terminating null character) in the string pointed to by s2.", "category": "FUNCTIONS", "answer": "strstr", "suggestions": [], "alternativeSpellings": [], "id":"1070"}
    ,
    {
"alternativeSpellings": [], "id": "1071", "answer": "strtok", "suggestions": [], "question": " A sequence of calls to this function breaks the string pointed to by s1 into a sequence of tokens, each of which is delimited by a character from the string pointed to by s2.", "category":"FUNCTIONS"}
    ,
    {
"id": "1072", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " The strtok function is not required to avoid data races with other calls to the strtok function. This function can be used instead to avoid data races.", "answer": "strtok_r", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1073", "suggestions": [], "answer": "memset", "question": " This function copies the value of c (converted to an unsigned char) into each of the first n characters of the object pointed to by s.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " This function maps the number in errnum to a message string.", "suggestions": [], "answer": "strerror", "id": "1074", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " Typically, the values for errnum come from this object, but strerror shall map any value of type int to a message.", "suggestions": [], "answer": "errno", "id": "1075", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1076", "question": " The strerror function is not required to avoid data races with other calls to the strerror function. This function can be used instead to avoid data races.", "category": "FUNCTIONS", "answer": "strerror_s", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1077", "answer": "strlen", "suggestions": [], "question": " This function computes the length of the string pointed to by its argument.", "category":"FUNCTIONS"}
    ,
    {
"answer": "TSS_DTOR_ITERATIONS", "suggestions": [], "question": " This macro expands to an integer constant expression representing the maximum number of times that destructors will be called when a thread terminates.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"1078"}
    ,
    {
"id": "1079", "alternativeSpellings": [], "suggestions": [], "answer": "cnd_t", "category": "INTRODUCTION", "question":" This type is a complete object type that holds an identifier for a condition variable."}
    ,
    {
"category": "INTRODUCTION", "question": " This type is a complete object type that holds an identifier for a thread.", "suggestions": [], "answer": "thrd_t", "id": "1080", "alternativeSpellings":[]}
    ,
    {
"question": " This type is a complete object type that holds an identifier for a thread-specific storage pointer.", "category": "INTRODUCTION", "answer": "tss_t", "suggestions": [], "alternativeSpellings": [], "id":"1081"}
    ,
    {
"answer": "mtx_t", "suggestions": [], "category": "INTRODUCTION", "question": " This type is a complete object type that holds an identifier for a mutex.", "id": "1082", "alternativeSpellings":[]}
    ,
    {
"id": "1083", "alternativeSpellings": [], "category": "INTRODUCTION", "question": " This type is the function pointer type void (*)(void*), used for a destructor for a thread-specific storage pointer.", "suggestions": ["TSS_DTOR"], "answer":"TSS_DTOR_T"}
    ,
    {
"category": "INTRODUCTION", "question": " This type is the function pointer type int (*)(void*) that is passed to thrd_create to create a new thread.", "answer": "thrd_start_t", "suggestions": [], "id": "1084", "alternativeSpellings":[]}
    ,
    {
"category": "INTRODUCTION", "question": " This type is a complete object type that holds a flag for use by call_once.", "suggestions": [], "answer": "once_flag", "id": "1085", "alternativeSpellings":[]}
    ,
    {
"id": "1086", "alternativeSpellings": [], "category": "INTRODUCTION", "question": " This enumeration constant is passed to mtx_init to create a mutex object that supports neither timeout nor test and return.", "answer": "mtx_plain", "suggestions":[]}
    ,
    {
"answer": "mtx_recursive", "suggestions": [], "question": " This enumeration constant is passed to mtx_init to create a mutex object that supports recursive locking.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"1087"}
    ,
    {
"alternativeSpellings": [], "id": "1088", "answer": "mtx_timed", "suggestions": [], "question": " This enumeration constant is passed to mtx_init to create a mutex object that supports timeout.", "category":"INTRODUCTION"}
    ,
    {
"id": "1089", "alternativeSpellings": [], "category": "INTRODUCTION", "question": " This enumeration constant is returned by a timed wait threads.h function to indicate that the time specified in the call was reached without acquiring the requested resource.", "answer": "thrd_timedout", "suggestions":[]}
    ,
    {
"question": " This enumeration constant is returned by a threads.h function to indicate that the requested operation succeeded.", "category": "INTRODUCTION", "answer": "thrd_success", "suggestions": [], "alternativeSpellings": [], "id":"1090"}
    ,
    {
"alternativeSpellings": [], "id": "1091", "answer": "thrd_busy", "suggestions": [], "question": " This enumeration constant is returned by a threads.h function to indicate that the requested operation failed because a resource requested by a test and return function is already in use.", "category":"INTRODUCTION"}
    ,
    {
"id": "1092", "alternativeSpellings": [], "category": "INTRODUCTION", "question": " This enumeration constant is returned by a threads.h function to indicate that the requested operation failed.", "suggestions": [], "answer":"thrd_error"}
    ,
    {
"category": "INTRODUCTION", "question": " This enumeration constant is returned by a threads.h function to indicate that the requested operation failed because it was unable to allocate memory.", "answer": "thrd_nomem", "suggestions": [], "id": "1093", "alternativeSpellings":[]}
    ,
    {
"question": " This function uses the once_flag pointed to by flag to ensure that func is called exactly once.", "category": "FUNCTIONS", "answer": "call_once", "suggestions": [], "alternativeSpellings": [], "id":"1094"}
    ,
    {
"id": "1095", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function unblocks all of the threads that are blocked on the condition variable pointed to by cond at the time of the call.", "suggestions": [], "answer":"cnd_broadcast"}
    ,
    {
"id": "1096", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " The cnd_broadcast function returns this value on success.", "answer": "thrd_success", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " The cnd_broadcast function returns this value if the request could not be honored.", "answer": "thrd_error", "suggestions": [], "id": "1097", "alternativeSpellings":[]}
    ,
    {
"answer": "cnd_destroy", "suggestions": [], "category": "FUNCTIONS", "question": " This function releases all resources used by the condition variable pointed to by cond.", "id": "1098", "alternativeSpellings":[]}
    ,
    {
"id": "1099", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function creates a condition variable.", "answer": "cnd_init", "suggestions":[]}
    ,
    {
"id": "1100", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function unblocks one of the threads that are blocked on the condition variable pointed to by cond at the time of the call.", "suggestions": [], "answer":"cnd_signal"}
    ,
    {
"suggestions": [], "answer": "cnd_timedwait", "question": " This function atomically unlocks the mutex pointed to by mtx and endeavors to block until the condition variable pointed to by cond is signaled by a call to cnd_signal or to cnd_broadcast, or until after the TIME_UTC-based calendar time pointed to by its ts argument.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1101"}
    ,
    {
"alternativeSpellings": [], "id": "1102", "question": " This function atomically unlocks the mutex pointed to by mtx and endeavors to block until the condition variable pointed to by cond is signaled by a call to cnd_signal or to cnd_broadcast.", "category": "FUNCTIONS", "suggestions": [], "answer":"cnd_wait"}
    ,
    {
"question": " This function releases any resources used by the mutex pointed to by mtx.", "category": "FUNCTIONS", "suggestions": [], "answer": "mtx_destroy", "alternativeSpellings": [], "id":"1103"}
    ,
    {
"id": "1104", "alternativeSpellings": [], "suggestions": [], "answer": "mtx_init", "category": "FUNCTIONS", "question":" This function creates a mutex object with properties indicated by type, which must have one of the six values: mtx_plain for a simple non-recursive mutex, mtx_timed for a non-recursive mutex that supports timeout, mtx_plain \\| mtx_recursive for a simple recursive mutex, or mtx_timed \\| mtx_recursive for a recursive mutex that supports timeout."}
    ,
    {
"id": "1105", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function blocks until it locks the mutex pointed to by mtx.", "answer": "mtx_lock", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function endeavors to block until it locks the mutex pointed to by mtx or until after the TIME_UTC-based calendar time pointed to by its ts argument.", "answer": "mtx_timedlock", "suggestions": [], "id": "1106", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1107", "question": " This function endeavors to lock the mutex pointed to by mtx.", "category": "FUNCTIONS", "suggestions": [], "answer":"mtx_trylock"}
    ,
    {
"question": " This function unlocks the mutex pointed to by mtx.", "category": "FUNCTIONS", "answer": "mtx_unlock", "suggestions": [], "alternativeSpellings": [], "id":"1108"}
    ,
    {
"question": " This function creates a new thread executing func(arg).", "category": "FUNCTIONS", "suggestions": [], "answer": "thrd_create", "alternativeSpellings": [], "id":"1109"}
    ,
    {
"id": "1110", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function identifies the thread that called it.", "suggestions": [], "answer":"thrd_current"}
    ,
    {
"id": "1111", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function tells the operating system to dispose of any resources allocated to the thread identified by thr when that thread terminates.", "answer": "thrd_detach", "suggestions":[]}
    ,
    {
"id": "1112", "alternativeSpellings": [], "answer": "thrd_equal", "suggestions": [], "category": "FUNCTIONS", "question":" This function will determine whether the thread identified by thr0 refers to the thread identified by thr1."}
    ,
    {
"id": "1113", "alternativeSpellings": [], "suggestions": [], "answer": "thrd_exit", "category": "FUNCTIONS", "question":" This function terminates execution of the calling thread and sets its result code to res."}
    ,
    {
"answer": "thrd_join", "suggestions": [], "category": "FUNCTIONS", "question": " This function joins the thread identified by thr with the current thread by blocking until the other thread has terminated.", "id": "1114", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "thrd_sleep", "category": "FUNCTIONS", "question": " This function suspends execution of the calling thread until either the interval specified by duration has elapsed or a signal which is not being ignored is received.", "id": "1115", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1116", "question": " This function endeavors to permit other threads to run, even if the current thread would ordinarily continue to run.", "category": "FUNCTIONS", "suggestions": [], "answer":"thrd_yield"}
    ,
    {
"question": " This function creates a thread-specific storage pointer with destructor dtor, which may be null.", "category": "FUNCTIONS", "suggestions": [], "answer": "tss_create", "alternativeSpellings": [], "id":"1117"}
    ,
    {
"suggestions": [], "answer": "tss_delete", "category": "FUNCTIONS", "question": " This function releases any resources used by the thread-specific storage identified by key.", "id": "1118", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "tss_get", "category": "FUNCTIONS", "question": " This function returns the value for the current thread held in the thread-specific storage identified by key.", "id": "1119", "alternativeSpellings":[]}
    ,
    {
"id": "1120", "alternativeSpellings": [], "suggestions": [], "answer": "tss_set", "category": "FUNCTIONS", "question":" This function sets the value for the current thread held in the thread-specific storage identified by key to val."}
    ,
    {
"category": "COMPONENTS OF TIME", "question": " This structure holds an interval specified in seconds and nanoseconds (which may represent a calendar time based on a particular epoch).", "answer": "timespec", "suggestions": [], "id": "1121", "alternativeSpellings":[]}
    ,
    {
"question": " This macro expands to an expression with type clock_t that is the number per second of the value returned by the clock function.", "category": "COMPONENTS OF TIME", "suggestions": [], "answer": "CLOCKS_PER_SEC", "alternativeSpellings": [], "id":"1122"}
    ,
    {
"alternativeSpellings": [], "id": "1123", "question": " This macro expands to an integer constant greater than 0 that designates the UTC time base.", "category": "COMPONENTS OF TIME", "answer": "TIME_UTC", "suggestions":[]}
    ,
    {
"id": "1124", "alternativeSpellings": [], "answer": "timespec", "suggestions": [], "category": "COMPONENTS OF TIME", "question":" This structure shall contain at least the following members, in any order: time_t tv_sec; long tv_nsec."}
    ,
    {
"id": "1125", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function determines the processor time used.", "suggestions": [], "answer":"clock"}
    ,
    {
"question": " This function returns the implementation's best approximation to the processor time used by the program since the beginning of an implementation-defined era related only to the program invocation.", "category": "FUNCTIONS", "suggestions": [], "answer": "clock", "alternativeSpellings": [], "id":"1126"}
    ,
    {
"category": "FUNCTIONS", "question": " This function computes the difference between two calendar times: time1 -time0.", "answer": "difftime", "suggestions": [], "id": "1127", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "difftime", "category": "FUNCTIONS", "question": " This function returns the difference of time expressed in seconds as a double.", "id": "1128", "alternativeSpellings":[]}
    ,
    {
"id": "1129", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function converts the broken-down time, expressed as local time, in the structure pointed to by timeptr into a calendar time value with the same encoding as that of the values returned by the time function.", "suggestions": [], "answer":"mktime"}
    ,
    {
"alternativeSpellings": [], "id": "1130", "question": " This value causes the mktime function to attempt to determine whether Daylight Saving Time is in effect for the specified time.", "category": "FUNCTIONS", "suggestions": [], "answer":"negative"}
    ,
    {
"id": "1131", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " The mktime function returns the specified calendar time encoded as a value of this type.", "suggestions": [], "answer":"time_t"}
    ,
    {
"alternativeSpellings": [], "id": "1132", "suggestions": [], "answer": "time", "question": " This function determines the current calendar time.", "category":"FUNCTIONS"}
    ,
    {
"id": "1133", "alternativeSpellings": [], "suggestions": [], "answer": "time", "category": "FUNCTIONS", "question":" This function returns the implementation's best approximation to the current calendar time."}
    ,
    {
"category": "FUNCTIONS", "question": " This function sets the interval pointed to by ts to hold the current calendar time based on the specified time base.", "suggestions": [], "answer": "timespec_get", "id": "1134", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "asctime", "category": "FUNCTIONS", "question": " This function converts the broken-down time in the structure pointed to by timeptr into a string in the form Sun Sep 16 01:03:52 1973\\n\\0.", "id": "1135", "alternativeSpellings":[]}
    ,
    {
"question": " This function converts the calendar time pointed to by timer to local time in the form of a string. It is equivalent to asctime(localtime(timer)).", "category": "FUNCTIONS", "suggestions": [], "answer": "ctime", "alternativeSpellings": [], "id":"1136"}
    ,
    {
"question": " This function converts the calendar time pointed to by timer into a broken-down time, expressed as UTC.", "category": "FUNCTIONS", "answer": "gmtime", "suggestions": [], "alternativeSpellings": [], "id":"1137"}
    ,
    {
"id": "1138", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function converts the calendar time pointed to by timer into a broken-down time, expressed as local time.", "answer": "localtime", "suggestions":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function formats the broken-down time tm according to the format specification format and places the result in the character array s of size max.", "answer": "strftime", "suggestions": [], "id": "1139", "alternativeSpellings":[]}
    ,
    {
"question": " This type is an unsigned integer type used for 16-bit Unicode characters.", "category": "UNICODE UTILITIES <UCHAR.H>", "suggestions": [], "answer": "char16_t", "alternativeSpellings": [], "id":"1140"}
    ,
    {
"suggestions": [], "answer": "char32_t", "question": " This type is an unsigned integer type used for 32-bit Unicode characters.", "category": "UNICODE UTILITIES <UCHAR.H>", "alternativeSpellings": [], "id":"1141"}
    ,
    {
"answer": "mbstate_t", "suggestions": [], "question": " This type is a complete object type other than an array type that can hold the conversion state information necessary to convert between sequences of multibyte characters and wide characters.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"1142"}
    ,
    {
"question": " This type is an integer type unchanged by default argument promotions that can hold any value corresponding to members of the extended character set, as well as at least one value that does not correspond to any member of the extended character set.", "category": "INTRODUCTION", "answer": "wint_t", "suggestions": [], "alternativeSpellings": [], "id":"1143"}
    ,
    {
"category": "INTRODUCTION", "question": " This type is a struct type that holds the components of a calendar time, called the broken-down time.", "answer": "struct tm", "suggestions": [], "id": "1144", "alternativeSpellings":[]}
    ,
    {
"id": "1145", "alternativeSpellings": [], "suggestions": [], "answer": "WEOF", "category": "INTRODUCTION", "question":" This macro expands to a constant expression of type wint_t whose value does not correspond to any member of the extended character set. It is accepted (and returned) by several wide string functions to indicate end-of-file, that is, no more input from a stream."}
    ,
    {
"category": "FUNCTIONS", "question": " This function writes output to the stream pointed to by stream, under control of the wide string pointed to by format that specifies how subsequent arguments are converted for output.", "answer": "fwprintf", "suggestions": [], "id": "1146", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function reads input from the stream pointed to by stream, under control of the wide string pointed to by format that specifies the admissible input sequences and how they are to be converted for assignment, using subsequent arguments as pointers to the objects to receive the converted input.", "answer": "fwscanf", "suggestions": [], "id": "1147", "alternativeSpellings":[]}
    ,
    {
"id": "1148", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function is equivalent to fwprintf, except that the argument s specifies an array of wide characters into which the generated output is to be written, rather than written to a stream.", "suggestions": [], "answer":"swprintf"}
    ,
    {
"answer": "swscanf", "suggestions": [], "question": " This function is equivalent to fwscanf, except that the argument s specifies a wide string from which the input is to be obtained, rather than from a stream.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1149"}
    ,
    {
"answer": "vfwprintf", "suggestions": [], "category": "FUNCTIONS", "question": " This function is equivalent to fwprintf, with a variable argument list.", "id": "1150", "alternativeSpellings":[]}
    ,
    {
"id": "1151", "alternativeSpellings": [], "suggestions": [], "answer": "vfwscanf", "category": "FUNCTIONS", "question":" This function is equivalent to fwscanf, with a variable argument list."}
    ,
    {
"category": "FUNCTIONS", "question": " This function is equivalent to swprintf, with a variable argument list.", "answer": "vswprintf", "suggestions": [], "id": "1152", "alternativeSpellings":[]}
    ,
    {
"question": " This function is equivalent to swscanf, with a variable argument list.", "category": "FUNCTIONS", "answer": "vswscanf", "suggestions": [], "alternativeSpellings": [], "id":"1153"}
    ,
    {
"category": "FUNCTIONS", "question": " This function is equivalent to wprintf, with a variable argument list.", "answer": "vwprintf", "suggestions": [], "id": "1154", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function is equivalent to wscanf, with a variable argument list.", "suggestions": [], "answer": "vwscanf", "id": "1155", "alternativeSpellings":[]}
    ,
    {
"id": "1156", "alternativeSpellings": [], "answer": "wprintf", "suggestions": [], "category": "FUNCTIONS", "question":" This function is equivalent to fwprintf with the argument stdout interposed before its arguments."}
    ,
    {
"suggestions": [], "answer": "wscanf", "question": " This function is equivalent to fwscanf with the argument stdin interposed before its arguments.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1157"}
    ,
    {
"suggestions": [], "answer": "fgetws", "category": "FUNCTIONS", "question": " This function reads at most one less than the number of wide characters specified by n from the stream pointed to by stream into the array pointed to by s.", "id": "1158", "alternativeSpellings":[]}
    ,
    {
"question": " This function writes the wide character specified by c to the output stream pointed to by stream, at the position indicated by the associated file position indicator for the stream (if defined), and advances the indicator appropriately.", "category": "FUNCTIONS", "answer": "fputwc", "suggestions": [], "alternativeSpellings": [], "id":"1159"}
    ,
    {
"category": "FUNCTIONS", "question": " This function writes the wide string pointed to by s to the stream pointed to by stream.", "answer": "fputws", "suggestions": [], "id": "1160", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1161", "question": " This function determines and may optionally set the orientation of the stream pointed to by stream.", "category": "FUNCTIONS", "answer": "fwide", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1162", "question": " This function is equivalent to fgetwc, except that if it is implemented as a macro, it may evaluate stream more than once, so the argument should never be an expression with side effects.", "category": "FUNCTIONS", "suggestions": [], "answer":"getwc"}
    ,
    {
"id": "1163", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function returns the next wide character from the input stream pointed to by stream, or WEOF.", "suggestions": [], "answer":"getwc"}
    ,
    {
"alternativeSpellings": [], "id": "1164", "question": " This function is equivalent to getwc with the argument stdin.", "category": "FUNCTIONS", "answer": "getwchar", "suggestions":[]}
    ,
    {
"answer": "getwchar", "suggestions": [], "category": "FUNCTIONS", "question": " This function returns the next wide character from the input stream pointed to by stdin, or WEOF.", "id": "1165", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function is equivalent to fputwc, except that if it is implemented as a macro, it may evaluate stream more than once, so that argument should never be an expression with side effects.", "suggestions": [], "answer": "putwc", "id": "1166", "alternativeSpellings":[]}
    ,
    {
"id": "1167", "alternativeSpellings": [], "answer": "putwchar", "suggestions": [], "category": "FUNCTIONS", "question":" This function is equivalent to putwc with the second argument stdout."}
    ,
    {
"suggestions": [], "answer": "ungetwc", "category": "FUNCTIONS", "question": " This function pushes the wide character specified by c back onto the input stream pointed to by stream.", "id": "1168", "alternativeSpellings":[]}
    ,
    {
"id": "1169", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " If the ungetwc function is called too many times on the same stream without an intervening read or file positioning operation on that stream, the operation may do this.", "answer": "fail", "suggestions":[]}
    ,
    {
"question": " This function copies the wide string pointed to by s2 (including the terminating null wide character) into the array pointed to by s1.", "category": "FUNCTIONS", "answer": "wcscpy", "suggestions": [], "alternativeSpellings": [], "id":"1170"}
    ,
    {
"category": "FUNCTIONS", "question": " This function copies not more than n wide characters (those that follow a null wide character are not copied) from the array pointed to by s2 to the array pointed to by s1.", "answer": "wcsncpy", "suggestions": [], "id": "1171", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "wmemcpy", "category": "FUNCTIONS", "question": " This function copies n wide characters from the object pointed to by s2 to the object pointed to by s1 including any null wide characters.", "id": "1172", "alternativeSpellings":[]}
    ,
    {
"id": "1173", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function appends a copy of the wide string pointed to by s2 (including the terminating null wide character) to the end of the wide string pointed to by s1.", "answer": "wcscat", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "wcsncat", "category": "FUNCTIONS", "question": " This function appends not more than n wide characters (a null wide character and those that follow it are not appended) from the array pointed to by s2 to the end of the wide string pointed to by s1.", "id": "1174", "alternativeSpellings":[]}
    ,
    {
"id": "1175", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function compares the wide string pointed to by s1 to the wide string pointed to by s2.", "answer": "wcscmp", "suggestions":[]}
    ,
    {
"id": "1176", "alternativeSpellings": [], "suggestions": [], "answer": "wcscoll", "category": "FUNCTIONS", "question":" This function compares the wide string pointed to by s1 to the wide string pointed to by s2, both interpreted as appropriate to the LC_COLLATE category of the current locale."}
    ,
    {
"question": " This function compares not more than n wide characters (those that follow a null wide character are not compared) from the array pointed to by s1 to the array pointed to by s2.", "category": "FUNCTIONS", "answer": "wcsncmp", "suggestions": [], "alternativeSpellings": [], "id":"1177"}
    ,
    {
"suggestions": [], "answer": "wcsxfrm", "category": "FUNCTIONS", "question": " This function transforms the wide string pointed to by s2 and places the resulting wide string into the array pointed to by s1.", "id": "1178", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "wmemcmp", "category": "FUNCTIONS", "question": " This function compares the first n wide characters of the object pointed to by s1 to the first n wide characters of the object pointed to by s2, including any null wide characters.", "id": "1179", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1180", "question": " This function locates the first occurrence of c in the wide string pointed to by s.", "category": "FUNCTIONS", "suggestions": [], "answer":"wcschr"}
    ,
    {
"question": " This function computes the length of the maximum initial segment of the wide string pointed to by s1 which consists entirely of wide characters not from the wide string pointed to by s2.", "category": "FUNCTIONS", "suggestions": [], "answer": "wcscspn", "alternativeSpellings": [], "id":"1181"}
    ,
    {
"id": "1182", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function locates the first occurrence in the wide string pointed to by s1 of any wide character from the wide string pointed to by s2.", "suggestions": [], "answer":"wcspbrk"}
    ,
    {
"question": " This function locates the last occurrence of c in the wide string pointed to by s.", "category": "FUNCTIONS", "answer": "wcsrchr", "suggestions": [], "alternativeSpellings": [], "id":"1183"}
    ,
    {
"category": "FUNCTIONS", "question": " This function computes the length of the maximum initial segment of the wide string pointed to by s1 which consists entirely of wide characters from the wide string pointed to by s2.", "suggestions": [], "answer": "wcsspn", "id": "1184", "alternativeSpellings":[]}
    ,
    {
"answer": "wcsstr", "suggestions": [], "question": " This function locates the first occurrence in the wide string pointed to by s1 of the sequence of wide characters (excluding the terminating null wide character) in the wide string pointed to by s2.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1185"}
    ,
    {
"question": " A sequence of calls to this function breaks the wide string pointed to by s1 into a sequence of tokens, each of which is delimited by a wide character from the wide string pointed to by s2.", "category": "FUNCTIONS", "answer": "wcstok", "suggestions": [], "alternativeSpellings": [], "id":"1186"}
    ,
    {
"id": "1187", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function locates the first occurrence of c in the initial n wide characters of the object pointed to by s, including any null wide characters.", "suggestions": [], "answer":"wmemchr"}
    ,
    {
"alternativeSpellings": [], "id": "1188", "answer": "wcslen", "suggestions": [], "question": " This function computes the length of the wide string pointed to by s.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1189", "answer": "wmemset", "suggestions": [], "question": " This function copies the value of c into each of the first n wide characters of the object pointed to by s, including any null wide characters.", "category":"FUNCTIONS"}
    ,
    {
"id": "1190", "alternativeSpellings": [], "suggestions": [], "answer": "wcsftime", "category": "FUNCTIONS", "question":" This function is equivalent to the strftime function, except that the argument s points to the initial element of an array of wide characters into which the generated output is to be placed."}
    ,
    {
"category": "FUNCTIONS", "question": " This function determines whether c constitutes a valid single-byte character in the initial shift state.", "suggestions": [], "answer": "btowc", "id": "1191", "alternativeSpellings":[]}
    ,
    {
"category": "FUNCTIONS", "question": " This function determines whether c corresponds to a member of the extended character set whose multibyte character representation is a single byte when in the initial shift state.", "answer": "wctob", "suggestions": [], "id": "1192", "alternativeSpellings":[]}
    ,
    {
"answer": "mbsinit", "suggestions": [], "question": " If the argument is not a null pointer, this function determines whether the referenced mbstate_t object describes an initial conversion state.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1193"}
    ,
    {
"alternativeSpellings": [], "id": "1194", "suggestions": [], "answer": "mbrlen", "question": " This function is equivalent to the call: mbrtowc(NULL, s, n, ps != NULL ? ps : &internal) where internal is the mbstate_t object for the mbrlen function, except that the expression designated by ps is evaluated only once.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1195", "answer": "mbrtowc", "suggestions": [], "question": " This function inspects at most n bytes of the multibyte string starting at s, extracts the next complete multibyte character, converts it to a wide character, stores it at *pwc and updates the shift state *ps.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1196", "suggestions": [], "answer": "wcrtomb", "question": " This function converts the wide character wc to its multibyte representation (including any shift sequences).", "category":"FUNCTIONS"}
    ,
    {
"id": "1197", "alternativeSpellings": [], "suggestions": [], "answer": "mbsrtowcs", "category": "FUNCTIONS", "question":" This function converts a sequence of multibyte characters that begins in the conversion state described by the object pointed to by ps, from the array indirectly pointed to by src into a sequence of corresponding wide characters."}
    ,
    {
"id": "1198", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function converts a sequence of wide characters from the array indirectly pointed to by src into a sequence of corresponding multibyte characters that begins in the conversion state described by the object pointed to by ps.", "suggestions": [], "answer":"wcsrtombs"}
    ,
    {
"alternativeSpellings": [], "id": "1199", "suggestions": [], "answer": "wctrans_t", "question": " This type is a scalar type that can hold values which represent locale-specific character mappings.", "category":"INTRODUCTION"}
    ,
    {
"answer": "wctype_t", "suggestions": [], "question": " This type is a scalar type that can hold values which represent locale-specific character classifications.", "category": "INTRODUCTION", "alternativeSpellings": [], "id":"1200"}
    ,
    {
"question": " This function tests for any wide character for which iswalpha or iswdigit is true.", "category": "FUNCTIONS", "suggestions": [], "answer": "iswalnum", "alternativeSpellings": [], "id":"1201"}
    ,
    {
"id": "1202", "alternativeSpellings": [], "suggestions": [], "answer": "iswalpha", "category": "FUNCTIONS", "question":" This function tests for any wide character for which iswupper or iswlower is true, or any wide character that is one of a locale-specific set of alphabetic wide characters for which none of iswcntrl, iswdigit, iswpunct, or iswspace is true."}
    ,
    {
"alternativeSpellings": [], "id": "1203", "question": " This function tests for any wide character that is a standard blank wide character or is one of a locale-specific set of wide characters for which iswspace is true and that is used to separate words within a line of text.", "category": "FUNCTIONS", "answer": "iswblank", "suggestions":[]}
    ,
    {
"id": "1204", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function tests for any control wide character.", "suggestions": [], "answer":"iswcntrl"}
    ,
    {
"alternativeSpellings": [], "id": "1205", "question": " This function tests for any wide character that corresponds to a decimal-digit character.", "category": "FUNCTIONS", "suggestions": [], "answer":"iswdigit"}
    ,
    {
"question": " This function tests for any wide character for which iswprint is true and iswspace is false.", "category": "FUNCTIONS", "answer": "iswgraph", "suggestions": [], "alternativeSpellings": [], "id":"1206"}
    ,
    {
"id": "1207", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function tests for any wide character that corresponds to a lowercase letter or is one of a locale-specific set of wide characters for which none of iswcntrl, iswdigit, iswpunct, or iswspace is true.", "answer": "iswlower", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1208", "question": " This function tests for any printing wide character.", "category": "FUNCTIONS", "answer": "iswprint", "suggestions":[]}
    ,
    {
"question": " This function tests for any printing wide character that is one of a locale-specific set of punctuation wide characters for which neither iswspace nor iswalnum is true.", "category": "FUNCTIONS", "suggestions": [], "answer": "iswpunct", "alternativeSpellings": [], "id":"1209"}
    ,
    {
"answer": "iswspace", "suggestions": [], "category": "FUNCTIONS", "question": " This function tests for any wide character that corresponds to a locale-specific set of white-space wide characters for which none of iswalnum, iswgraph, or iswpunct is true.", "id": "1210", "alternativeSpellings":[]}
    ,
    {
"question": " This function tests for any wide character that corresponds to an uppercase letter or is one of a locale-specific set of wide characters for which none of iswcntrl, iswdigit, iswpunct, or iswspace is true.", "category": "FUNCTIONS", "answer": "iswupper", "suggestions": [], "alternativeSpellings": [], "id":"1211"}
    ,
    {
"question": " This function tests for any wide character that corresponds to a hexadecimal-digit character.", "category": "FUNCTIONS", "answer": "iswxdigit", "suggestions": [], "alternativeSpellings": [], "id":"1212"}
    ,
    {
"suggestions": [], "answer": "iswctype", "category": "FUNCTIONS", "question": " This function determines whether the wide character wc has the property described by desc.", "id": "1213", "alternativeSpellings":[]}
    ,
    {
"question": " This function constructs a value with type wctype_t that describes a class of wide characters identified by the string argument property.", "category": "FUNCTIONS", "answer": "wctype", "suggestions": [], "alternativeSpellings": [], "id":"1214"}
    ,
    {
"alternativeSpellings": [], "id": "1215", "suggestions": [], "answer": "towlower", "question": " This function converts a wide uppercase letter to a corresponding wide lowercase letter.", "category":"FUNCTIONS"}
    ,
    {
"id": "1216", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " This function converts a wide lowercase letter to a corresponding wide uppercase letter.", "answer": "towupper", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1217", "question": " This function maps the wide character wc using the mapping described by desc.", "category": "FUNCTIONS", "answer": "towctrans", "suggestions":[]}
    ,
    {
"id": "1218", "alternativeSpellings": [], "suggestions": [], "answer": "wctrans", "category": "FUNCTIONS", "question":" This function constructs a value with type wctrans_t that describes a mapping between wide characters identified by the string argument property."}
    ,
    {
"alternativeSpellings": [], "id": "1219", "suggestions": [], "answer": "DECIMAL_DIG", "question": " If the minimum-width IEC 60559 extended format (64 bits of precision) is supported, this macro shall be at least 21.", "category":"BINARY-DECIMAL CONVERSION"}
    ,
    {
"alternativeSpellings": [], "id": "1220", "suggestions": [], "answer": "SEVENTEEN", "question": " If IEC 60559 double (53 bits of precision) is the widest IEC 60559 format supported, then DECIMAL_DIG shall be at least this value.", "category":"BINARY-DECIMAL CONVERSION"}
    ,
    {
"id": "1221", "alternativeSpellings": [], "category": "BINARY-DECIMAL CONVERSION", "question": " If the minimum-width IEC 60559 extended format (64 bits of precision) is supported, this macro shall be at least 21.", "suggestions": [], "answer":"DECIMAL_DIG"}
    ,
    {
"id": "1222", "alternativeSpellings": [], "answer": "TWENTY ONE", "suggestions": ["FIFTY THREE", "DECIMAL_DIG_MIN", "NINETEEN"], "category": "BINARY-DECIMAL CONVERSION", "question":" If IEC 60559 double (53 bits of precision) is the widest IEC 60559 format supported, then DECIMAL_DIG shall be at least this value."}
    ,
    {
"answer": "on", "suggestions": [], "question": " The implementation shall honor floating-point exceptions raised by execution-time constant arithmetic wherever the state of the FENV_ACCESS pragma is this value.", "category": "MISC", "alternativeSpellings": [], "id":"1223"}
    ,
    {
"suggestions": [], "answer": "NaN", "category": "MATHEMATICS <MATH.H>", "question": " If a function with one or more NaN arguments returns this result, the result should be the same as one of the NaN arguments (after possible type conversion), except perhaps for the sign.", "id": "1224", "alternativeSpellings":[]}
    ,
    {
"id": "1225", "alternativeSpellings": [], "suggestions": [], "answer": "invalid", "category": "FUNCTIONS", "question":" If the correct result of the ilogb function is outside the range of the return type, the numeric result is unspecified and this floating-point exception is raised."}
    ,
    {
"id": "1226", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " The ceil functions may, but are not required to, raise this floating-point exception for finite non-integer arguments.", "suggestions": [], "answer":"inexact"}
    ,
    {
"alternativeSpellings": [], "id": "1227", "question": " The floor functions may, but are not required to, raise this floating-point exception for finite non-integer arguments.", "category": "FUNCTIONS", "suggestions": [], "answer":"inexact"}
    ,
    {
"alternativeSpellings": [], "id": "1228", "question": " If the rounded value returned by the lrint and llrint functions is outside the range of the return type, the numeric result is unspecified and this floating-point exception is raised.", "category": "FUNCTIONS", "suggestions": [], "answer":"invalid"}
    ,
    {
"answer": "inexact", "suggestions": [], "category": "FUNCTIONS", "question": " The round functions may, but are not required to, raise this floating-point exception for finite non-integer numeric arguments.", "id": "1229", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1230", "answer": "inexact", "suggestions": [], "question": " The trunc functions may, but are not required to, raise this floating-point exception for finite non-integer arguments.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1231", "answer": "_Complex", "suggestions": [], "question": " This type specifier is used to specify complex types.", "category":"TYPES"}
    ,
    {
"category": "TYPES", "question": " This type is used to specify imaginary types.", "answer": "_IMAGINARY", "suggestions": ["_COMPLEX"], "id": "1232", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1233", "suggestions": [], "answer": "infinity", "question": " A complex or imaginary value with at least one infinite part is regarded as this (even if its other part is a NaN).", "category":"CONVENTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1234", "answer": "positive zero", "suggestions": [], "question": " When a value of imaginary type is converted to a real type other than _Bool, the result is this.", "category":"REAL AND IMAGINARY"}
    ,
    {
"id": "1235", "alternativeSpellings": [], "suggestions": [], "answer": "positive imaginary zero", "category": "REAL AND IMAGINARY", "question":" When a value of real type is converted to an imaginary type, the result is this value."}
    ,
    {
"id": "1236", "alternativeSpellings": [], "answer": "positive zero", "suggestions": [], "category": "IMAGINARY AND COMPLEX", "question":" When a value of imaginary type is converted to a complex type, the real part of the complex result value is this value and the imaginary part of the complex result value is determined by the conversion rules for the corresponding real types."}
    ,
    {
"question": " When a value of complex type is converted to an imaginary type, this part of the complex value is discarded.", "category": "IMAGINARY AND COMPLEX", "suggestions": [], "answer": "real", "alternativeSpellings": [], "id":"1237"}
    ,
    {
"answer": "imaginary", "suggestions": [], "category": "MULTIPLICATIVE OPERATORS", "question": " If one operand of a multiplicative operator has real type and the other operand has imaginary type, then the result has this type.", "id": "1238", "alternativeSpellings":[]}
    ,
    {
"id": "1239", "alternativeSpellings": [], "category": "MULTIPLICATIVE OPERATORS", "question": " If both operands of a multiplicative operator have imaginary type, then the result has this type.", "answer": "real", "suggestions":[]}
    ,
    {
"question": " If both operands of the additive operators have imaginary type, then the result has this type.", "category": "ADDITIVE OPERATORS", "suggestions": [], "answer": "imaginary", "alternativeSpellings": [], "id":"1240"}
    ,
    {
"category": "TYPE CONVERSIONS", "question": " This function is useful for doing silent wrapping to unsigned integer types.", "suggestions": ["LABS"], "answer": "FMOD", "id": "1241", "alternativeSpellings":[]}
    ,
    {
"id": "1242", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " An example of this is when a new struct or union type appears in a function prototype.", "answer": "common warning", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1243", "answer": "common warning", "suggestions": [], "question": " An example of this is when a block with initialization of an object that has automatic storage duration is jumped into.", "category":"MISC"}
    ,
    {
"answer": "common warning", "suggestions": [], "category": "MISC", "question": " An example of this is when an implicit narrowing conversion is encountered, such as the assignment of a long int or a double to an int, or a pointer to void to a pointer to any type other than a character type.", "id": "1244", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1245", "suggestions": [], "answer": "common warning", "question": " An example of this is when a hexadecimal floating constant cannot be represented exactly in its evaluation format.", "category":"MISC"}
    ,
    {
"alternativeSpellings": [], "id": "1246", "question": " An example of this is when an integer character constant includes more than one character or a wide character constant includes more than one multibyte character.", "category": "MISC", "answer": "common warning", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1247", "answer": "common warning", "suggestions": [], "question": " An example of this is when the characters /* are found in a comment.", "category":"MISC"}
    ,
    {
"answer": "common warning", "suggestions": [], "category": "MISC", "question": " An example of this is when an ``unordered'' binary operator (not comma, &&, or \\|\\|) contains a side effect to an lvalue in one operand, and a side effect to, or an access to the value of, the identical lvalue in the other operand.", "id": "1248", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1249", "answer": "common warning", "suggestions": [], "question": " An example of this is when a function is called but no prototype has been supplied.", "category":"FUNCTIONS"}
    ,
    {
"alternativeSpellings": [], "id": "1250", "answer": "common warning", "suggestions": [], "question": " An example of this is when the arguments in a function call do not agree in number and type with those of the parameters in a function definition that is not a prototype.", "category":"FUNCTIONS"}
    ,
    {
"id": "1251", "alternativeSpellings": [], "suggestions": [], "answer": "common warning", "category": "MISC", "question":" An example of this is when an object is defined but not used."}
    ,
    {
"id": "1252", "alternativeSpellings": [], "suggestions": [], "answer": "common warning", "category": "FUNCTIONS", "question":" An example of this is when a value is given to an object of an enumerated type other than by assignment of an enumeration constant that is a member of that type, or an enumeration object that has the same type, or the value of a function that returns the same enumerated type."}
    ,
    {
"id": "1253", "alternativeSpellings": [], "suggestions": [], "answer": "common warning", "category": "MISC", "question":" An example of this is when an aggregate has a partly bracketed initialization."}
    ,
    {
"answer": "common warning", "suggestions": [], "question": " An example of this is when a statement cannot be reached.", "category": "STATEMENTS", "alternativeSpellings": [], "id":"1254"}
    ,
    {
"id": "1255", "alternativeSpellings": [], "answer": "common warning", "suggestions": [], "category": "STATEMENTS", "question":" An example of this is when a statement with no apparent effect is encountered."}
    ,
    {
"category": "STATEMENTS", "question": " An example of this is when a constant expression is used as the controlling expression of a selection statement.", "suggestions": [], "answer": "common warning", "id": "1256", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1257", "question": " An example of this is when an incorrectly formed preprocessing group is encountered while skipping a preprocessing group.", "category": "MISC", "answer": "common warning", "suggestions":[]}
    ,
    {
"category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is when a fully expanded macro replacement list contains a function-like macro name as its last preprocessing token and the next preprocessing token from the source file is a (, and the fully expanded replacement of that macro ends with the name of the first macro and another (, whether that is considered a nested replacement.", "answer": "unspecified behavior", "suggestions": [], "id": "1258", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1259", "question": " An example of this behavior is whether a call to the atexit function that does not happen before the exit function is called will succeed.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer":"unspecified behavior"}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "question": " An example of this behavior is whether a call to the at_quick_exit function that does not happen before the quick_exit function is called will succeed.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1260"}
    ,
    {
"id": "1261", "alternativeSpellings": [], "answer": "unspecified behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question":" An example of this behavior is the manner and timing of static initialization."}
    ,
    {
"alternativeSpellings": [], "id": "1262", "question": " An example of this behavior is the termination status returned to the hosted environment if the return type of main is not compatible with int.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer":"unspecified behavior"}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "question": " An example of this behavior is the values of objects that are neither lock-free atomic objects nor of type volatile sig_atomic_t and the state of the floating-point environment, when the processing of the abstract machine is interrupted by receipt of a signal.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1263"}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the behavior of the display device if a printing character is written when the active position is at the final position of a line.", "id": "1264", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "question": " An example of this behavior is the behavior of the display device if a backspace character is written when the active position is at the initial position of a line.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1265"}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "question": " An example of this behavior is the behavior of the display device if a horizontal tab character is written when the active position is at or past the last defined horizontal tabulation position.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1266"}
    ,
    {
"category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the behavior of the display device if a vertical tab character is written when the active position is at or past the last defined vertical tabulation position.", "answer": "unspecified behavior", "suggestions": [], "id": "1267", "alternativeSpellings":[]}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the value of padding bytes when storing values in structures or unions.", "id": "1268", "alternativeSpellings":[]}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "question": " An example of this behavior is the values of bytes that correspond to union members other than the one last stored into.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1269"}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "question": " An example of this behavior is the representation used when storing a value in an object that has more than one object representation for that value.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1270"}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the values of any padding bits in integer representations.", "id": "1271", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1272", "question": " An example of this behavior is whether certain operators can generate negative zeros and whether a negative zero becomes a normal zero when stored in an object.", "category": "GUESS THE BEHAVIOR", "answer": "unspecified behavior", "suggestions":[]}
    ,
    {
"category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is whether two string literals result in distinct arrays.", "suggestions": [], "answer": "unspecified behavior", "id": "1273", "alternativeSpellings":[]}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "question": " An example of this behavior is the order in which subexpressions are evaluated and the order in which side effects take place, except as specified for the function-call (), &&, \\|\\|, ? :, and comma operators.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1274"}
    ,
    {
"question": " An example of this behavior is the order in which the function designator, arguments, and subexpressions within the arguments are evaluated in a function call.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer": "unspecified behavior", "alternativeSpellings": [], "id":"1275"}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "question": " An example of this behavior is the order of side effects among compound literal initialization list expressions.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1276"}
    ,
    {
"alternativeSpellings": [], "id": "1277", "question": " An example of this behavior is the order in which the operands of an assignment operator are evaluated.", "category": "GUESS THE BEHAVIOR", "answer": "unspecified behavior", "suggestions":[]}
    ,
    {
"question": " An example of this behavior is the alignment of the addressable storage unit allocated to hold a bit-field.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer": "unspecified behavior", "alternativeSpellings": [], "id":"1278"}
    ,
    {
"category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is whether a call to an inline function uses the inline definition or the external definition of the function.", "suggestions": [], "answer": "unspecified behavior", "id": "1279", "alternativeSpellings":[]}
    ,
    {
"id": "1280", "alternativeSpellings": [], "suggestions": [], "answer": "unspecified behavior", "category": "GUESS THE BEHAVIOR", "question":" An example of this behavior is the order in which any side effects occur among the initialization list expressions in an initializer."}
    ,
    {
"answer": "unspecified behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the layout of storage for function parameters.", "id": "1281", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1282", "answer": "unspecified behavior", "suggestions": [], "question": " An example of this behavior is the order in which # and ## operations are evaluated during macro substitution.", "category":"GUESS THE BEHAVIOR"}
    ,
    {
"id": "1283", "alternativeSpellings": [], "answer": "unspecified behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question":" An example of this behavior is the details of the value stored by the fgetpos function."}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "question": " An example of this behavior is the details of the value returned by the ftell function for a text stream.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1284"}
    ,
    {
"id": "1285", "alternativeSpellings": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the order and contiguity of storage allocated by successive calls to the calloc, malloc, and realloc functions.", "suggestions": [], "answer":"unspecified behavior"}
    ,
    {
"question": " An example of this behavior is the amount of storage allocated by a successful call to the calloc, malloc, or realloc function when 0 bytes was requested.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer": "unspecified behavior", "alternativeSpellings": [], "id":"1286"}
    ,
    {
"id": "1287", "alternativeSpellings": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is which of two elements that compare as equal is matched by the bsearch function.", "answer": "unspecified behavior", "suggestions":[]}
    ,
    {
"question": " An example of this behavior is the order of two elements that compare as equal in an array sorted by the qsort function.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer": "unspecified behavior", "alternativeSpellings": [], "id":"1288"}
    ,
    {
"suggestions": [], "answer": "unspecified behavior", "question": " An example of this behavior is the encoding of the calendar time returned by the time function.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1289"}
    ,
    {
"category": "MISC", "question": " An example of this is when a nonempty source file does not end in a new-line character which is not immediately preceded by a backslash character or ends in a partial preprocessing token or comment.", "suggestions": [], "answer": "undefined behavior", "id": "1290", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1291", "answer": "undefined behavior", "suggestions": [], "question": " An example of this is when an object is referred to outside of its lifetime.", "category":"MISC"}
    ,
    {
"suggestions": [], "answer": "undefined behavior", "category": "MISC", "question": " An example of this is when a pointer is converted to other than an integer or pointer type.", "id": "1292", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1293", "suggestions": [], "answer": "undefined behavior", "question": " An example of this is when an expression is shifted by a negative number or by an amount greater than or equal to the width of the promoted expression.", "category":"MISC"}
    ,
    {
"question": " An example of this is when a file with the same name as one of the standard headers, not provided as part of the implementation, is placed in any of the standard places that are searched for included source files.", "category": "MISC", "suggestions": [], "answer": "undefined behavior", "alternativeSpellings": [], "id":"1294"}
    ,
    {
"category": "MISC", "question": " An example of this is when a macro definition of errno is suppressed in order to access an actual object, or the program defines an identifier with the name errno.", "answer": "undefined behavior", "suggestions": [], "id": "1295", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1296", "answer": "undefined behavior", "suggestions": [], "question": " An example of this is when a signal occurs as the result of calling the abort or raise function, and the signal handler calls the raise function.", "category":"FUNCTIONS"}
    ,
    {
"category": "FUNCTIONS", "question": " An example of this is when the signal function is used in a multi-threaded program.", "answer": "undefined behavior", "suggestions": [], "id": "1297", "alternativeSpellings":[]}
    ,
    {
"answer": "undefined behavior", "suggestions": [], "question": " An example of this is when an output operation on an update stream is followed by an input operation without an intervening call to the fflush function or a file positioning function, or an input operation on an update stream is followed by an output operation with an intervening call to a file positioning function.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1298"}
    ,
    {
"id": "1299", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " An example of this is when a partial element read by a call to the fread function is used.", "suggestions": [], "answer":"undefined behavior"}
    ,
    {
"id": "1300", "alternativeSpellings": [], "category": "FUNCTIONS", "question": " An example of this is when the fseek function is called for a text stream with a nonzero offset and either the offset was not returned by a previous successful call to the ftell function on a stream associated with the same file or whence is not SEEK_SET.", "suggestions": [], "answer":"undefined behavior"}
    ,
    {
"alternativeSpellings": [], "id": "1301", "question": " An example of this is when the fsetpos function is called to set a position that was not returned by a previous successful call to the fgetpos function on a stream associated with the same file.", "category": "FUNCTIONS", "answer": "undefined behavior", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "undefined behavior", "question": " An example of this is when a signal is raised while the quick_exit function is executing.", "category": "FUNCTIONS", "alternativeSpellings": [], "id":"1302"}
    ,
    {
"question": " An example of this is when a complex argument is supplied for a generic parameter of a type-generic macro that has no corresponding complex function.", "category": "FUNCTIONS", "answer": "undefined behavior", "suggestions": [], "alternativeSpellings": [], "id":"1303"}
    ,
    {
"id": "1304", "alternativeSpellings": [], "suggestions": [], "answer": "document", "category": "IMPLEMENTATION-DEFINED BEHAVIOR", "question":" A conforming implementation is required to do this for its choice of behavior for implementation-defined behavior."}
    ,
    {
"answer": "implementation-defined", "suggestions": [], "question": " A conforming implementation is required to document its choice of behavior for this kind of behavior.", "category": "MISC", "alternativeSpellings": [], "id":"1305"}
    ,
    {
"id": "1306", "alternativeSpellings": [], "suggestions": [], "answer": "implementation-defined behavior", "category": "GUESS THE BEHAVIOR", "question":" An example of this behavior is the result of converting a pointer to an integer or vice versa."}
    ,
    {
"alternativeSpellings": [], "id": "1307", "answer": "implementation-defined behavior", "suggestions": [], "question": " An example of this behavior is the size of the result of subtracting two pointers to elements of the same array.", "category":"GUESS THE BEHAVIOR"}
    ,
    {
"alternativeSpellings": [], "id": "1308", "answer": "implementation-defined behavior", "suggestions": [], "question": " An example of this behavior is the extent to which suggestions made by using the register storage-class specifier are effective.", "category":"GUESS THE BEHAVIOR"}
    ,
    {
"alternativeSpellings": [], "id": "1309", "question": " An example of this behavior is the extent to which suggestions made by using the inline function specifier are effective.", "category": "GUESS THE BEHAVIOR", "answer": "implementation-defined behavior", "suggestions":[]}
    ,
    {
"question": " An example of this behavior is what constitutes an access to an object that has volatile-qualified type.", "category": "GUESS THE BEHAVIOR", "suggestions": [], "answer": "implementation-defined behavior", "alternativeSpellings": [], "id":"1310"}
    ,
    {
"answer": "implementation-defined behavior", "suggestions": [], "question": " An example of this behavior is whether the calloc, malloc, and realloc functions return a null pointer or a pointer to an allocated object when the size requested is zero.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1311"}
    ,
    {
"answer": "implementation-defined behavior", "suggestions": [], "question": " An example of this behavior is whether or not the strtod, strtof, strtold, wcstod, wcstof, or wcstold function sets errno to ERANGE when underflow occurs.", "category": "GUESS THE BEHAVIOR", "alternativeSpellings": [], "id":"1312"}
    ,
    {
"id": "1313", "alternativeSpellings": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the value to which the macro errno is set by the fgetpos, fsetpos, or ftell functions on failure.", "suggestions": [], "answer":"implementation-defined behavior"}
    ,
    {
"id": "1314", "alternativeSpellings": [], "answer": "implementation-defined behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question":" An example of this behavior is the number of bits in a byte."}
    ,
    {
"alternativeSpellings": [], "id": "1315", "question": " An example of this behavior is whether open streams with unwritten buffered data are flushed, open streams are closed, or temporary files are removed when the abort or _Exit function is called.", "category": "LIBRARY FUNCTIONS", "answer": "implementation-defined behavior", "suggestions":[]}
    ,
    {
"id": "1316", "alternativeSpellings": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the presence, meaning, and representation of additional multibyte characters in the execution character set beyond the basic character set.", "answer": "locale-specific behavior", "suggestions":[]}
    ,
    {
"alternativeSpellings": [], "id": "1317", "question": " An example of this behavior is the direction of writing of successive printing characters.", "category": "GUESS THE BEHAVIOR", "answer": "locale-specific behavior", "suggestions":[]}
    ,
    {
"category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is the decimal-point character.", "suggestions": [], "answer": "locale-specific behavior", "id": "1318", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1319", "answer": "locale-specific behavior", "suggestions": [], "question": " An example of this behavior is the sets of characters tested for by the isalpha, isblank, islower, ispunct, isspace, isupper, iswalpha, iswblank, iswlower, iswpunct, iswspace, or iswupper functions.", "category":"GUESS THE BEHAVIOR"}
    ,
    {
"answer": "locale-specific behavior", "suggestions": [], "category": "GUESS THE BEHAVIOR", "question": " An example of this behavior is additional subject sequences accepted by the numeric conversion functions.", "id": "1320", "alternativeSpellings":[]}
    ,
    {
"question": " An example of this behavior is the collation sequence of the execution character set.", "category": "GUESS THE BEHAVIOR", "answer": "locale-specific behavior", "suggestions": [], "alternativeSpellings": [], "id":"1321"}
    ,
    {
"alternativeSpellings": [], "id": "1322", "question": " An example of this behavior is the formats for time and date.", "category": "GUESS THE BEHAVIOR", "answer": "locale-specific behavior", "suggestions":[]}
    ,
    {
"suggestions": [], "answer": "common-extension", "question": " An example of this is modifiable/writable string-literals being allowed.", "category": "WRITABLE STRING LITERALS", "alternativeSpellings": [], "id":"1323"}
    ,
    {
"alternativeSpellings": [], "id": "1324", "question": " An example of this is defining additional arithmetic types such as __int128 or double double.", "category": "OTHER ARITHMETIC TYPES", "suggestions": [], "answer":"common-extension"}
    ,
    {
"suggestions": [], "answer": "common-extension", "question": " An example of this is casting a pointer to an object or to void to a pointer to a function, allowing data to be invoked as a function.", "category": "FUNCTION POINTER CASTS", "alternativeSpellings": [], "id":"1325"}
    ,
    {
"suggestions": [], "answer": "common-extension", "category": "FUNCTION POINTER CASTS", "question": " An example of this is casting a pointer to a function to a pointer to an object or to void, allowing a function to be inspected or modified (for example, by a debugger).", "id": "1326", "alternativeSpellings":[]}
    ,
    {
"question": " This keyword may be used to insert assembly language directly into the translator output.", "category": "THE ASM KEYWORD", "answer": "asm", "suggestions": [], "alternativeSpellings": [], "id":"1327"}
    ,
    {
"answer": "fortran", "suggestions": [], "question": " This function specifier may be used in a function declaration to indicate that calls suitable for FORTRAN should be generated, or that a different representation for the external name is to be generated.", "category": "THE FORTRAN KEYWORD", "alternativeSpellings": [], "id":"1328"}
    ,
    {
"id": "1329", "alternativeSpellings": [], "category": "FLOATING-POINT STATUS FLAGS", "question": " If any floating-point status flags are set on normal termination after all calls to functions registered by this function have been made, the implementation writes some diagnostics indicating the fact to the stderr stream, if it is still open.", "suggestions": [], "answer":"atexit"}
    ,
    {
"answer": "run-time constraints", "suggestions": [], "category": "RUNTIME-CONSTRAINT VIOLATIONS", "question": " Implementations shall verify that these for a function ending with _s are not violated by the program.", "id": "1330", "alternativeSpellings":[]}
    ,
    {
"alternativeSpellings": [], "id": "1331", "suggestions": [], "answer": "indication of failure", "question": " If the runtime-constraint handler does return, the library function whose runtime-constraint was violated shall return this as given by the returns section in the function's specification.", "category":"RUNTIME-CONSTRAINT VIOLATIONS"}
    ,
    {
"id": "1332", "alternativeSpellings": [], "answer": "runtime-constraint handler", "suggestions": [], "category": "REQUIREMENTS", "question":" If the program performs a trap, the implementation is permitted to invoke this."}
]}
